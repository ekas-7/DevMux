{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"livekit-client.esm.mjs","sources":["file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40livekit%2Bmutex%401.1.1/node_modules/%40livekit/mutex/dist/index.mjs","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/assert.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/enum.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/message.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/message-type.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/google/varint.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/proto-int64.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/scalar.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/scalars.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/binary-encoding.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/extensions.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/proto-base64.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/extension-accessor.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/reflect.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/is-message.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/field-wrapper.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/json-format.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/binary-format.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/util-common.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/proto-runtime.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/field-list.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/names.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/field.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/private/field-normalize.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/proto3.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40bufbuild%2Bprotobuf%401.10.0/node_modules/%40bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/%40livekit%2Bprotocol%401.30.0/node_modules/%40livekit/protocol/dist/index.mjs","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/loglevel%401.9.2/node_modules/loglevel/lib/loglevel.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/logger.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/DefaultReconnectPolicy.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/events%403.3.0/node_modules/events/events.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/utils.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/safari/safari_shim.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/sdp%403.2.0/node_modules/sdp/sdp.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/common_shim.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/adapter_factory.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/webrtc-adapter%409.0.1/node_modules/webrtc-adapter/src/js/adapter_core.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/e2ee/constants.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/e2ee/events.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/e2ee/utils.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/e2ee/KeyProvider.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/errors.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/e2ee/errors.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/events.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/ts-debounce%404.0.0/node_modules/ts-debounce/dist/src/index.esm.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/utils/browserParser.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/version.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/timers.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/options.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/utils/cloneDeep.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/Track.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/utils.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/utils.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/DeviceManager.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/LocalTrack.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/e2ee/E2eeManager.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/utils/AsyncQueue.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/api/SignalClient.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/sdp-transform%402.15.0/node_modules/sdp-transform/lib/grammar.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/sdp-transform%402.15.0/node_modules/sdp-transform/lib/parser.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/sdp-transform%402.15.0/node_modules/sdp-transform/lib/writer.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/node_modules/.pnpm/sdp-transform%402.15.0/node_modules/sdp-transform/lib/index.js","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/PCTransport.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/defaults.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/PCTransportManager.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/stats.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/LocalAudioTrack.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/participant/publishUtils.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/LocalVideoTrack.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/RTCEngine.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/RegionUrlProvider.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/rpc.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/RemoteTrack.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/RemoteAudioTrack.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/RemoteVideoTrack.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/TrackPublication.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/LocalTrackPublication.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/participant/Participant.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/participant/ParticipantTrackPermission.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/participant/LocalParticipant.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/RemoteTrackPublication.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/participant/RemoteParticipant.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/Room.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/Checker.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/create.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/publishAudio.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/publishVideo.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/reconnect.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/turn.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/webrtc.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/checks/websocket.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/connectionHelper/ConnectionCheck.ts","file:///Users/ekaspreetsinghatwal/DevMux/node_modules/livekit-client/src/room/track/facingMode.ts"],"sourcesContent":["var e = Object.defineProperty;\nvar h = (i, s, t) => s in i ? e(i, s, { enumerable: !0, configurable: !0, writable: !0, value: t }) : i[s] = t;\nvar o = (i, s, t) => h(i, typeof s != \"symbol\" ? s + \"\" : s, t);\nclass _ {\n  constructor() {\n    o(this, \"_locking\");\n    o(this, \"_locks\");\n    this._locking = Promise.resolve(), this._locks = 0;\n  }\n  isLocked() {\n    return this._locks > 0;\n  }\n  lock() {\n    this._locks += 1;\n    let s;\n    const t = new Promise(\n      (l) => s = () => {\n        this._locks -= 1, l();\n      }\n    ), c = this._locking.then(() => s);\n    return this._locking = this._locking.then(() => t), c;\n  }\n}\nclass n {\n  constructor(s) {\n    o(this, \"_queue\");\n    o(this, \"_limit\");\n    o(this, \"_locks\");\n    this._queue = [], this._limit = s, this._locks = 0;\n  }\n  isLocked() {\n    return this._locks >= this._limit;\n  }\n  async lock() {\n    return this.isLocked() ? new Promise((s) => {\n      this._queue.push(() => {\n        this._locks++, s(this._unlock.bind(this));\n      });\n    }) : (this._locks++, this._unlock.bind(this));\n  }\n  _unlock() {\n    if (this._locks--, this._queue.length && !this.isLocked()) {\n      const s = this._queue.shift();\n      s == null || s();\n    }\n  }\n}\nexport {\n  n as MultiMutex,\n  _ as Mutex\n};\n//# sourceMappingURL=index.mjs.map\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nexport function assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./assert.js\";\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nexport function getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    assert(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nexport function setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nexport function makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nexport function makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nexport class Message {\n    /**\n     * Compare with a message of the same type.\n     * Note that this function disregards extensions and unknown fields.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\n/**\n * Create a new message type using the given runtime.\n */\nexport function makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./google/varint.js\";\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nexport const protoInt64 = makeInt64Support();\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript BigInt.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript String.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nexport function scalarZeroValue(type, longType) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            return (longType == 0 ? protoInt64.zero : \"0\");\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nexport function isScalarZeroValue(type, value) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return value === false;\n        case ScalarType.STRING:\n            return value === \"\";\n        case ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./google/varint.js\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./private/assert.js\";\nimport { protoInt64 } from \"./proto-int64.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { WireType } from \"../binary-encoding.js\";\n/**\n * Create a new extension using the given runtime.\n */\nexport function makeExtension(runtime, typeName, extendee, field) {\n    let fi;\n    return {\n        typeName,\n        extendee,\n        get field() {\n            if (!fi) {\n                const i = (typeof field == \"function\" ? field() : field);\n                i.name = typeName.split(\".\").pop();\n                i.jsonName = `[${typeName}]`;\n                fi = runtime.util.newFieldList([i]).list()[0];\n            }\n            return fi;\n        },\n        runtime,\n    };\n}\n/**\n * Create a container that allows us to read extension fields into it with the\n * same logic as regular fields.\n */\nexport function createExtensionContainer(extension) {\n    const localName = extension.field.localName;\n    const container = Object.create(null);\n    container[localName] = initExtensionField(extension);\n    return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n    const field = ext.field;\n    if (field.repeated) {\n        return [];\n    }\n    if (field.default !== undefined) {\n        return field.default;\n    }\n    switch (field.kind) {\n        case \"enum\":\n            return field.T.values[0].no;\n        case \"scalar\":\n            return scalarZeroValue(field.T, field.L);\n        case \"message\":\n            // eslint-disable-next-line no-case-declarations\n            const T = field.T, value = new T();\n            return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n        case \"map\":\n            throw \"map fields are not allowed to be extensions\";\n    }\n}\n/**\n * Helper to filter unknown fields, optimized based on field type.\n */\nexport function filterUnknownFields(unknownFields, field) {\n    if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n        // singular scalar fields do not merge, we pick the last\n        for (let i = unknownFields.length - 1; i >= 0; --i) {\n            if (unknownFields[i].no == field.no) {\n                return [unknownFields[i]];\n            }\n        }\n        return [];\n    }\n    return unknownFields.filter((uf) => uf.no === field.no);\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nexport const protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { createExtensionContainer, filterUnknownFields, } from \"./private/extensions.js\";\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function getExtension(message, extension, options) {\n    assertExtendee(extension, message);\n    const opt = extension.runtime.bin.makeReadOptions(options);\n    const ufs = filterUnknownFields(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n    const [container, get] = createExtensionContainer(extension);\n    for (const uf of ufs) {\n        extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n    }\n    return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function setExtension(message, extension, value, options) {\n    assertExtendee(extension, message);\n    const readOpt = extension.runtime.bin.makeReadOptions(options);\n    const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n    if (hasExtension(message, extension)) {\n        const ufs = message\n            .getType()\n            .runtime.bin.listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        message.getType().runtime.bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            message\n                .getType()\n                .runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n    const writer = writeOpt.writerFactory();\n    let f = extension.field;\n    // Implicit presence does not apply to extensions, see https://github.com/protocolbuffers/protobuf/issues/8234\n    // We patch the field info to use explicit presence:\n    if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n        f = Object.assign(Object.assign({}, extension.field), { opt: true });\n    }\n    extension.runtime.bin.writeField(f, value, writer, writeOpt);\n    const reader = readOpt.readerFactory(writer.finish());\n    while (reader.pos < reader.len) {\n        const [no, wireType] = reader.tag();\n        const data = reader.skip(wireType, no);\n        message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n    }\n}\n/**\n * Remove an extension value from a message.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function clearExtension(message, extension) {\n    assertExtendee(extension, message);\n    if (hasExtension(message, extension)) {\n        const bin = message.getType().runtime.bin;\n        const ufs = bin\n            .listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n}\n/**\n * Check whether an extension is set on a message.\n */\nexport function hasExtension(message, extension) {\n    const messageType = message.getType();\n    return (extension.extendee.typeName === messageType.typeName &&\n        !!messageType.runtime.bin\n            .listUnknownFields(message)\n            .find((uf) => uf.no == extension.field.no));\n}\nfunction assertExtendee(extension, message) {\n    assert(extension.extendee.typeName == message.getType().typeName, `extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isScalarZeroValue, scalarZeroValue } from \"./scalars.js\";\n/**\n * Returns true if the field is set.\n */\nexport function isFieldSet(field, target) {\n    const localName = field.localName;\n    if (field.repeated) {\n        return target[localName].length > 0;\n    }\n    if (field.oneof) {\n        return target[field.oneof.localName].case === localName; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    switch (field.kind) {\n        case \"enum\":\n        case \"scalar\":\n            if (field.opt || field.req) {\n                // explicit presence\n                return target[localName] !== undefined;\n            }\n            // implicit presence\n            if (field.kind == \"enum\") {\n                return target[localName] !== field.T.values[0].no;\n            }\n            return !isScalarZeroValue(field.T, target[localName]);\n        case \"message\":\n            return target[localName] !== undefined;\n        case \"map\":\n            return Object.keys(target[localName]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n    }\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nexport function clearField(field, target) {\n    const localName = field.localName;\n    const implicitPresence = !field.opt && !field.req;\n    if (field.repeated) {\n        target[localName] = [];\n    }\n    else if (field.oneof) {\n        target[field.oneof.localName] = { case: undefined };\n    }\n    else {\n        switch (field.kind) {\n            case \"map\":\n                target[localName] = {};\n                break;\n            case \"enum\":\n                target[localName] = implicitPresence ? field.T.values[0].no : undefined;\n                break;\n            case \"scalar\":\n                target[localName] = implicitPresence\n                    ? scalarZeroValue(field.T, field.L)\n                    : undefined;\n                break;\n            case \"message\":\n                target[localName] = undefined;\n                break;\n        }\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"./message.js\";\n/**\n * Check whether the given object is any subtype of Message or is a specific\n * Message by passing the type.\n *\n * Just like `instanceof`, `isMessage` narrows the type. The advantage of\n * `isMessage` is that it compares identity by the message type name, not by\n * class identity. This makes it robust against the dual package hazard and\n * similar situations, where the same message is duplicated.\n *\n * This function is _mostly_ equivalent to the `instanceof` operator. For\n * example, `isMessage(foo, MyMessage)` is the same as `foo instanceof MyMessage`,\n * and `isMessage(foo)` is the same as `foo instanceof Message`. In most cases,\n * `isMessage` should be preferred over `instanceof`.\n *\n * However, due to the fact that `isMessage` does not use class identity, there\n * are subtle differences between this function and `instanceof`. Notably,\n * calling `isMessage` on an explicit type of Message will return false.\n */\nexport function isMessage(arg, type) {\n    if (arg === null || typeof arg != \"object\") {\n        return false;\n    }\n    if (!Object.getOwnPropertyNames(Message.prototype).every((m) => m in arg && typeof arg[m] == \"function\")) {\n        return false;\n    }\n    const actualType = arg.getType();\n    if (actualType === null ||\n        typeof actualType != \"function\" ||\n        !(\"typeName\" in actualType) ||\n        typeof actualType.typeName != \"string\") {\n        return false;\n    }\n    return type === undefined ? true : actualType.typeName == type.typeName;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nexport function wrapField(type, value) {\n    if (isMessage(value) || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nexport function getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": ScalarType.BOOL,\n    \"google.protobuf.StringValue\": ScalarType.STRING,\n    \"google.protobuf.BytesValue\": ScalarType.BYTES,\n};\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { protoBase64 } from \"../proto-base64.js\";\nimport { createExtensionContainer } from \"./extensions.js\";\nimport { getExtension, hasExtension, setExtension, } from \"../extension-accessor.js\";\nimport { clearField, isFieldSet } from \"./reflect.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { isScalarZeroValue } from \"./scalars.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable no-case-declarations,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nconst tokenNull = Symbol();\nconst tokenIgnoredUnknownEnum = Symbol();\nexport function makeJsonFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = new Map();\n            const registry = options.typeRegistry;\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (field) {\n                    if (field.oneof) {\n                        if (jsonValue === null && field.kind == \"scalar\") {\n                            // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                            continue;\n                        }\n                        const seen = oneofSeen.get(field.oneof);\n                        if (seen !== undefined) {\n                            throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                        }\n                        oneofSeen.set(field.oneof, jsonKey);\n                    }\n                    readField(message, jsonValue, field, options, type);\n                }\n                else {\n                    let found = false;\n                    if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) &&\n                        jsonKey.startsWith(\"[\") &&\n                        jsonKey.endsWith(\"]\")) {\n                        const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n                        if (ext && ext.extendee.typeName == type.typeName) {\n                            found = true;\n                            const [container, get] = createExtensionContainer(ext);\n                            readField(container, jsonValue, ext.field, options, ext);\n                            // We pass on the options as BinaryReadOptions/BinaryWriteOptions,\n                            // so that users can bring their own binary reader and writer factories\n                            // if necessary.\n                            setExtension(message, ext, get(), options);\n                        }\n                    }\n                    if (!found && !options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    if (!isFieldSet(field, message)) {\n                        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                        if (field.req) {\n                            throw `required field not set`;\n                        }\n                        if (!options.emitDefaultValues) {\n                            continue;\n                        }\n                        if (!canEmitFieldDefaultValue(field)) {\n                            continue;\n                        }\n                    }\n                    const value = field.oneof\n                        ? message[field.oneof.localName].value\n                        : message[field.localName];\n                    const jsonValue = writeField(field, value, options);\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n                const registry = options.typeRegistry;\n                if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n                    for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                        const ext = registry.findExtensionFor(type.typeName, uf.no);\n                        if (ext && hasExtension(message, ext)) {\n                            // We pass on the options as BinaryReadOptions, so that users can bring their own\n                            // binary reader factory if necessary.\n                            const value = getExtension(message, ext, options);\n                            const jsonValue = writeField(ext.field, value, options);\n                            if (jsonValue !== undefined) {\n                                json[ext.field.jsonName] = jsonValue;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar(type, json, longType) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            return readScalar(type, json, longType !== null && longType !== void 0 ? longType : LongType.BIGINT, true);\n        },\n        writeScalar(type, value, emitDefaultValues) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            if (emitDefaultValues || isScalarZeroValue(type, value)) {\n                return writeScalar(type, value);\n            }\n            return undefined;\n        },\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return String(json);\n    }\n}\n// Read a JSON value for a field.\n// The \"parentType\" argument is only used to provide context in errors.\nfunction readField(target, jsonValue, field, options, parentType) {\n    let localName = field.localName;\n    if (field.repeated) {\n        assert(field.kind != \"map\");\n        if (jsonValue === null) {\n            return;\n        }\n        if (!Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetArray = target[localName];\n        for (const jsonItem of jsonValue) {\n            if (jsonItem === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`);\n            }\n            switch (field.kind) {\n                case \"message\":\n                    targetArray.push(field.T.fromJson(jsonItem, options));\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetArray.push(enumValue);\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetArray.push(readScalar(field.T, jsonItem, field.L, true));\n                    }\n                    catch (e) {\n                        let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else if (field.kind == \"map\") {\n        if (jsonValue === null) {\n            return;\n        }\n        if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetMap = target[localName];\n        for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n            if (jsonMapValue === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: map value null`);\n            }\n            let key;\n            try {\n                key = readMapKey(field.K, jsonMapKey);\n            }\n            catch (e) {\n                let m = `cannot decode map key for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                if (e instanceof Error && e.message.length > 0) {\n                    m += `: ${e.message}`;\n                }\n                throw new Error(m);\n            }\n            switch (field.V.kind) {\n                case \"message\":\n                    targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetMap[key] = enumValue;\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetMap[key] = readScalar(field.V.T, jsonMapValue, LongType.BIGINT, true);\n                    }\n                    catch (e) {\n                        let m = `cannot decode map value for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else {\n        if (field.oneof) {\n            target = target[field.oneof.localName] = { case: localName };\n            localName = \"value\";\n        }\n        switch (field.kind) {\n            case \"message\":\n                const messageType = field.T;\n                if (jsonValue === null &&\n                    messageType.typeName != \"google.protobuf.Value\") {\n                    return;\n                }\n                let currentValue = target[localName];\n                if (isMessage(currentValue)) {\n                    currentValue.fromJson(jsonValue, options);\n                }\n                else {\n                    target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n                    if (messageType.fieldWrapper && !field.oneof) {\n                        target[localName] =\n                            messageType.fieldWrapper.unwrapField(currentValue);\n                    }\n                }\n                break;\n            case \"enum\":\n                const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n                switch (enumValue) {\n                    case tokenNull:\n                        clearField(field, target);\n                        break;\n                    case tokenIgnoredUnknownEnum:\n                        break;\n                    default:\n                        target[localName] = enumValue;\n                        break;\n                }\n                break;\n            case \"scalar\":\n                try {\n                    const scalarValue = readScalar(field.T, jsonValue, field.L, false);\n                    switch (scalarValue) {\n                        case tokenNull:\n                            clearField(field, target);\n                            break;\n                        default:\n                            target[localName] = scalarValue;\n                            break;\n                    }\n                }\n                catch (e) {\n                    let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                    if (e instanceof Error && e.message.length > 0) {\n                        m += `: ${e.message}`;\n                    }\n                    throw new Error(m);\n                }\n                break;\n        }\n    }\n}\nfunction readMapKey(type, json) {\n    if (type === ScalarType.BOOL) {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (json) {\n            case \"true\":\n                json = true;\n                break;\n            case \"false\":\n                json = false;\n                break;\n        }\n    }\n    return readScalar(type, json, LongType.BIGINT, true).toString();\n}\nfunction readScalar(type, json, longType, nullAsZeroValue) {\n    if (json === null) {\n        if (nullAsZeroValue) {\n            return scalarZeroValue(type, longType);\n        }\n        return tokenNull;\n    }\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == ScalarType.FLOAT)\n                assertFloat32(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.UINT32:\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == ScalarType.UINT32 || type == ScalarType.FIXED32)\n                assertUInt32(int32);\n            else\n                assertInt32(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const long = protoInt64.parse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? long.toString() : long;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const uLong = protoInt64.uParse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? uLong.toString() : uLong;\n        // bool:\n        case ScalarType.BOOL:\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case ScalarType.STRING:\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            if (json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n    if (json === null) {\n        if (type.typeName == \"google.protobuf.NullValue\") {\n            return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n        }\n        return nullAsZeroValue ? type.values[0].no : tokenNull;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value !== undefined) {\n                return value.no;\n            }\n            if (ignoreUnknownFields) {\n                return tokenIgnoredUnknownEnum;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\n// Decide whether an unset field should be emitted with JSON write option `emitDefaultValues`\nfunction canEmitFieldDefaultValue(field) {\n    if (field.repeated || field.kind == \"map\") {\n        // maps are {}, repeated fields are []\n        return true;\n    }\n    if (field.oneof) {\n        // oneof fields are never emitted\n        return false;\n    }\n    if (field.kind == \"message\") {\n        // singular message field are allowed to emit JSON null, but we do not\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.opt || field.req) {\n        // the field uses explicit presence, so we cannot emit a zero value\n        return false;\n    }\n    return true;\n}\nfunction writeField(field, value, options) {\n    if (field.kind == \"map\") {\n        assert(typeof value == \"object\" && value != null);\n        const jsonObj = {};\n        const entries = Object.entries(value);\n        switch (field.V.kind) {\n            case \"scalar\":\n                for (const [entryKey, entryValue] of entries) {\n                    jsonObj[entryKey.toString()] = writeScalar(field.V.T, entryValue); // JSON standard allows only (double quoted) string as property key\n                }\n                break;\n            case \"message\":\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                }\n                break;\n            case \"enum\":\n                const enumType = field.V.T;\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n                }\n                break;\n        }\n        return options.emitDefaultValues || entries.length > 0\n            ? jsonObj\n            : undefined;\n    }\n    if (field.repeated) {\n        assert(Array.isArray(value));\n        const jsonArr = [];\n        switch (field.kind) {\n            case \"scalar\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeScalar(field.T, value[i]));\n                }\n                break;\n            case \"enum\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n                }\n                break;\n            case \"message\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(value[i].toJson(options));\n                }\n                break;\n        }\n        return options.emitDefaultValues || jsonArr.length > 0\n            ? jsonArr\n            : undefined;\n    }\n    switch (field.kind) {\n        case \"scalar\":\n            return writeScalar(field.T, value);\n        case \"enum\":\n            return writeEnum(field.T, value, options.enumAsInteger);\n        case \"message\":\n            return wrapField(field.T, value).toJson(options);\n    }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n    var _a;\n    assert(typeof value == \"number\");\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value) {\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            assert(typeof value == \"number\");\n            return value;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.FLOAT:\n        // assertFloat32(value);\n        case ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            assert(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value;\n        // string:\n        case ScalarType.STRING:\n            assert(typeof value == \"string\");\n            return value;\n        // bool:\n        case ScalarType.BOOL:\n            assert(typeof value == \"boolean\");\n            return value;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            assert(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            return value.toString();\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            assert(value instanceof Uint8Array);\n            return protoBase64.enc(value);\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BinaryReader, BinaryWriter, WireType } from \"../binary-encoding.js\";\nimport { Message } from \"../message.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { assert } from \"./assert.js\";\nimport { isFieldSet } from \"./reflect.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nexport function makeBinaryFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n            const type = message.getType();\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            const end = delimitedMessageEncoding\n                ? reader.len\n                : reader.pos + lengthOrEndTagFieldNo;\n            let fieldNo, wireType;\n            while (reader.pos < end) {\n                [fieldNo, wireType] = reader.tag();\n                if (delimitedMessageEncoding === true &&\n                    wireType == WireType.EndGroup) {\n                    break;\n                }\n                const field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType, fieldNo);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                readField(message, reader, field, wireType, options);\n            }\n            if (delimitedMessageEncoding && // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n                (wireType != WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n                throw new Error(`invalid end group tag`);\n            }\n        },\n        readField,\n        writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                if (!isFieldSet(field, message)) {\n                    if (field.req) {\n                        throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                    }\n                    continue;\n                }\n                const value = field.oneof\n                    ? message[field.oneof.localName].value\n                    : message[field.localName];\n                writeField(field, value, writer, options);\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        },\n        writeField(field, value, writer, options) {\n            // The behavior of our internal function has changed, it does no longer\n            // accept `undefined` values for singular scalar and map.\n            // For backwards-compatibility, we support the old form that is part of\n            // the public API through the interface BinaryFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            writeField(field, value, writer, options);\n        },\n    };\n}\nfunction readField(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nreader, field, wireType, options) {\n    let { repeated, localName } = field;\n    if (field.oneof) {\n        target = target[field.oneof.localName];\n        if (target.case != localName) {\n            delete target.value;\n        }\n        target.case = localName;\n        localName = \"value\";\n    }\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n            let read = readScalar;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            if (field.kind == \"scalar\" && field.L > 0) {\n                read = readScalarLTString;\n            }\n            if (repeated) {\n                let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                const isPacked = wireType == WireType.LengthDelimited &&\n                    scalarType != ScalarType.STRING &&\n                    scalarType != ScalarType.BYTES;\n                if (isPacked) {\n                    let e = reader.uint32() + reader.pos;\n                    while (reader.pos < e) {\n                        arr.push(read(reader, scalarType));\n                    }\n                }\n                else {\n                    arr.push(read(reader, scalarType));\n                }\n            }\n            else {\n                target[localName] = read(reader, scalarType);\n            }\n            break;\n        case \"message\":\n            const messageType = field.T;\n            if (repeated) {\n                // safe to assume presence of array, oneof cannot contain repeated values\n                target[localName].push(readMessageField(reader, new messageType(), options, field));\n            }\n            else {\n                if (isMessage(target[localName])) {\n                    readMessageField(reader, target[localName], options, field);\n                }\n                else {\n                    target[localName] = readMessageField(reader, new messageType(), options, field);\n                    if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n                        target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                    }\n                }\n            }\n            break;\n        case \"map\":\n            let [mapKey, mapVal] = readMapEntry(field, reader, options);\n            // safe to assume presence of map object, oneof cannot contain repeated values\n            target[localName][mapKey] = mapVal;\n            break;\n    }\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options, field) {\n    const format = message.getType().runtime.bin;\n    const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n    format.readMessage(message, reader, delimited ? field.no : reader.uint32(), // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n    options, delimited);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options, undefined);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = scalarZeroValue(field.K, LongType.BIGINT);\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = scalarZeroValue(field.V.T, LongType.BIGINT);\n                break;\n            case \"enum\":\n                val = field.V.T.values[0].no;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nfunction readScalarLTString(reader, type) {\n    const v = readScalar(reader, type);\n    return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case ScalarType.STRING:\n            return reader.string();\n        case ScalarType.BOOL:\n            return reader.bool();\n        case ScalarType.DOUBLE:\n            return reader.double();\n        case ScalarType.FLOAT:\n            return reader.float();\n        case ScalarType.INT32:\n            return reader.int32();\n        case ScalarType.INT64:\n            return reader.int64();\n        case ScalarType.UINT64:\n            return reader.uint64();\n        case ScalarType.FIXED64:\n            return reader.fixed64();\n        case ScalarType.BYTES:\n            return reader.bytes();\n        case ScalarType.FIXED32:\n            return reader.fixed32();\n        case ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case ScalarType.SINT64:\n            return reader.sint64();\n        case ScalarType.UINT32:\n            return reader.uint32();\n        case ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction writeField(field, value, writer, options) {\n    assert(value !== undefined);\n    const repeated = field.repeated;\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n            if (repeated) {\n                assert(Array.isArray(value));\n                if (field.packed) {\n                    writePacked(writer, scalarType, field.no, value);\n                }\n                else {\n                    for (const item of value) {\n                        writeScalar(writer, scalarType, field.no, item);\n                    }\n                }\n            }\n            else {\n                writeScalar(writer, scalarType, field.no, value);\n            }\n            break;\n        case \"message\":\n            if (repeated) {\n                assert(Array.isArray(value));\n                for (const item of value) {\n                    writeMessageField(writer, options, field, item);\n                }\n            }\n            else {\n                writeMessageField(writer, options, field, value);\n            }\n            break;\n        case \"map\":\n            assert(typeof value == \"object\" && value != null);\n            for (const [key, val] of Object.entries(value)) {\n                writeMapEntry(writer, options, field, key, val);\n            }\n            break;\n    }\n}\nexport function writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case ScalarType.BOOL:\n            assert(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value);\n            break;\n        case \"enum\":\n            writeScalar(writer, ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            assert(value !== undefined);\n            writer.tag(2, WireType.LengthDelimited).bytes(value.toBinary(options));\n            break;\n    }\n    writer.join();\n}\n// Value must not be undefined\nfunction writeMessageField(writer, options, field, value) {\n    const message = wrapField(field.T, value);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.delimited)\n        writer\n            .tag(field.no, WireType.StartGroup)\n            .raw(message.toBinary(options))\n            .tag(field.no, WireType.EndGroup);\n    else\n        writer\n            .tag(field.no, WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n}\nfunction writeScalar(writer, type, fieldNo, value) {\n    assert(value !== undefined);\n    let [wireType, method] = scalarTypeInfo(type);\n    writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\n// TODO replace call-sites writeScalar() and writePacked(), then remove\nfunction scalarTypeInfo(type) {\n    let wireType = WireType.Varint;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case ScalarType.BYTES:\n        case ScalarType.STRING:\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.DOUBLE:\n        case ScalarType.FIXED64:\n        case ScalarType.SFIXED64:\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.FLOAT:\n            wireType = WireType.Bit32;\n            break;\n    }\n    const method = ScalarType[type].toLowerCase();\n    return [wireType, method];\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { setEnumType } from \"./enum.js\";\nimport { Message } from \"../message.js\";\nimport { scalarEquals } from \"./scalars.js\";\nimport { ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nexport function makeUtilCommon() {\n    return {\n        setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] == null) {\n                    // TODO if source is a Message instance, we should use isFieldSet() here to support future field presence\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !isMessage(val, sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        else if (sourceField &&\n                            sourceField.kind === \"scalar\" &&\n                            sourceField.T === ScalarType.BYTES) {\n                            val = toU8Arr(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        let copy = s[localName];\n                        if (member.T === ScalarType.BYTES) {\n                            copy = member.repeated\n                                ? copy.map(toU8Arr)\n                                : toU8Arr(copy);\n                        }\n                        t[localName] = copy;\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                if (member.V.T === ScalarType.BYTES) {\n                                    for (const [k, v] of Object.entries(s[localName])) {\n                                        t[localName][k] = toU8Arr(v);\n                                    }\n                                }\n                                else {\n                                    Object.assign(t[localName], s[localName]);\n                                }\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => isMessage(val, mt) ? val : new mt(val));\n                        }\n                        else {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                if (\n                                // We can't use BytesValue.typeName as that will create a circular import\n                                mt.typeName === \"google.protobuf.BytesValue\") {\n                                    t[localName] = toU8Arr(val);\n                                }\n                                else {\n                                    t[localName] = val;\n                                }\n                            }\n                            else {\n                                t[localName] = isMessage(val, mt) ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        // TODO use isFieldSet() here to support future field presence\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => scalarEquals(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => scalarEquals(ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return scalarEquals(ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return scalarEquals(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return scalarEquals(ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return scalarEquals(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => scalarEquals(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        // TODO use isFieldSet() here to support future field presence\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map(cloneSingularField);\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(source);\n                }\n                any[member.localName] = copy;\n            }\n            for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (isMessage(value)) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n    return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { getEnumType, makeEnum, makeEnumType } from \"./enum.js\";\nimport { makeMessageType } from \"./message-type.js\";\nimport { makeExtension } from \"./extensions.js\";\nimport { makeJsonFormat } from \"./json-format.js\";\nimport { makeBinaryFormat } from \"./binary-format.js\";\nimport { makeUtilCommon } from \"./util-common.js\";\nexport function makeProtoRuntime(syntax, newFieldList, initFields) {\n    return {\n        syntax,\n        json: makeJsonFormat(),\n        bin: makeBinaryFormat(),\n        util: Object.assign(Object.assign({}, makeUtilCommon()), { newFieldList,\n            initFields }),\n        makeMessageType(typeName, fields, opt) {\n            return makeMessageType(this, typeName, fields, opt);\n        },\n        makeEnum,\n        makeEnumType,\n        getEnumType,\n        makeExtension(typeName, extendee, field) {\n            return makeExtension(this, typeName, extendee, field);\n        },\n    };\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nexport function localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\":\n        case \"extension\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return safeObjectProperty(safeIdentifier(name));\n        }\n        case \"enum_value\": {\n            let name = desc.name;\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix !== undefined) {\n                name = name.substring(sharedPrefix.length);\n            }\n            return safeObjectProperty(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return safeObjectProperty(name);\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nexport function localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nexport function localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nexport const fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nexport function findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nexport const safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that can be used for identifiers or class properties\n */\nexport const safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localOneofName } from \"./names.js\";\nimport { assert } from \"./assert.js\";\nexport class InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.req = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = localOneofName(name);\n    }\n    addField(field) {\n        assert(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { InternalOneofInfo } from \"./field.js\";\nimport { fieldJsonName, localFieldName } from \"./names.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\n/**\n * Convert a collection of field info to an array of normalized FieldInfo.\n *\n * The argument `packedByDefault` specifies whether fields that do not specify\n * `packed` should be packed (proto3) or unpacked (proto2).\n */\nexport function normalizeFieldInfos(fieldInfos, packedByDefault) {\n    var _a, _b, _c, _d, _e, _f;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        if (field.kind == \"scalar\") {\n            f.L = (_c = field.L) !== null && _c !== void 0 ? _c : LongType.BIGINT;\n        }\n        f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n        f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n        f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n        if (field.packed === undefined) {\n            if (packedByDefault) {\n                f.packed =\n                    field.kind == \"enum\" ||\n                        (field.kind == \"scalar\" &&\n                            field.T != ScalarType.BYTES &&\n                            field.T != ScalarType.STRING);\n            }\n            else {\n                f.packed = false;\n            }\n        }\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from \"./private/proto-runtime.js\";\nimport { InternalFieldList } from \"./private/field-list.js\";\nimport { scalarZeroValue } from \"./private/scalars.js\";\nimport { normalizeFieldInfos } from \"./private/field-normalize.js\";\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexport const proto3 = makeProtoRuntime(\"proto3\", (fields) => {\n    return new InternalFieldList(fields, (source) => normalizeFieldInfos(source, true));\n}, \n// TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        if (member.opt) {\n            continue;\n        }\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"enum\":\n                t[name] = 0;\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n                t[name] = scalarZeroValue(member.T, member.L);\n                break;\n            case \"message\":\n                // message fields are always optional in proto3\n                break;\n        }\n    }\n});\n","// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nexport class Timestamp extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Timestamp, a, b);\n    }\n}\nTimestamp.runtime = proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n","import { proto3, Timestamp, Duration } from '@bufbuild/protobuf';\nexport { protoInt64 } from '@bufbuild/protobuf';\n\nconst MetricLabel = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.MetricLabel\",\n  [\n    { no: 0, name: \"AGENTS_LLM_TTFT\" },\n    { no: 1, name: \"AGENTS_STT_TTFT\" },\n    { no: 2, name: \"AGENTS_TTS_TTFB\" },\n    { no: 3, name: \"CLIENT_VIDEO_SUBSCRIBER_FREEZE_COUNT\" },\n    { no: 4, name: \"CLIENT_VIDEO_SUBSCRIBER_TOTAL_FREEZE_DURATION\" },\n    { no: 5, name: \"CLIENT_VIDEO_SUBSCRIBER_PAUSE_COUNT\" },\n    { no: 6, name: \"CLIENT_VIDEO_SUBSCRIBER_TOTAL_PAUSES_DURATION\" },\n    { no: 7, name: \"CLIENT_AUDIO_SUBSCRIBER_CONCEALED_SAMPLES\" },\n    { no: 8, name: \"CLIENT_AUDIO_SUBSCRIBER_SILENT_CONCEALED_SAMPLES\" },\n    { no: 9, name: \"CLIENT_AUDIO_SUBSCRIBER_CONCEALMENT_EVENTS\" },\n    { no: 10, name: \"CLIENT_AUDIO_SUBSCRIBER_INTERRUPTION_COUNT\" },\n    { no: 11, name: \"CLIENT_AUDIO_SUBSCRIBER_TOTAL_INTERRUPTION_DURATION\" },\n    { no: 12, name: \"CLIENT_SUBSCRIBER_JITTER_BUFFER_DELAY\" },\n    { no: 13, name: \"CLIENT_SUBSCRIBER_JITTER_BUFFER_EMITTED_COUNT\" },\n    { no: 14, name: \"CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_BANDWIDTH\" },\n    { no: 15, name: \"CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_CPU\" },\n    { no: 16, name: \"CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_OTHER\" },\n    { no: 17, name: \"PUBLISHER_RTT\" },\n    { no: 18, name: \"SERVER_MESH_RTT\" },\n    { no: 19, name: \"SUBSCRIBER_RTT\" },\n    { no: 4096, name: \"METRIC_LABEL_PREDEFINED_MAX_VALUE\" }\n  ]\n);\nconst MetricsBatch = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.MetricsBatch\",\n  () => [\n    {\n      no: 1,\n      name: \"timestamp_ms\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    { no: 2, name: \"normalized_timestamp\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"str_data\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 4, name: \"time_series\", kind: \"message\", T: TimeSeriesMetric, repeated: true },\n    { no: 5, name: \"events\", kind: \"message\", T: EventMetric, repeated: true }\n  ]\n);\nconst TimeSeriesMetric = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TimeSeriesMetric\",\n  () => [\n    {\n      no: 1,\n      name: \"label\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 2,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 4, name: \"samples\", kind: \"message\", T: MetricSample, repeated: true },\n    {\n      no: 5,\n      name: \"rid\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst MetricSample = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.MetricSample\",\n  () => [\n    {\n      no: 1,\n      name: \"timestamp_ms\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    { no: 2, name: \"normalized_timestamp\", kind: \"message\", T: Timestamp },\n    {\n      no: 3,\n      name: \"value\",\n      kind: \"scalar\",\n      T: 2\n      /* ScalarType.FLOAT */\n    }\n  ]\n);\nconst EventMetric = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.EventMetric\",\n  () => [\n    {\n      no: 1,\n      name: \"label\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 2,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"start_timestamp_ms\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    { no: 5, name: \"end_timestamp_ms\", kind: \"scalar\", T: 3, opt: true },\n    { no: 6, name: \"normalized_start_timestamp\", kind: \"message\", T: Timestamp },\n    { no: 7, name: \"normalized_end_timestamp\", kind: \"message\", T: Timestamp, opt: true },\n    {\n      no: 8,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"rid\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\n\nconst AudioCodec = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.AudioCodec\",\n  [\n    { no: 0, name: \"DEFAULT_AC\" },\n    { no: 1, name: \"OPUS\" },\n    { no: 2, name: \"AAC\" }\n  ]\n);\nconst VideoCodec = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.VideoCodec\",\n  [\n    { no: 0, name: \"DEFAULT_VC\" },\n    { no: 1, name: \"H264_BASELINE\" },\n    { no: 2, name: \"H264_MAIN\" },\n    { no: 3, name: \"H264_HIGH\" },\n    { no: 4, name: \"VP8\" }\n  ]\n);\nconst ImageCodec = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ImageCodec\",\n  [\n    { no: 0, name: \"IC_DEFAULT\" },\n    { no: 1, name: \"IC_JPEG\" }\n  ]\n);\nconst TrackType = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.TrackType\",\n  [\n    { no: 0, name: \"AUDIO\" },\n    { no: 1, name: \"VIDEO\" },\n    { no: 2, name: \"DATA\" }\n  ]\n);\nconst TrackSource = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.TrackSource\",\n  [\n    { no: 0, name: \"UNKNOWN\" },\n    { no: 1, name: \"CAMERA\" },\n    { no: 2, name: \"MICROPHONE\" },\n    { no: 3, name: \"SCREEN_SHARE\" },\n    { no: 4, name: \"SCREEN_SHARE_AUDIO\" }\n  ]\n);\nconst VideoQuality = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.VideoQuality\",\n  [\n    { no: 0, name: \"LOW\" },\n    { no: 1, name: \"MEDIUM\" },\n    { no: 2, name: \"HIGH\" },\n    { no: 3, name: \"OFF\" }\n  ]\n);\nconst ConnectionQuality = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ConnectionQuality\",\n  [\n    { no: 0, name: \"POOR\" },\n    { no: 1, name: \"GOOD\" },\n    { no: 2, name: \"EXCELLENT\" },\n    { no: 3, name: \"LOST\" }\n  ]\n);\nconst ClientConfigSetting = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ClientConfigSetting\",\n  [\n    { no: 0, name: \"UNSET\" },\n    { no: 1, name: \"DISABLED\" },\n    { no: 2, name: \"ENABLED\" }\n  ]\n);\nconst DisconnectReason = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.DisconnectReason\",\n  [\n    { no: 0, name: \"UNKNOWN_REASON\" },\n    { no: 1, name: \"CLIENT_INITIATED\" },\n    { no: 2, name: \"DUPLICATE_IDENTITY\" },\n    { no: 3, name: \"SERVER_SHUTDOWN\" },\n    { no: 4, name: \"PARTICIPANT_REMOVED\" },\n    { no: 5, name: \"ROOM_DELETED\" },\n    { no: 6, name: \"STATE_MISMATCH\" },\n    { no: 7, name: \"JOIN_FAILURE\" },\n    { no: 8, name: \"MIGRATION\" },\n    { no: 9, name: \"SIGNAL_CLOSE\" },\n    { no: 10, name: \"ROOM_CLOSED\" },\n    { no: 11, name: \"USER_UNAVAILABLE\" },\n    { no: 12, name: \"USER_REJECTED\" },\n    { no: 13, name: \"SIP_TRUNK_FAILURE\" }\n  ]\n);\nconst ReconnectReason = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ReconnectReason\",\n  [\n    { no: 0, name: \"RR_UNKNOWN\" },\n    { no: 1, name: \"RR_SIGNAL_DISCONNECTED\" },\n    { no: 2, name: \"RR_PUBLISHER_FAILED\" },\n    { no: 3, name: \"RR_SUBSCRIBER_FAILED\" },\n    { no: 4, name: \"RR_SWITCH_CANDIDATE\" }\n  ]\n);\nconst SubscriptionError = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SubscriptionError\",\n  [\n    { no: 0, name: \"SE_UNKNOWN\" },\n    { no: 1, name: \"SE_CODEC_UNSUPPORTED\" },\n    { no: 2, name: \"SE_TRACK_NOTFOUND\" }\n  ]\n);\nconst AudioTrackFeature = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.AudioTrackFeature\",\n  [\n    { no: 0, name: \"TF_STEREO\" },\n    { no: 1, name: \"TF_NO_DTX\" },\n    { no: 2, name: \"TF_AUTO_GAIN_CONTROL\" },\n    { no: 3, name: \"TF_ECHO_CANCELLATION\" },\n    { no: 4, name: \"TF_NOISE_SUPPRESSION\" },\n    { no: 5, name: \"TF_ENHANCED_NOISE_CANCELLATION\" }\n  ]\n);\nconst Room = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Room\",\n  () => [\n    {\n      no: 1,\n      name: \"sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"empty_timeout\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 14,\n      name: \"departure_timeout\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"max_participants\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 5,\n      name: \"creation_time\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 6,\n      name: \"turn_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 7, name: \"enabled_codecs\", kind: \"message\", T: Codec, repeated: true },\n    {\n      no: 8,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"num_participants\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 11,\n      name: \"num_publishers\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 10,\n      name: \"active_recording\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 13, name: \"version\", kind: \"message\", T: TimedVersion }\n  ]\n);\nconst Codec = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Codec\",\n  () => [\n    {\n      no: 1,\n      name: \"mime\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"fmtp_line\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst PlayoutDelay = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.PlayoutDelay\",\n  () => [\n    {\n      no: 1,\n      name: \"enabled\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 2,\n      name: \"min\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"max\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst ParticipantPermission = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ParticipantPermission\",\n  () => [\n    {\n      no: 1,\n      name: \"can_subscribe\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 2,\n      name: \"can_publish\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 3,\n      name: \"can_publish_data\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 9, name: \"can_publish_sources\", kind: \"enum\", T: proto3.getEnumType(TrackSource), repeated: true },\n    {\n      no: 7,\n      name: \"hidden\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 8,\n      name: \"recorder\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 10,\n      name: \"can_update_metadata\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 11,\n      name: \"agent\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 12,\n      name: \"can_subscribe_metrics\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst ParticipantInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ParticipantInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"state\", kind: \"enum\", T: proto3.getEnumType(ParticipantInfo_State) },\n    { no: 4, name: \"tracks\", kind: \"message\", T: TrackInfo, repeated: true },\n    {\n      no: 5,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"joined_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 9,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 10,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 11, name: \"permission\", kind: \"message\", T: ParticipantPermission },\n    {\n      no: 12,\n      name: \"region\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 13,\n      name: \"is_publisher\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 14, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(ParticipantInfo_Kind) },\n    { no: 15, name: \"attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 16, name: \"disconnect_reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) }\n  ]\n);\nconst ParticipantInfo_State = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ParticipantInfo.State\",\n  [\n    { no: 0, name: \"JOINING\" },\n    { no: 1, name: \"JOINED\" },\n    { no: 2, name: \"ACTIVE\" },\n    { no: 3, name: \"DISCONNECTED\" }\n  ]\n);\nconst ParticipantInfo_Kind = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ParticipantInfo.Kind\",\n  [\n    { no: 0, name: \"STANDARD\" },\n    { no: 1, name: \"INGRESS\" },\n    { no: 2, name: \"EGRESS\" },\n    { no: 3, name: \"SIP\" },\n    { no: 4, name: \"AGENT\" }\n  ]\n);\nconst Encryption = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Encryption\",\n  []\n);\nconst Encryption_Type = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.Encryption.Type\",\n  [\n    { no: 0, name: \"NONE\" },\n    { no: 1, name: \"GCM\" },\n    { no: 2, name: \"CUSTOM\" }\n  ]\n);\nconst SimulcastCodecInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SimulcastCodecInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"mime_type\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"mid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"cid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true }\n  ]\n);\nconst TrackInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(TrackType) },\n    {\n      no: 3,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"muted\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 5,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 6,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 7,\n      name: \"simulcast\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 8,\n      name: \"disable_dtx\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 9, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 10, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n    {\n      no: 11,\n      name: \"mime_type\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 12,\n      name: \"mid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 13, name: \"codecs\", kind: \"message\", T: SimulcastCodecInfo, repeated: true },\n    {\n      no: 14,\n      name: \"stereo\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 15,\n      name: \"disable_red\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 16, name: \"encryption\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    {\n      no: 17,\n      name: \"stream\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 18, name: \"version\", kind: \"message\", T: TimedVersion },\n    { no: 19, name: \"audio_features\", kind: \"enum\", T: proto3.getEnumType(AudioTrackFeature), repeated: true }\n  ]\n);\nconst VideoLayer = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.VideoLayer\",\n  () => [\n    { no: 1, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    {\n      no: 2,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"bitrate\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 5,\n      name: \"ssrc\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst DataPacket = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataPacket\",\n  () => [\n    { no: 1, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(DataPacket_Kind) },\n    {\n      no: 4,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"destination_identities\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 2, name: \"user\", kind: \"message\", T: UserPacket, oneof: \"value\" },\n    { no: 3, name: \"speaker\", kind: \"message\", T: ActiveSpeakerUpdate, oneof: \"value\" },\n    { no: 6, name: \"sip_dtmf\", kind: \"message\", T: SipDTMF, oneof: \"value\" },\n    { no: 7, name: \"transcription\", kind: \"message\", T: Transcription, oneof: \"value\" },\n    { no: 8, name: \"metrics\", kind: \"message\", T: MetricsBatch, oneof: \"value\" },\n    { no: 9, name: \"chat_message\", kind: \"message\", T: ChatMessage, oneof: \"value\" },\n    { no: 10, name: \"rpc_request\", kind: \"message\", T: RpcRequest, oneof: \"value\" },\n    { no: 11, name: \"rpc_ack\", kind: \"message\", T: RpcAck, oneof: \"value\" },\n    { no: 12, name: \"rpc_response\", kind: \"message\", T: RpcResponse, oneof: \"value\" },\n    { no: 13, name: \"stream_header\", kind: \"message\", T: DataStream_Header, oneof: \"value\" },\n    { no: 14, name: \"stream_chunk\", kind: \"message\", T: DataStream_Chunk, oneof: \"value\" }\n  ]\n);\nconst DataPacket_Kind = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.DataPacket.Kind\",\n  [\n    { no: 0, name: \"RELIABLE\" },\n    { no: 1, name: \"LOSSY\" }\n  ]\n);\nconst ActiveSpeakerUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ActiveSpeakerUpdate\",\n  () => [\n    { no: 1, name: \"speakers\", kind: \"message\", T: SpeakerInfo, repeated: true }\n  ]\n);\nconst SpeakerInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SpeakerInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"level\",\n      kind: \"scalar\",\n      T: 2\n      /* ScalarType.FLOAT */\n    },\n    {\n      no: 3,\n      name: \"active\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst UserPacket = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UserPacket\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"payload\",\n      kind: \"scalar\",\n      T: 12\n      /* ScalarType.BYTES */\n    },\n    { no: 3, name: \"destination_sids\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 6, name: \"destination_identities\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 4, name: \"topic\", kind: \"scalar\", T: 9, opt: true },\n    { no: 8, name: \"id\", kind: \"scalar\", T: 9, opt: true },\n    { no: 9, name: \"start_time\", kind: \"scalar\", T: 4, opt: true },\n    { no: 10, name: \"end_time\", kind: \"scalar\", T: 4, opt: true }\n  ]\n);\nconst SipDTMF = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SipDTMF\",\n  () => [\n    {\n      no: 3,\n      name: \"code\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"digit\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst Transcription = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Transcription\",\n  () => [\n    {\n      no: 2,\n      name: \"transcribed_participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"track_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"segments\", kind: \"message\", T: TranscriptionSegment, repeated: true }\n  ]\n);\nconst TranscriptionSegment = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TranscriptionSegment\",\n  () => [\n    {\n      no: 1,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"text\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"start_time\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 4,\n      name: \"end_time\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 5,\n      name: \"final\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 6,\n      name: \"language\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ChatMessage = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ChatMessage\",\n  () => [\n    {\n      no: 1,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    { no: 3, name: \"edit_timestamp\", kind: \"scalar\", T: 3, opt: true },\n    {\n      no: 4,\n      name: \"message\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"deleted\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 6,\n      name: \"generated\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst RpcRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RpcRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"method\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"payload\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"response_timeout_ms\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 5,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst RpcAck = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RpcAck\",\n  () => [\n    {\n      no: 1,\n      name: \"request_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst RpcResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RpcResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"request_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"payload\", kind: \"scalar\", T: 9, oneof: \"value\" },\n    { no: 3, name: \"error\", kind: \"message\", T: RpcError, oneof: \"value\" }\n  ]\n);\nconst RpcError = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RpcError\",\n  () => [\n    {\n      no: 1,\n      name: \"code\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 2,\n      name: \"message\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"data\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ParticipantTracks = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ParticipantTracks\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"track_sids\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst ServerInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ServerInfo\",\n  () => [\n    { no: 1, name: \"edition\", kind: \"enum\", T: proto3.getEnumType(ServerInfo_Edition) },\n    {\n      no: 2,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"protocol\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 4,\n      name: \"region\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"node_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"debug_info\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"agent_protocol\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    }\n  ]\n);\nconst ServerInfo_Edition = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ServerInfo.Edition\",\n  [\n    { no: 0, name: \"Standard\" },\n    { no: 1, name: \"Cloud\" }\n  ]\n);\nconst ClientInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ClientInfo\",\n  () => [\n    { no: 1, name: \"sdk\", kind: \"enum\", T: proto3.getEnumType(ClientInfo_SDK) },\n    {\n      no: 2,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"protocol\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 4,\n      name: \"os\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"os_version\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"device_model\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"browser\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"browser_version\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"address\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 10,\n      name: \"network\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 11,\n      name: \"other_sdks\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ClientInfo_SDK = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ClientInfo.SDK\",\n  [\n    { no: 0, name: \"UNKNOWN\" },\n    { no: 1, name: \"JS\" },\n    { no: 2, name: \"SWIFT\" },\n    { no: 3, name: \"ANDROID\" },\n    { no: 4, name: \"FLUTTER\" },\n    { no: 5, name: \"GO\" },\n    { no: 6, name: \"UNITY\" },\n    { no: 7, name: \"REACT_NATIVE\" },\n    { no: 8, name: \"RUST\" },\n    { no: 9, name: \"PYTHON\" },\n    { no: 10, name: \"CPP\" },\n    { no: 11, name: \"UNITY_WEB\" },\n    { no: 12, name: \"NODE\" }\n  ]\n);\nconst ClientConfiguration = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ClientConfiguration\",\n  () => [\n    { no: 1, name: \"video\", kind: \"message\", T: VideoConfiguration },\n    { no: 2, name: \"screen\", kind: \"message\", T: VideoConfiguration },\n    { no: 3, name: \"resume_connection\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n    { no: 4, name: \"disabled_codecs\", kind: \"message\", T: DisabledCodecs },\n    { no: 5, name: \"force_relay\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) }\n  ]\n);\nconst VideoConfiguration = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.VideoConfiguration\",\n  () => [\n    { no: 1, name: \"hardware_encoder\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) }\n  ]\n);\nconst DisabledCodecs = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DisabledCodecs\",\n  () => [\n    { no: 1, name: \"codecs\", kind: \"message\", T: Codec, repeated: true },\n    { no: 2, name: \"publish\", kind: \"message\", T: Codec, repeated: true }\n  ]\n);\nconst RTPDrift = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RTPDrift\",\n  () => [\n    { no: 1, name: \"start_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"end_time\", kind: \"message\", T: Timestamp },\n    {\n      no: 3,\n      name: \"duration\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 4,\n      name: \"start_timestamp\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 5,\n      name: \"end_timestamp\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 6,\n      name: \"rtp_clock_ticks\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 7,\n      name: \"drift_samples\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 8,\n      name: \"drift_ms\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 9,\n      name: \"clock_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    }\n  ]\n);\nconst RTPStats = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RTPStats\",\n  () => [\n    { no: 1, name: \"start_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"end_time\", kind: \"message\", T: Timestamp },\n    {\n      no: 3,\n      name: \"duration\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 4,\n      name: \"packets\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 5,\n      name: \"packet_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 6,\n      name: \"bytes\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 39,\n      name: \"header_bytes\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 7,\n      name: \"bitrate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 8,\n      name: \"packets_lost\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 9,\n      name: \"packet_loss_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 10,\n      name: \"packet_loss_percentage\",\n      kind: \"scalar\",\n      T: 2\n      /* ScalarType.FLOAT */\n    },\n    {\n      no: 11,\n      name: \"packets_duplicate\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 12,\n      name: \"packet_duplicate_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 13,\n      name: \"bytes_duplicate\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 40,\n      name: \"header_bytes_duplicate\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 14,\n      name: \"bitrate_duplicate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 15,\n      name: \"packets_padding\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 16,\n      name: \"packet_padding_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 17,\n      name: \"bytes_padding\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 41,\n      name: \"header_bytes_padding\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 18,\n      name: \"bitrate_padding\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 19,\n      name: \"packets_out_of_order\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 20,\n      name: \"frames\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 21,\n      name: \"frame_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 22,\n      name: \"jitter_current\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    {\n      no: 23,\n      name: \"jitter_max\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    { no: 24, name: \"gap_histogram\", kind: \"map\", K: 5, V: {\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    } },\n    {\n      no: 25,\n      name: \"nacks\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 37,\n      name: \"nack_acks\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 26,\n      name: \"nack_misses\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 38,\n      name: \"nack_repeated\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 27,\n      name: \"plis\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 28, name: \"last_pli\", kind: \"message\", T: Timestamp },\n    {\n      no: 29,\n      name: \"firs\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 30, name: \"last_fir\", kind: \"message\", T: Timestamp },\n    {\n      no: 31,\n      name: \"rtt_current\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 32,\n      name: \"rtt_max\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 33,\n      name: \"key_frames\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 34, name: \"last_key_frame\", kind: \"message\", T: Timestamp },\n    {\n      no: 35,\n      name: \"layer_lock_plis\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 36, name: \"last_layer_lock_pli\", kind: \"message\", T: Timestamp },\n    { no: 44, name: \"packet_drift\", kind: \"message\", T: RTPDrift },\n    { no: 45, name: \"ntp_report_drift\", kind: \"message\", T: RTPDrift },\n    { no: 46, name: \"rebased_report_drift\", kind: \"message\", T: RTPDrift },\n    { no: 47, name: \"received_report_drift\", kind: \"message\", T: RTPDrift }\n  ]\n);\nconst RTCPSenderReportState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RTCPSenderReportState\",\n  () => [\n    {\n      no: 1,\n      name: \"rtp_timestamp\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 2,\n      name: \"rtp_timestamp_ext\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 3,\n      name: \"ntp_timestamp\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 4,\n      name: \"at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 5,\n      name: \"at_adjusted\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 6,\n      name: \"packets\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 7,\n      name: \"octets\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    }\n  ]\n);\nconst RTPForwarderState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RTPForwarderState\",\n  () => [\n    {\n      no: 1,\n      name: \"started\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 2,\n      name: \"reference_layer_spatial\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 3,\n      name: \"pre_start_time\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 4,\n      name: \"ext_first_timestamp\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 5,\n      name: \"dummy_start_timestamp_offset\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    { no: 6, name: \"rtp_munger\", kind: \"message\", T: RTPMungerState },\n    { no: 7, name: \"vp8_munger\", kind: \"message\", T: VP8MungerState, oneof: \"codec_munger\" },\n    { no: 8, name: \"sender_report_state\", kind: \"message\", T: RTCPSenderReportState, repeated: true }\n  ]\n);\nconst RTPMungerState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RTPMungerState\",\n  () => [\n    {\n      no: 1,\n      name: \"ext_last_sequence_number\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 2,\n      name: \"ext_second_last_sequence_number\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 3,\n      name: \"ext_last_timestamp\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 4,\n      name: \"ext_second_last_timestamp\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 5,\n      name: \"last_marker\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 6,\n      name: \"second_last_marker\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst VP8MungerState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.VP8MungerState\",\n  () => [\n    {\n      no: 1,\n      name: \"ext_last_picture_id\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 2,\n      name: \"picture_id_used\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 3,\n      name: \"last_tl0_pic_idx\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"tl0_pic_idx_used\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 5,\n      name: \"tid_used\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 6,\n      name: \"last_key_idx\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 7,\n      name: \"key_idx_used\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst TimedVersion = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TimedVersion\",\n  () => [\n    {\n      no: 1,\n      name: \"unix_micro\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 2,\n      name: \"ticks\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    }\n  ]\n);\nconst DataStream = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataStream\",\n  []\n);\nconst DataStream_OperationType = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.DataStream.OperationType\",\n  [\n    { no: 0, name: \"CREATE\" },\n    { no: 1, name: \"UPDATE\" },\n    { no: 2, name: \"DELETE\" },\n    { no: 3, name: \"REACTION\" }\n  ]\n);\nconst DataStream_TextHeader = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataStream.TextHeader\",\n  () => [\n    { no: 1, name: \"operation_type\", kind: \"enum\", T: proto3.getEnumType(DataStream_OperationType) },\n    {\n      no: 2,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 3,\n      name: \"reply_to_stream_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"attached_stream_ids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 5,\n      name: \"generated\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ],\n  { localName: \"DataStream_TextHeader\" }\n);\nconst DataStream_FileHeader = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataStream.FileHeader\",\n  () => [\n    {\n      no: 1,\n      name: \"file_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ],\n  { localName: \"DataStream_FileHeader\" }\n);\nconst DataStream_Header = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataStream.Header\",\n  () => [\n    {\n      no: 1,\n      name: \"stream_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 3,\n      name: \"topic\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"mime_type\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"total_length\", kind: \"scalar\", T: 4, opt: true },\n    { no: 7, name: \"encryption_type\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    { no: 8, name: \"extensions\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 9, name: \"text_header\", kind: \"message\", T: DataStream_TextHeader, oneof: \"content_header\" },\n    { no: 10, name: \"file_header\", kind: \"message\", T: DataStream_FileHeader, oneof: \"content_header\" }\n  ],\n  { localName: \"DataStream_Header\" }\n);\nconst DataStream_Chunk = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataStream.Chunk\",\n  () => [\n    {\n      no: 1,\n      name: \"stream_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"chunk_index\",\n      kind: \"scalar\",\n      T: 4\n      /* ScalarType.UINT64 */\n    },\n    {\n      no: 3,\n      name: \"content\",\n      kind: \"scalar\",\n      T: 12\n      /* ScalarType.BYTES */\n    },\n    {\n      no: 4,\n      name: \"complete\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 5,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    { no: 6, name: \"iv\", kind: \"scalar\", T: 12, opt: true }\n  ],\n  { localName: \"DataStream_Chunk\" }\n);\n\nconst JobType = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.JobType\",\n  [\n    { no: 0, name: \"JT_ROOM\" },\n    { no: 1, name: \"JT_PUBLISHER\" }\n  ]\n);\nconst WorkerStatus = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.WorkerStatus\",\n  [\n    { no: 0, name: \"WS_AVAILABLE\" },\n    { no: 1, name: \"WS_FULL\" }\n  ]\n);\nconst JobStatus = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.JobStatus\",\n  [\n    { no: 0, name: \"JS_PENDING\" },\n    { no: 1, name: \"JS_RUNNING\" },\n    { no: 2, name: \"JS_SUCCESS\" },\n    { no: 3, name: \"JS_FAILED\" }\n  ]\n);\nconst Job = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Job\",\n  () => [\n    {\n      no: 1,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"dispatch_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(JobType) },\n    { no: 3, name: \"room\", kind: \"message\", T: Room },\n    { no: 4, name: \"participant\", kind: \"message\", T: ParticipantInfo, opt: true },\n    {\n      no: 5,\n      name: \"namespace\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"agent_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 8, name: \"state\", kind: \"message\", T: JobState }\n  ]\n);\nconst JobState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.JobState\",\n  () => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(JobStatus) },\n    {\n      no: 2,\n      name: \"error\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 4,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 5,\n      name: \"updated_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 6,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst WorkerMessage = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.WorkerMessage\",\n  () => [\n    { no: 1, name: \"register\", kind: \"message\", T: RegisterWorkerRequest, oneof: \"message\" },\n    { no: 2, name: \"availability\", kind: \"message\", T: AvailabilityResponse, oneof: \"message\" },\n    { no: 3, name: \"update_worker\", kind: \"message\", T: UpdateWorkerStatus, oneof: \"message\" },\n    { no: 4, name: \"update_job\", kind: \"message\", T: UpdateJobStatus, oneof: \"message\" },\n    { no: 5, name: \"ping\", kind: \"message\", T: WorkerPing, oneof: \"message\" },\n    { no: 6, name: \"simulate_job\", kind: \"message\", T: SimulateJobRequest, oneof: \"message\" },\n    { no: 7, name: \"migrate_job\", kind: \"message\", T: MigrateJobRequest, oneof: \"message\" }\n  ]\n);\nconst ServerMessage = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ServerMessage\",\n  () => [\n    { no: 1, name: \"register\", kind: \"message\", T: RegisterWorkerResponse, oneof: \"message\" },\n    { no: 2, name: \"availability\", kind: \"message\", T: AvailabilityRequest, oneof: \"message\" },\n    { no: 3, name: \"assignment\", kind: \"message\", T: JobAssignment, oneof: \"message\" },\n    { no: 5, name: \"termination\", kind: \"message\", T: JobTermination, oneof: \"message\" },\n    { no: 4, name: \"pong\", kind: \"message\", T: WorkerPong, oneof: \"message\" }\n  ]\n);\nconst SimulateJobRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SimulateJobRequest\",\n  () => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto3.getEnumType(JobType) },\n    { no: 2, name: \"room\", kind: \"message\", T: Room },\n    { no: 3, name: \"participant\", kind: \"message\", T: ParticipantInfo }\n  ]\n);\nconst WorkerPing = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.WorkerPing\",\n  () => [\n    {\n      no: 1,\n      name: \"timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst WorkerPong = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.WorkerPong\",\n  () => [\n    {\n      no: 1,\n      name: \"last_timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 2,\n      name: \"timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst RegisterWorkerRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RegisterWorkerRequest\",\n  () => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto3.getEnumType(JobType) },\n    {\n      no: 8,\n      name: \"agent_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"version\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"ping_interval\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 6, name: \"namespace\", kind: \"scalar\", T: 9, opt: true },\n    { no: 7, name: \"allowed_permissions\", kind: \"message\", T: ParticipantPermission }\n  ]\n);\nconst RegisterWorkerResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RegisterWorkerResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"worker_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"server_info\", kind: \"message\", T: ServerInfo }\n  ]\n);\nconst MigrateJobRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.MigrateJobRequest\",\n  () => [\n    { no: 2, name: \"job_ids\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst AvailabilityRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AvailabilityRequest\",\n  () => [\n    { no: 1, name: \"job\", kind: \"message\", T: Job },\n    {\n      no: 2,\n      name: \"resuming\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst AvailabilityResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AvailabilityResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"job_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"available\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 3,\n      name: \"supports_resume\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 4,\n      name: \"participant_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"participant_metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 7, name: \"participant_attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } }\n  ]\n);\nconst UpdateJobStatus = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateJobStatus\",\n  () => [\n    {\n      no: 1,\n      name: \"job_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"status\", kind: \"enum\", T: proto3.getEnumType(JobStatus) },\n    {\n      no: 3,\n      name: \"error\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst UpdateWorkerStatus = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateWorkerStatus\",\n  () => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(WorkerStatus), opt: true },\n    {\n      no: 3,\n      name: \"load\",\n      kind: \"scalar\",\n      T: 2\n      /* ScalarType.FLOAT */\n    },\n    {\n      no: 4,\n      name: \"job_count\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst JobAssignment = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.JobAssignment\",\n  () => [\n    { no: 1, name: \"job\", kind: \"message\", T: Job },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9, opt: true },\n    {\n      no: 3,\n      name: \"token\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst JobTermination = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.JobTermination\",\n  () => [\n    {\n      no: 1,\n      name: \"job_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\n\nconst CreateAgentDispatchRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateAgentDispatchRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"agent_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst RoomAgentDispatch = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomAgentDispatch\",\n  () => [\n    {\n      no: 1,\n      name: \"agent_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst DeleteAgentDispatchRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DeleteAgentDispatchRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"dispatch_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ListAgentDispatchRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListAgentDispatchRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"dispatch_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ListAgentDispatchResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListAgentDispatchResponse\",\n  () => [\n    { no: 1, name: \"agent_dispatches\", kind: \"message\", T: AgentDispatch, repeated: true }\n  ]\n);\nconst AgentDispatch = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AgentDispatch\",\n  () => [\n    {\n      no: 1,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"agent_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"state\", kind: \"message\", T: AgentDispatchState }\n  ]\n);\nconst AgentDispatchState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AgentDispatchState\",\n  () => [\n    { no: 1, name: \"jobs\", kind: \"message\", T: Job, repeated: true },\n    {\n      no: 2,\n      name: \"created_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 3,\n      name: \"deleted_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\n\nconst EncodedFileType = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.EncodedFileType\",\n  [\n    { no: 0, name: \"DEFAULT_FILETYPE\" },\n    { no: 1, name: \"MP4\" },\n    { no: 2, name: \"OGG\" }\n  ]\n);\nconst SegmentedFileProtocol = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SegmentedFileProtocol\",\n  [\n    { no: 0, name: \"DEFAULT_SEGMENTED_FILE_PROTOCOL\" },\n    { no: 1, name: \"HLS_PROTOCOL\" }\n  ]\n);\nconst SegmentedFileSuffix = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SegmentedFileSuffix\",\n  [\n    { no: 0, name: \"INDEX\" },\n    { no: 1, name: \"TIMESTAMP\" }\n  ]\n);\nconst ImageFileSuffix = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.ImageFileSuffix\",\n  [\n    { no: 0, name: \"IMAGE_SUFFIX_INDEX\" },\n    { no: 1, name: \"IMAGE_SUFFIX_TIMESTAMP\" }\n  ]\n);\nconst StreamProtocol = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.StreamProtocol\",\n  [\n    { no: 0, name: \"DEFAULT_PROTOCOL\" },\n    { no: 1, name: \"RTMP\" },\n    { no: 2, name: \"SRT\" }\n  ]\n);\nconst EncodingOptionsPreset = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.EncodingOptionsPreset\",\n  [\n    { no: 0, name: \"H264_720P_30\" },\n    { no: 1, name: \"H264_720P_60\" },\n    { no: 2, name: \"H264_1080P_30\" },\n    { no: 3, name: \"H264_1080P_60\" },\n    { no: 4, name: \"PORTRAIT_H264_720P_30\" },\n    { no: 5, name: \"PORTRAIT_H264_720P_60\" },\n    { no: 6, name: \"PORTRAIT_H264_1080P_30\" },\n    { no: 7, name: \"PORTRAIT_H264_1080P_60\" }\n  ]\n);\nconst EgressStatus = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.EgressStatus\",\n  [\n    { no: 0, name: \"EGRESS_STARTING\" },\n    { no: 1, name: \"EGRESS_ACTIVE\" },\n    { no: 2, name: \"EGRESS_ENDING\" },\n    { no: 3, name: \"EGRESS_COMPLETE\" },\n    { no: 4, name: \"EGRESS_FAILED\" },\n    { no: 5, name: \"EGRESS_ABORTED\" },\n    { no: 6, name: \"EGRESS_LIMIT_REACHED\" }\n  ]\n);\nconst EgressSourceType = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.EgressSourceType\",\n  [\n    { no: 0, name: \"EGRESS_SOURCE_TYPE_WEB\", localName: \"WEB\" },\n    { no: 1, name: \"EGRESS_SOURCE_TYPE_SDK\", localName: \"SDK\" }\n  ]\n);\nconst RoomCompositeEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomCompositeEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"layout\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"audio_only\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 4,\n      name: \"video_only\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 5,\n      name: \"custom_base_url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 6, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 7, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 10, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 8, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 9, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 11, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 12, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 13, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 14, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true }\n  ]\n);\nconst WebEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.WebEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"audio_only\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 3,\n      name: \"video_only\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 12,\n      name: \"await_start_signal\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 4, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 5, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 6, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 7, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 8, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 9, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 10, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 11, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 13, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true }\n  ]\n);\nconst ParticipantEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ParticipantEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"screen_share\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 4, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 5, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 6, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 7, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 8, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 9, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true }\n  ]\n);\nconst TrackCompositeEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackCompositeEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"audio_track_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"video_track_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 5, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 8, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 6, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 7, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 11, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 12, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 13, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 14, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true }\n  ]\n);\nconst TrackEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"track_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"file\", kind: \"message\", T: DirectFileOutput, oneof: \"output\" },\n    { no: 4, name: \"websocket_url\", kind: \"scalar\", T: 9, oneof: \"output\" }\n  ]\n);\nconst EncodedFileOutput = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.EncodedFileOutput\",\n  () => [\n    { no: 1, name: \"file_type\", kind: \"enum\", T: proto3.getEnumType(EncodedFileType) },\n    {\n      no: 2,\n      name: \"filepath\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"disable_manifest\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 3, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 4, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 5, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 7, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" }\n  ]\n);\nconst SegmentedFileOutput = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SegmentedFileOutput\",\n  () => [\n    { no: 1, name: \"protocol\", kind: \"enum\", T: proto3.getEnumType(SegmentedFileProtocol) },\n    {\n      no: 2,\n      name: \"filename_prefix\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"playlist_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 11,\n      name: \"live_playlist_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"segment_duration\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 10, name: \"filename_suffix\", kind: \"enum\", T: proto3.getEnumType(SegmentedFileSuffix) },\n    {\n      no: 8,\n      name: \"disable_manifest\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 5, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 6, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 7, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 9, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" }\n  ]\n);\nconst DirectFileOutput = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DirectFileOutput\",\n  () => [\n    {\n      no: 1,\n      name: \"filepath\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"disable_manifest\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 2, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 3, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 4, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 6, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" }\n  ]\n);\nconst ImageOutput = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ImageOutput\",\n  () => [\n    {\n      no: 1,\n      name: \"capture_interval\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 2,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 3,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 4,\n      name: \"filename_prefix\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"filename_suffix\", kind: \"enum\", T: proto3.getEnumType(ImageFileSuffix) },\n    { no: 6, name: \"image_codec\", kind: \"enum\", T: proto3.getEnumType(ImageCodec) },\n    {\n      no: 7,\n      name: \"disable_manifest\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 8, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 9, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 10, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 11, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" }\n  ]\n);\nconst S3Upload = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.S3Upload\",\n  () => [\n    {\n      no: 1,\n      name: \"access_key\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"secret\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 11,\n      name: \"session_token\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"region\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"endpoint\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"bucket\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"force_path_style\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 7, name: \"metadata\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    {\n      no: 8,\n      name: \"tagging\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"content_disposition\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 10, name: \"proxy\", kind: \"message\", T: ProxyConfig }\n  ]\n);\nconst GCPUpload = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.GCPUpload\",\n  () => [\n    {\n      no: 1,\n      name: \"credentials\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"bucket\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"proxy\", kind: \"message\", T: ProxyConfig }\n  ]\n);\nconst AzureBlobUpload = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AzureBlobUpload\",\n  () => [\n    {\n      no: 1,\n      name: \"account_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"account_key\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"container_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst AliOSSUpload = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AliOSSUpload\",\n  () => [\n    {\n      no: 1,\n      name: \"access_key\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"secret\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"region\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"endpoint\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"bucket\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ProxyConfig = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ProxyConfig\",\n  () => [\n    {\n      no: 1,\n      name: \"url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst StreamOutput = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.StreamOutput\",\n  () => [\n    { no: 1, name: \"protocol\", kind: \"enum\", T: proto3.getEnumType(StreamProtocol) },\n    { no: 2, name: \"urls\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst EncodingOptions = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.EncodingOptions\",\n  () => [\n    {\n      no: 1,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 2,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 3,\n      name: \"depth\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 4,\n      name: \"framerate\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    { no: 5, name: \"audio_codec\", kind: \"enum\", T: proto3.getEnumType(AudioCodec) },\n    {\n      no: 6,\n      name: \"audio_bitrate\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 11,\n      name: \"audio_quality\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 7,\n      name: \"audio_frequency\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    { no: 8, name: \"video_codec\", kind: \"enum\", T: proto3.getEnumType(VideoCodec) },\n    {\n      no: 9,\n      name: \"video_bitrate\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 12,\n      name: \"video_quality\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 10,\n      name: \"key_frame_interval\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    }\n  ]\n);\nconst UpdateLayoutRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateLayoutRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"egress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"layout\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst UpdateStreamRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateStreamRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"egress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"add_output_urls\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 3, name: \"remove_output_urls\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst ListEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"egress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"active\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst ListEgressResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListEgressResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: EgressInfo, repeated: true }\n  ]\n);\nconst StopEgressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.StopEgressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"egress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst EgressInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.EgressInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"egress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"room_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 13,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 26, name: \"source_type\", kind: \"enum\", T: proto3.getEnumType(EgressSourceType) },\n    { no: 3, name: \"status\", kind: \"enum\", T: proto3.getEnumType(EgressStatus) },\n    {\n      no: 10,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 11,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 18,\n      name: \"updated_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 21,\n      name: \"details\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"error\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 22,\n      name: \"error_code\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    { no: 4, name: \"room_composite\", kind: \"message\", T: RoomCompositeEgressRequest, oneof: \"request\" },\n    { no: 14, name: \"web\", kind: \"message\", T: WebEgressRequest, oneof: \"request\" },\n    { no: 19, name: \"participant\", kind: \"message\", T: ParticipantEgressRequest, oneof: \"request\" },\n    { no: 5, name: \"track_composite\", kind: \"message\", T: TrackCompositeEgressRequest, oneof: \"request\" },\n    { no: 6, name: \"track\", kind: \"message\", T: TrackEgressRequest, oneof: \"request\" },\n    { no: 7, name: \"stream\", kind: \"message\", T: StreamInfoList, oneof: \"result\" },\n    { no: 8, name: \"file\", kind: \"message\", T: FileInfo, oneof: \"result\" },\n    { no: 12, name: \"segments\", kind: \"message\", T: SegmentsInfo, oneof: \"result\" },\n    { no: 15, name: \"stream_results\", kind: \"message\", T: StreamInfo, repeated: true },\n    { no: 16, name: \"file_results\", kind: \"message\", T: FileInfo, repeated: true },\n    { no: 17, name: \"segment_results\", kind: \"message\", T: SegmentsInfo, repeated: true },\n    { no: 20, name: \"image_results\", kind: \"message\", T: ImagesInfo, repeated: true },\n    {\n      no: 23,\n      name: \"manifest_location\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 25,\n      name: \"backup_storage_used\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst StreamInfoList = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.StreamInfoList\",\n  () => [\n    { no: 1, name: \"info\", kind: \"message\", T: StreamInfo, repeated: true }\n  ]\n);\nconst StreamInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.StreamInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 3,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 4,\n      name: \"duration\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    { no: 5, name: \"status\", kind: \"enum\", T: proto3.getEnumType(StreamInfo_Status) },\n    {\n      no: 6,\n      name: \"error\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst StreamInfo_Status = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.StreamInfo.Status\",\n  [\n    { no: 0, name: \"ACTIVE\" },\n    { no: 1, name: \"FINISHED\" },\n    { no: 2, name: \"FAILED\" }\n  ]\n);\nconst FileInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.FileInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"filename\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 3,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 6,\n      name: \"duration\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 4,\n      name: \"size\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 5,\n      name: \"location\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SegmentsInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SegmentsInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"playlist_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"live_playlist_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"duration\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 3,\n      name: \"size\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 4,\n      name: \"playlist_location\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"live_playlist_location\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"segment_count\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 6,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 7,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst ImagesInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ImagesInfo\",\n  () => [\n    {\n      no: 4,\n      name: \"filename_prefix\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 1,\n      name: \"image_count\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 2,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 3,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst AutoParticipantEgress = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AutoParticipantEgress\",\n  () => [\n    { no: 1, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 2, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 3, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 4, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true }\n  ]\n);\nconst AutoTrackEgress = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AutoTrackEgress\",\n  () => [\n    {\n      no: 1,\n      name: \"filepath\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"disable_manifest\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 2, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 3, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 4, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 6, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" }\n  ]\n);\n\nconst IngressInput = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.IngressInput\",\n  [\n    { no: 0, name: \"RTMP_INPUT\" },\n    { no: 1, name: \"WHIP_INPUT\" },\n    { no: 2, name: \"URL_INPUT\" }\n  ]\n);\nconst IngressAudioEncodingPreset = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.IngressAudioEncodingPreset\",\n  [\n    { no: 0, name: \"OPUS_STEREO_96KBPS\" },\n    { no: 1, name: \"OPUS_MONO_64KBS\" }\n  ]\n);\nconst IngressVideoEncodingPreset = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.IngressVideoEncodingPreset\",\n  [\n    { no: 0, name: \"H264_720P_30FPS_3_LAYERS\" },\n    { no: 1, name: \"H264_1080P_30FPS_3_LAYERS\" },\n    { no: 2, name: \"H264_540P_25FPS_2_LAYERS\" },\n    { no: 3, name: \"H264_720P_30FPS_1_LAYER\" },\n    { no: 4, name: \"H264_1080P_30FPS_1_LAYER\" },\n    { no: 5, name: \"H264_720P_30FPS_3_LAYERS_HIGH_MOTION\" },\n    { no: 6, name: \"H264_1080P_30FPS_3_LAYERS_HIGH_MOTION\" },\n    { no: 7, name: \"H264_540P_25FPS_2_LAYERS_HIGH_MOTION\" },\n    { no: 8, name: \"H264_720P_30FPS_1_LAYER_HIGH_MOTION\" },\n    { no: 9, name: \"H264_1080P_30FPS_1_LAYER_HIGH_MOTION\" }\n  ]\n);\nconst CreateIngressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateIngressRequest\",\n  () => [\n    { no: 1, name: \"input_type\", kind: \"enum\", T: proto3.getEnumType(IngressInput) },\n    {\n      no: 9,\n      name: \"url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"participant_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 10,\n      name: \"participant_metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"bypass_transcoding\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 11, name: \"enable_transcoding\", kind: \"scalar\", T: 8, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions }\n  ]\n);\nconst IngressAudioOptions = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.IngressAudioOptions\",\n  () => [\n    {\n      no: 1,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 3, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(IngressAudioEncodingPreset), oneof: \"encoding_options\" },\n    { no: 4, name: \"options\", kind: \"message\", T: IngressAudioEncodingOptions, oneof: \"encoding_options\" }\n  ]\n);\nconst IngressVideoOptions = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.IngressVideoOptions\",\n  () => [\n    {\n      no: 1,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 3, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(IngressVideoEncodingPreset), oneof: \"encoding_options\" },\n    { no: 4, name: \"options\", kind: \"message\", T: IngressVideoEncodingOptions, oneof: \"encoding_options\" }\n  ]\n);\nconst IngressAudioEncodingOptions = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.IngressAudioEncodingOptions\",\n  () => [\n    { no: 1, name: \"audio_codec\", kind: \"enum\", T: proto3.getEnumType(AudioCodec) },\n    {\n      no: 2,\n      name: \"bitrate\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"disable_dtx\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 4,\n      name: \"channels\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst IngressVideoEncodingOptions = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.IngressVideoEncodingOptions\",\n  () => [\n    { no: 1, name: \"video_codec\", kind: \"enum\", T: proto3.getEnumType(VideoCodec) },\n    {\n      no: 2,\n      name: \"frame_rate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    },\n    { no: 3, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true }\n  ]\n);\nconst IngressInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.IngressInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"ingress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"stream_key\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"input_type\", kind: \"enum\", T: proto3.getEnumType(IngressInput) },\n    {\n      no: 13,\n      name: \"bypass_transcoding\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 15, name: \"enable_transcoding\", kind: \"scalar\", T: 8, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n    {\n      no: 8,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 10,\n      name: \"participant_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 14,\n      name: \"participant_metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 11,\n      name: \"reusable\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 12, name: \"state\", kind: \"message\", T: IngressState }\n  ]\n);\nconst IngressState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.IngressState\",\n  () => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(IngressState_Status) },\n    {\n      no: 2,\n      name: \"error\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"video\", kind: \"message\", T: InputVideoState },\n    { no: 4, name: \"audio\", kind: \"message\", T: InputAudioState },\n    {\n      no: 5,\n      name: \"room_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 8,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 10,\n      name: \"updated_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 9,\n      name: \"resource_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 6, name: \"tracks\", kind: \"message\", T: TrackInfo, repeated: true }\n  ]\n);\nconst IngressState_Status = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.IngressState.Status\",\n  [\n    { no: 0, name: \"ENDPOINT_INACTIVE\" },\n    { no: 1, name: \"ENDPOINT_BUFFERING\" },\n    { no: 2, name: \"ENDPOINT_PUBLISHING\" },\n    { no: 3, name: \"ENDPOINT_ERROR\" },\n    { no: 4, name: \"ENDPOINT_COMPLETE\" }\n  ]\n);\nconst InputVideoState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.InputVideoState\",\n  () => [\n    {\n      no: 1,\n      name: \"mime_type\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"average_bitrate\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 5,\n      name: \"framerate\",\n      kind: \"scalar\",\n      T: 1\n      /* ScalarType.DOUBLE */\n    }\n  ]\n);\nconst InputAudioState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.InputAudioState\",\n  () => [\n    {\n      no: 1,\n      name: \"mime_type\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"average_bitrate\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"channels\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"sample_rate\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst UpdateIngressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateIngressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"ingress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"participant_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"participant_metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 8, name: \"bypass_transcoding\", kind: \"scalar\", T: 8, opt: true },\n    { no: 10, name: \"enable_transcoding\", kind: \"scalar\", T: 8, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions }\n  ]\n);\nconst ListIngressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListIngressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"ingress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ListIngressResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListIngressResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: IngressInfo, repeated: true }\n  ]\n);\nconst DeleteIngressRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DeleteIngressRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"ingress_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\n\nconst CreateRoomRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateRoomRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 12,\n      name: \"room_preset\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"empty_timeout\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 10,\n      name: \"departure_timeout\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"max_participants\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"node_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 6, name: \"egress\", kind: \"message\", T: RoomEgress },\n    {\n      no: 7,\n      name: \"min_playout_delay\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 8,\n      name: \"max_playout_delay\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 9,\n      name: \"sync_streams\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 13,\n      name: \"replay_enabled\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 14, name: \"agents\", kind: \"message\", T: RoomAgentDispatch, repeated: true }\n  ]\n);\nconst RoomEgress = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomEgress\",\n  () => [\n    { no: 1, name: \"room\", kind: \"message\", T: RoomCompositeEgressRequest },\n    { no: 3, name: \"participant\", kind: \"message\", T: AutoParticipantEgress },\n    { no: 2, name: \"tracks\", kind: \"message\", T: AutoTrackEgress }\n  ]\n);\nconst RoomAgent = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomAgent\",\n  () => [\n    { no: 1, name: \"dispatches\", kind: \"message\", T: RoomAgentDispatch, repeated: true }\n  ]\n);\nconst ListRoomsRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListRoomsRequest\",\n  () => [\n    { no: 1, name: \"names\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst ListRoomsResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListRoomsResponse\",\n  () => [\n    { no: 1, name: \"rooms\", kind: \"message\", T: Room, repeated: true }\n  ]\n);\nconst DeleteRoomRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DeleteRoomRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst DeleteRoomResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DeleteRoomResponse\",\n  []\n);\nconst ListParticipantsRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListParticipantsRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ListParticipantsResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListParticipantsResponse\",\n  () => [\n    { no: 1, name: \"participants\", kind: \"message\", T: ParticipantInfo, repeated: true }\n  ]\n);\nconst RoomParticipantIdentity = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomParticipantIdentity\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst RemoveParticipantResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RemoveParticipantResponse\",\n  []\n);\nconst MuteRoomTrackRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.MuteRoomTrackRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"muted\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst MuteRoomTrackResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.MuteRoomTrackResponse\",\n  () => [\n    { no: 1, name: \"track\", kind: \"message\", T: TrackInfo }\n  ]\n);\nconst UpdateParticipantRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateParticipantRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"permission\", kind: \"message\", T: ParticipantPermission },\n    {\n      no: 5,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 6, name: \"attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } }\n  ]\n);\nconst UpdateSubscriptionsRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateSubscriptionsRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"track_sids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 4,\n      name: \"subscribe\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 5, name: \"participant_tracks\", kind: \"message\", T: ParticipantTracks, repeated: true }\n  ]\n);\nconst UpdateSubscriptionsResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateSubscriptionsResponse\",\n  []\n);\nconst SendDataRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SendDataRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"data\",\n      kind: \"scalar\",\n      T: 12\n      /* ScalarType.BYTES */\n    },\n    { no: 3, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(DataPacket_Kind) },\n    { no: 4, name: \"destination_sids\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 6, name: \"destination_identities\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 5, name: \"topic\", kind: \"scalar\", T: 9, opt: true }\n  ]\n);\nconst SendDataResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SendDataResponse\",\n  []\n);\nconst UpdateRoomMetadataRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateRoomMetadataRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"room\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst RoomConfiguration = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomConfiguration\",\n  () => [\n    {\n      no: 1,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"empty_timeout\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"departure_timeout\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 4,\n      name: \"max_participants\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 5, name: \"egress\", kind: \"message\", T: RoomEgress },\n    {\n      no: 7,\n      name: \"min_playout_delay\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 8,\n      name: \"max_playout_delay\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 9,\n      name: \"sync_streams\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 10, name: \"agents\", kind: \"message\", T: RoomAgentDispatch, repeated: true }\n  ]\n);\n\nconst SignalTarget = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SignalTarget\",\n  [\n    { no: 0, name: \"PUBLISHER\" },\n    { no: 1, name: \"SUBSCRIBER\" }\n  ]\n);\nconst StreamState = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.StreamState\",\n  [\n    { no: 0, name: \"ACTIVE\" },\n    { no: 1, name: \"PAUSED\" }\n  ]\n);\nconst CandidateProtocol = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.CandidateProtocol\",\n  [\n    { no: 0, name: \"UDP\" },\n    { no: 1, name: \"TCP\" },\n    { no: 2, name: \"TLS\" }\n  ]\n);\nconst SignalRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SignalRequest\",\n  () => [\n    { no: 1, name: \"offer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 2, name: \"answer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 3, name: \"trickle\", kind: \"message\", T: TrickleRequest, oneof: \"message\" },\n    { no: 4, name: \"add_track\", kind: \"message\", T: AddTrackRequest, oneof: \"message\" },\n    { no: 5, name: \"mute\", kind: \"message\", T: MuteTrackRequest, oneof: \"message\" },\n    { no: 6, name: \"subscription\", kind: \"message\", T: UpdateSubscription, oneof: \"message\" },\n    { no: 7, name: \"track_setting\", kind: \"message\", T: UpdateTrackSettings, oneof: \"message\" },\n    { no: 8, name: \"leave\", kind: \"message\", T: LeaveRequest, oneof: \"message\" },\n    { no: 10, name: \"update_layers\", kind: \"message\", T: UpdateVideoLayers, oneof: \"message\" },\n    { no: 11, name: \"subscription_permission\", kind: \"message\", T: SubscriptionPermission, oneof: \"message\" },\n    { no: 12, name: \"sync_state\", kind: \"message\", T: SyncState, oneof: \"message\" },\n    { no: 13, name: \"simulate\", kind: \"message\", T: SimulateScenario, oneof: \"message\" },\n    { no: 14, name: \"ping\", kind: \"scalar\", T: 3, oneof: \"message\" },\n    { no: 15, name: \"update_metadata\", kind: \"message\", T: UpdateParticipantMetadata, oneof: \"message\" },\n    { no: 16, name: \"ping_req\", kind: \"message\", T: Ping, oneof: \"message\" },\n    { no: 17, name: \"update_audio_track\", kind: \"message\", T: UpdateLocalAudioTrack, oneof: \"message\" },\n    { no: 18, name: \"update_video_track\", kind: \"message\", T: UpdateLocalVideoTrack, oneof: \"message\" }\n  ]\n);\nconst SignalResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SignalResponse\",\n  () => [\n    { no: 1, name: \"join\", kind: \"message\", T: JoinResponse, oneof: \"message\" },\n    { no: 2, name: \"answer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 3, name: \"offer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 4, name: \"trickle\", kind: \"message\", T: TrickleRequest, oneof: \"message\" },\n    { no: 5, name: \"update\", kind: \"message\", T: ParticipantUpdate, oneof: \"message\" },\n    { no: 6, name: \"track_published\", kind: \"message\", T: TrackPublishedResponse, oneof: \"message\" },\n    { no: 8, name: \"leave\", kind: \"message\", T: LeaveRequest, oneof: \"message\" },\n    { no: 9, name: \"mute\", kind: \"message\", T: MuteTrackRequest, oneof: \"message\" },\n    { no: 10, name: \"speakers_changed\", kind: \"message\", T: SpeakersChanged, oneof: \"message\" },\n    { no: 11, name: \"room_update\", kind: \"message\", T: RoomUpdate, oneof: \"message\" },\n    { no: 12, name: \"connection_quality\", kind: \"message\", T: ConnectionQualityUpdate, oneof: \"message\" },\n    { no: 13, name: \"stream_state_update\", kind: \"message\", T: StreamStateUpdate, oneof: \"message\" },\n    { no: 14, name: \"subscribed_quality_update\", kind: \"message\", T: SubscribedQualityUpdate, oneof: \"message\" },\n    { no: 15, name: \"subscription_permission_update\", kind: \"message\", T: SubscriptionPermissionUpdate, oneof: \"message\" },\n    { no: 16, name: \"refresh_token\", kind: \"scalar\", T: 9, oneof: \"message\" },\n    { no: 17, name: \"track_unpublished\", kind: \"message\", T: TrackUnpublishedResponse, oneof: \"message\" },\n    { no: 18, name: \"pong\", kind: \"scalar\", T: 3, oneof: \"message\" },\n    { no: 19, name: \"reconnect\", kind: \"message\", T: ReconnectResponse, oneof: \"message\" },\n    { no: 20, name: \"pong_resp\", kind: \"message\", T: Pong, oneof: \"message\" },\n    { no: 21, name: \"subscription_response\", kind: \"message\", T: SubscriptionResponse, oneof: \"message\" },\n    { no: 22, name: \"request_response\", kind: \"message\", T: RequestResponse, oneof: \"message\" },\n    { no: 23, name: \"track_subscribed\", kind: \"message\", T: TrackSubscribed, oneof: \"message\" }\n  ]\n);\nconst SimulcastCodec = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SimulcastCodec\",\n  () => [\n    {\n      no: 1,\n      name: \"codec\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"cid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst AddTrackRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.AddTrackRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"cid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"type\", kind: \"enum\", T: proto3.getEnumType(TrackType) },\n    {\n      no: 4,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 5,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 6,\n      name: \"muted\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 7,\n      name: \"disable_dtx\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 8, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 9, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n    { no: 10, name: \"simulcast_codecs\", kind: \"message\", T: SimulcastCodec, repeated: true },\n    {\n      no: 11,\n      name: \"sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 12,\n      name: \"stereo\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 13,\n      name: \"disable_red\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 14, name: \"encryption\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    {\n      no: 15,\n      name: \"stream\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst TrickleRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrickleRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"candidateInit\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"target\", kind: \"enum\", T: proto3.getEnumType(SignalTarget) },\n    {\n      no: 3,\n      name: \"final\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst MuteTrackRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.MuteTrackRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"muted\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst JoinResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.JoinResponse\",\n  () => [\n    { no: 1, name: \"room\", kind: \"message\", T: Room },\n    { no: 2, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n    { no: 3, name: \"other_participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n    {\n      no: 4,\n      name: \"server_version\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"ice_servers\", kind: \"message\", T: ICEServer, repeated: true },\n    {\n      no: 6,\n      name: \"subscriber_primary\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 7,\n      name: \"alternative_url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 8, name: \"client_configuration\", kind: \"message\", T: ClientConfiguration },\n    {\n      no: 9,\n      name: \"server_region\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 10,\n      name: \"ping_timeout\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    {\n      no: 11,\n      name: \"ping_interval\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    },\n    { no: 12, name: \"server_info\", kind: \"message\", T: ServerInfo },\n    {\n      no: 13,\n      name: \"sif_trailer\",\n      kind: \"scalar\",\n      T: 12\n      /* ScalarType.BYTES */\n    },\n    { no: 14, name: \"enabled_publish_codecs\", kind: \"message\", T: Codec, repeated: true },\n    {\n      no: 15,\n      name: \"fast_publish\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst ReconnectResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ReconnectResponse\",\n  () => [\n    { no: 1, name: \"ice_servers\", kind: \"message\", T: ICEServer, repeated: true },\n    { no: 2, name: \"client_configuration\", kind: \"message\", T: ClientConfiguration }\n  ]\n);\nconst TrackPublishedResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackPublishedResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"cid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"track\", kind: \"message\", T: TrackInfo }\n  ]\n);\nconst TrackUnpublishedResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackUnpublishedResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SessionDescription = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SessionDescription\",\n  () => [\n    {\n      no: 1,\n      name: \"type\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"sdp\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst ParticipantUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ParticipantUpdate\",\n  () => [\n    { no: 1, name: \"participants\", kind: \"message\", T: ParticipantInfo, repeated: true }\n  ]\n);\nconst UpdateSubscription = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateSubscription\",\n  () => [\n    { no: 1, name: \"track_sids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 2,\n      name: \"subscribe\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 3, name: \"participant_tracks\", kind: \"message\", T: ParticipantTracks, repeated: true }\n  ]\n);\nconst UpdateTrackSettings = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateTrackSettings\",\n  () => [\n    { no: 1, name: \"track_sids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 3,\n      name: \"disabled\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 4, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    {\n      no: 5,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 6,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 7,\n      name: \"fps\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 8,\n      name: \"priority\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst UpdateLocalAudioTrack = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateLocalAudioTrack\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"features\", kind: \"enum\", T: proto3.getEnumType(AudioTrackFeature), repeated: true }\n  ]\n);\nconst UpdateLocalVideoTrack = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateLocalVideoTrack\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"width\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    {\n      no: 3,\n      name: \"height\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst LeaveRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.LeaveRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"can_reconnect\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 2, name: \"reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) },\n    { no: 3, name: \"action\", kind: \"enum\", T: proto3.getEnumType(LeaveRequest_Action) },\n    { no: 4, name: \"regions\", kind: \"message\", T: RegionSettings }\n  ]\n);\nconst LeaveRequest_Action = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.LeaveRequest.Action\",\n  [\n    { no: 0, name: \"DISCONNECT\" },\n    { no: 1, name: \"RESUME\" },\n    { no: 2, name: \"RECONNECT\" }\n  ]\n);\nconst UpdateVideoLayers = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateVideoLayers\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true }\n  ]\n);\nconst UpdateParticipantMetadata = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.UpdateParticipantMetadata\",\n  () => [\n    {\n      no: 1,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    {\n      no: 4,\n      name: \"request_id\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    }\n  ]\n);\nconst ICEServer = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ICEServer\",\n  () => [\n    { no: 1, name: \"urls\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 2,\n      name: \"username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"credential\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SpeakersChanged = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SpeakersChanged\",\n  () => [\n    { no: 1, name: \"speakers\", kind: \"message\", T: SpeakerInfo, repeated: true }\n  ]\n);\nconst RoomUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RoomUpdate\",\n  () => [\n    { no: 1, name: \"room\", kind: \"message\", T: Room }\n  ]\n);\nconst ConnectionQualityInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ConnectionQualityInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(ConnectionQuality) },\n    {\n      no: 3,\n      name: \"score\",\n      kind: \"scalar\",\n      T: 2\n      /* ScalarType.FLOAT */\n    }\n  ]\n);\nconst ConnectionQualityUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ConnectionQualityUpdate\",\n  () => [\n    { no: 1, name: \"updates\", kind: \"message\", T: ConnectionQualityInfo, repeated: true }\n  ]\n);\nconst StreamStateInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.StreamStateInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 3, name: \"state\", kind: \"enum\", T: proto3.getEnumType(StreamState) }\n  ]\n);\nconst StreamStateUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.StreamStateUpdate\",\n  () => [\n    { no: 1, name: \"stream_states\", kind: \"message\", T: StreamStateInfo, repeated: true }\n  ]\n);\nconst SubscribedQuality = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SubscribedQuality\",\n  () => [\n    { no: 1, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    {\n      no: 2,\n      name: \"enabled\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst SubscribedCodec = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SubscribedCodec\",\n  () => [\n    {\n      no: 1,\n      name: \"codec\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"qualities\", kind: \"message\", T: SubscribedQuality, repeated: true }\n  ]\n);\nconst SubscribedQualityUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SubscribedQualityUpdate\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"subscribed_qualities\", kind: \"message\", T: SubscribedQuality, repeated: true },\n    { no: 3, name: \"subscribed_codecs\", kind: \"message\", T: SubscribedCodec, repeated: true }\n  ]\n);\nconst TrackPermission = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackPermission\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"all_tracks\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 3, name: \"track_sids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 4,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SubscriptionPermission = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SubscriptionPermission\",\n  () => [\n    {\n      no: 1,\n      name: \"all_participants\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 2, name: \"track_permissions\", kind: \"message\", T: TrackPermission, repeated: true }\n  ]\n);\nconst SubscriptionPermissionUpdate = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SubscriptionPermissionUpdate\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"allowed\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst SyncState = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SyncState\",\n  () => [\n    { no: 1, name: \"answer\", kind: \"message\", T: SessionDescription },\n    { no: 2, name: \"subscription\", kind: \"message\", T: UpdateSubscription },\n    { no: 3, name: \"publish_tracks\", kind: \"message\", T: TrackPublishedResponse, repeated: true },\n    { no: 4, name: \"data_channels\", kind: \"message\", T: DataChannelInfo, repeated: true },\n    { no: 5, name: \"offer\", kind: \"message\", T: SessionDescription },\n    { no: 6, name: \"track_sids_disabled\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst DataChannelInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DataChannelInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"label\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 3, name: \"target\", kind: \"enum\", T: proto3.getEnumType(SignalTarget) }\n  ]\n);\nconst SimulateScenario = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SimulateScenario\",\n  () => [\n    { no: 1, name: \"speaker_update\", kind: \"scalar\", T: 5, oneof: \"scenario\" },\n    { no: 2, name: \"node_failure\", kind: \"scalar\", T: 8, oneof: \"scenario\" },\n    { no: 3, name: \"migration\", kind: \"scalar\", T: 8, oneof: \"scenario\" },\n    { no: 4, name: \"server_leave\", kind: \"scalar\", T: 8, oneof: \"scenario\" },\n    { no: 5, name: \"switch_candidate_protocol\", kind: \"enum\", T: proto3.getEnumType(CandidateProtocol), oneof: \"scenario\" },\n    { no: 6, name: \"subscriber_bandwidth\", kind: \"scalar\", T: 3, oneof: \"scenario\" },\n    { no: 7, name: \"disconnect_signal_on_resume\", kind: \"scalar\", T: 8, oneof: \"scenario\" },\n    { no: 8, name: \"disconnect_signal_on_resume_no_messages\", kind: \"scalar\", T: 8, oneof: \"scenario\" },\n    { no: 9, name: \"leave_request_full_reconnect\", kind: \"scalar\", T: 8, oneof: \"scenario\" }\n  ]\n);\nconst Ping = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Ping\",\n  () => [\n    {\n      no: 1,\n      name: \"timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 2,\n      name: \"rtt\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst Pong = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.Pong\",\n  () => [\n    {\n      no: 1,\n      name: \"last_ping_timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 2,\n      name: \"timestamp\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst RegionSettings = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RegionSettings\",\n  () => [\n    { no: 1, name: \"regions\", kind: \"message\", T: RegionInfo, repeated: true }\n  ]\n);\nconst RegionInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RegionInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"region\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"url\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"distance\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    }\n  ]\n);\nconst SubscriptionResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SubscriptionResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"err\", kind: \"enum\", T: proto3.getEnumType(SubscriptionError) }\n  ]\n);\nconst RequestResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.RequestResponse\",\n  () => [\n    {\n      no: 1,\n      name: \"request_id\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 2, name: \"reason\", kind: \"enum\", T: proto3.getEnumType(RequestResponse_Reason) },\n    {\n      no: 3,\n      name: \"message\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst RequestResponse_Reason = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.RequestResponse.Reason\",\n  [\n    { no: 0, name: \"OK\" },\n    { no: 1, name: \"NOT_FOUND\" },\n    { no: 2, name: \"NOT_ALLOWED\" },\n    { no: 3, name: \"LIMIT_EXCEEDED\" }\n  ]\n);\nconst TrackSubscribed = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TrackSubscribed\",\n  () => [\n    {\n      no: 1,\n      name: \"track_sid\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\n\nconst SIPTransport = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SIPTransport\",\n  [\n    { no: 0, name: \"SIP_TRANSPORT_AUTO\" },\n    { no: 1, name: \"SIP_TRANSPORT_UDP\" },\n    { no: 2, name: \"SIP_TRANSPORT_TCP\" },\n    { no: 3, name: \"SIP_TRANSPORT_TLS\" }\n  ]\n);\nconst SIPHeaderOptions = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SIPHeaderOptions\",\n  [\n    { no: 0, name: \"SIP_NO_HEADERS\" },\n    { no: 1, name: \"SIP_X_HEADERS\" },\n    { no: 2, name: \"SIP_ALL_HEADERS\" }\n  ]\n);\nconst SIPCallStatus = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SIPCallStatus\",\n  [\n    { no: 0, name: \"SCS_CALL_INCOMING\" },\n    { no: 1, name: \"SCS_PARTICIPANT_JOINED\" },\n    { no: 2, name: \"SCS_ACTIVE\" },\n    { no: 3, name: \"SCS_DISCONNECTED\" },\n    { no: 4, name: \"SCS_ERROR\" }\n  ]\n);\nconst SIPFeature = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SIPFeature\",\n  [\n    { no: 0, name: \"NONE\" },\n    { no: 1, name: \"KRISP_ENABLED\" }\n  ]\n);\nconst CreateSIPTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateSIPTrunkRequest\",\n  () => [\n    { no: 1, name: \"inbound_addresses\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 2,\n      name: \"outbound_address\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"outbound_number\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"inbound_numbers_regex\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 9, name: \"inbound_numbers\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 5,\n      name: \"inbound_username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"inbound_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"outbound_username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"outbound_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 10,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 11,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SIPTrunkInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPTrunkInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 14, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(SIPTrunkInfo_TrunkKind) },\n    { no: 2, name: \"inbound_addresses\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 3,\n      name: \"outbound_address\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"outbound_number\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 13, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) },\n    { no: 5, name: \"inbound_numbers_regex\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 10, name: \"inbound_numbers\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 6,\n      name: \"inbound_username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"inbound_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"outbound_username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 9,\n      name: \"outbound_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 11,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 12,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SIPTrunkInfo_TrunkKind = /* @__PURE__ */ proto3.makeEnum(\n  \"livekit.SIPTrunkInfo.TrunkKind\",\n  [\n    { no: 0, name: \"TRUNK_LEGACY\" },\n    { no: 1, name: \"TRUNK_INBOUND\" },\n    { no: 2, name: \"TRUNK_OUTBOUND\" }\n  ]\n);\nconst CreateSIPInboundTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateSIPInboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPInboundTrunkInfo }\n  ]\n);\nconst SIPInboundTrunkInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPInboundTrunkInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 4, name: \"numbers\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 5, name: \"allowed_addresses\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 6, name: \"allowed_numbers\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 7,\n      name: \"auth_username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"auth_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 9, name: \"headers\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 10, name: \"headers_to_attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 14, name: \"attributes_to_headers\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 15, name: \"include_headers\", kind: \"enum\", T: proto3.getEnumType(SIPHeaderOptions) },\n    { no: 11, name: \"ringing_timeout\", kind: \"message\", T: Duration },\n    { no: 12, name: \"max_call_duration\", kind: \"message\", T: Duration },\n    {\n      no: 13,\n      name: \"krisp_enabled\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst CreateSIPOutboundTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateSIPOutboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPOutboundTrunkInfo }\n  ]\n);\nconst SIPOutboundTrunkInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPOutboundTrunkInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"address\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 5, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) },\n    { no: 6, name: \"numbers\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 7,\n      name: \"auth_username\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"auth_password\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 9, name: \"headers\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 10, name: \"headers_to_attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 11, name: \"attributes_to_headers\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 12, name: \"include_headers\", kind: \"enum\", T: proto3.getEnumType(SIPHeaderOptions) }\n  ]\n);\nconst GetSIPInboundTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.GetSIPInboundTrunkRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst GetSIPInboundTrunkResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.GetSIPInboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPInboundTrunkInfo }\n  ]\n);\nconst GetSIPOutboundTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.GetSIPOutboundTrunkRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst GetSIPOutboundTrunkResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.GetSIPOutboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPOutboundTrunkInfo }\n  ]\n);\nconst ListSIPTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPTrunkRequest\",\n  []\n);\nconst ListSIPTrunkResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPTrunkResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPTrunkInfo, repeated: true }\n  ]\n);\nconst ListSIPInboundTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPInboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"trunk_ids\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 2, name: \"numbers\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst ListSIPInboundTrunkResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPInboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPInboundTrunkInfo, repeated: true }\n  ]\n);\nconst ListSIPOutboundTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPOutboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"trunk_ids\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 2, name: \"numbers\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst ListSIPOutboundTrunkResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPOutboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPOutboundTrunkInfo, repeated: true }\n  ]\n);\nconst DeleteSIPTrunkRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DeleteSIPTrunkRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SIPDispatchRuleDirect = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleDirect\",\n  () => [\n    {\n      no: 1,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"pin\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SIPDispatchRuleIndividual = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleIndividual\",\n  () => [\n    {\n      no: 1,\n      name: \"room_prefix\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"pin\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SIPDispatchRuleCallee = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleCallee\",\n  () => [\n    {\n      no: 1,\n      name: \"room_prefix\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"pin\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"randomize\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst SIPDispatchRule = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPDispatchRule\",\n  () => [\n    { no: 1, name: \"dispatch_rule_direct\", kind: \"message\", T: SIPDispatchRuleDirect, oneof: \"rule\" },\n    { no: 2, name: \"dispatch_rule_individual\", kind: \"message\", T: SIPDispatchRuleIndividual, oneof: \"rule\" },\n    { no: 3, name: \"dispatch_rule_callee\", kind: \"message\", T: SIPDispatchRuleCallee, oneof: \"rule\" }\n  ]\n);\nconst CreateSIPDispatchRuleRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateSIPDispatchRuleRequest\",\n  () => [\n    { no: 1, name: \"rule\", kind: \"message\", T: SIPDispatchRule },\n    { no: 2, name: \"trunk_ids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 3,\n      name: \"hide_phone_number\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 6, name: \"inbound_numbers\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 4,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 7, name: \"attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    {\n      no: 8,\n      name: \"room_preset\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 9, name: \"room_config\", kind: \"message\", T: RoomConfiguration }\n  ]\n);\nconst SIPDispatchRuleInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_dispatch_rule_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"rule\", kind: \"message\", T: SIPDispatchRule },\n    { no: 3, name: \"trunk_ids\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 4,\n      name: \"hide_phone_number\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 7, name: \"inbound_numbers\", kind: \"scalar\", T: 9, repeated: true },\n    {\n      no: 5,\n      name: \"name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 8, name: \"attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    {\n      no: 9,\n      name: \"room_preset\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 10, name: \"room_config\", kind: \"message\", T: RoomConfiguration }\n  ]\n);\nconst ListSIPDispatchRuleRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPDispatchRuleRequest\",\n  () => [\n    { no: 1, name: \"dispatch_rule_ids\", kind: \"scalar\", T: 9, repeated: true },\n    { no: 2, name: \"trunk_ids\", kind: \"scalar\", T: 9, repeated: true }\n  ]\n);\nconst ListSIPDispatchRuleResponse = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.ListSIPDispatchRuleResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPDispatchRuleInfo, repeated: true }\n  ]\n);\nconst DeleteSIPDispatchRuleRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.DeleteSIPDispatchRuleRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_dispatch_rule_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst CreateSIPParticipantRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.CreateSIPParticipantRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"sip_trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"sip_call_to\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 15,\n      name: \"sip_number\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"participant_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 8,\n      name: \"participant_metadata\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 9, name: \"participant_attributes\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    {\n      no: 5,\n      name: \"dtmf\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 6,\n      name: \"play_ringtone\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 13,\n      name: \"play_dialtone\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    {\n      no: 10,\n      name: \"hide_phone_number\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 16, name: \"headers\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } },\n    { no: 17, name: \"include_headers\", kind: \"enum\", T: proto3.getEnumType(SIPHeaderOptions) },\n    { no: 11, name: \"ringing_timeout\", kind: \"message\", T: Duration },\n    { no: 12, name: \"max_call_duration\", kind: \"message\", T: Duration },\n    {\n      no: 14,\n      name: \"enable_krisp\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    }\n  ]\n);\nconst SIPParticipantInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPParticipantInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"sip_call_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst TransferSIPParticipantRequest = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.TransferSIPParticipantRequest\",\n  () => [\n    {\n      no: 1,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"transfer_to\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"play_dialtone\",\n      kind: \"scalar\",\n      T: 8\n      /* ScalarType.BOOL */\n    },\n    { no: 5, name: \"headers\", kind: \"map\", K: 9, V: {\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    } }\n  ]\n);\nconst SIPCallInfo = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPCallInfo\",\n  () => [\n    {\n      no: 1,\n      name: \"call_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"trunk_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"room_name\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"room_id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 5,\n      name: \"participant_identity\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 6, name: \"from_uri\", kind: \"message\", T: SIPUri },\n    { no: 7, name: \"to_uri\", kind: \"message\", T: SIPUri },\n    { no: 14, name: \"enabled_features\", kind: \"enum\", T: proto3.getEnumType(SIPFeature), repeated: true },\n    { no: 8, name: \"call_status\", kind: \"enum\", T: proto3.getEnumType(SIPCallStatus) },\n    {\n      no: 9,\n      name: \"created_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 10,\n      name: \"started_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 11,\n      name: \"ended_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    { no: 12, name: \"disconnect_reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) },\n    {\n      no: 13,\n      name: \"error\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    }\n  ]\n);\nconst SIPUri = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.SIPUri\",\n  () => [\n    {\n      no: 1,\n      name: \"user\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 2,\n      name: \"host\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 3,\n      name: \"ip\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 4,\n      name: \"port\",\n      kind: \"scalar\",\n      T: 13\n      /* ScalarType.UINT32 */\n    },\n    { no: 5, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) }\n  ]\n);\n\nconst WebhookEvent = /* @__PURE__ */ proto3.makeMessageType(\n  \"livekit.WebhookEvent\",\n  () => [\n    {\n      no: 1,\n      name: \"event\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    { no: 2, name: \"room\", kind: \"message\", T: Room },\n    { no: 3, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n    { no: 9, name: \"egress_info\", kind: \"message\", T: EgressInfo },\n    { no: 10, name: \"ingress_info\", kind: \"message\", T: IngressInfo },\n    { no: 8, name: \"track\", kind: \"message\", T: TrackInfo },\n    {\n      no: 6,\n      name: \"id\",\n      kind: \"scalar\",\n      T: 9\n      /* ScalarType.STRING */\n    },\n    {\n      no: 7,\n      name: \"created_at\",\n      kind: \"scalar\",\n      T: 3\n      /* ScalarType.INT64 */\n    },\n    {\n      no: 11,\n      name: \"num_dropped\",\n      kind: \"scalar\",\n      T: 5\n      /* ScalarType.INT32 */\n    }\n  ]\n);\n\nconst version = \"1.30.0\";\n\nexport { ActiveSpeakerUpdate, AddTrackRequest, AgentDispatch, AgentDispatchState, AliOSSUpload, AudioCodec, AudioTrackFeature, AutoParticipantEgress, AutoTrackEgress, AvailabilityRequest, AvailabilityResponse, AzureBlobUpload, CandidateProtocol, ChatMessage, ClientConfigSetting, ClientConfiguration, ClientInfo, ClientInfo_SDK, Codec, ConnectionQuality, ConnectionQualityInfo, ConnectionQualityUpdate, CreateAgentDispatchRequest, CreateIngressRequest, CreateRoomRequest, CreateSIPDispatchRuleRequest, CreateSIPInboundTrunkRequest, CreateSIPOutboundTrunkRequest, CreateSIPParticipantRequest, CreateSIPTrunkRequest, DataChannelInfo, DataPacket, DataPacket_Kind, DataStream, DataStream_Chunk, DataStream_FileHeader, DataStream_Header, DataStream_OperationType, DataStream_TextHeader, DeleteAgentDispatchRequest, DeleteIngressRequest, DeleteRoomRequest, DeleteRoomResponse, DeleteSIPDispatchRuleRequest, DeleteSIPTrunkRequest, DirectFileOutput, DisabledCodecs, DisconnectReason, EgressInfo, EgressSourceType, EgressStatus, EncodedFileOutput, EncodedFileType, EncodingOptions, EncodingOptionsPreset, Encryption, Encryption_Type, EventMetric, FileInfo, GCPUpload, GetSIPInboundTrunkRequest, GetSIPInboundTrunkResponse, GetSIPOutboundTrunkRequest, GetSIPOutboundTrunkResponse, ICEServer, ImageCodec, ImageFileSuffix, ImageOutput, ImagesInfo, IngressAudioEncodingOptions, IngressAudioEncodingPreset, IngressAudioOptions, IngressInfo, IngressInput, IngressState, IngressState_Status, IngressVideoEncodingOptions, IngressVideoEncodingPreset, IngressVideoOptions, InputAudioState, InputVideoState, Job, JobAssignment, JobState, JobStatus, JobTermination, JobType, JoinResponse, LeaveRequest, LeaveRequest_Action, ListAgentDispatchRequest, ListAgentDispatchResponse, ListEgressRequest, ListEgressResponse, ListIngressRequest, ListIngressResponse, ListParticipantsRequest, ListParticipantsResponse, ListRoomsRequest, ListRoomsResponse, ListSIPDispatchRuleRequest, ListSIPDispatchRuleResponse, ListSIPInboundTrunkRequest, ListSIPInboundTrunkResponse, ListSIPOutboundTrunkRequest, ListSIPOutboundTrunkResponse, ListSIPTrunkRequest, ListSIPTrunkResponse, MetricLabel, MetricSample, MetricsBatch, MigrateJobRequest, MuteRoomTrackRequest, MuteRoomTrackResponse, MuteTrackRequest, ParticipantEgressRequest, ParticipantInfo, ParticipantInfo_Kind, ParticipantInfo_State, ParticipantPermission, ParticipantTracks, ParticipantUpdate, Ping, PlayoutDelay, Pong, ProxyConfig, RTCPSenderReportState, RTPDrift, RTPForwarderState, RTPMungerState, RTPStats, ReconnectReason, ReconnectResponse, RegionInfo, RegionSettings, RegisterWorkerRequest, RegisterWorkerResponse, RemoveParticipantResponse, RequestResponse, RequestResponse_Reason, Room, RoomAgent, RoomAgentDispatch, RoomCompositeEgressRequest, RoomConfiguration, RoomEgress, RoomParticipantIdentity, RoomUpdate, RpcAck, RpcError, RpcRequest, RpcResponse, S3Upload, SIPCallInfo, SIPCallStatus, SIPDispatchRule, SIPDispatchRuleCallee, SIPDispatchRuleDirect, SIPDispatchRuleIndividual, SIPDispatchRuleInfo, SIPFeature, SIPHeaderOptions, SIPInboundTrunkInfo, SIPOutboundTrunkInfo, SIPParticipantInfo, SIPTransport, SIPTrunkInfo, SIPTrunkInfo_TrunkKind, SIPUri, SegmentedFileOutput, SegmentedFileProtocol, SegmentedFileSuffix, SegmentsInfo, SendDataRequest, SendDataResponse, ServerInfo, ServerInfo_Edition, ServerMessage, SessionDescription, SignalRequest, SignalResponse, SignalTarget, SimulateJobRequest, SimulateScenario, SimulcastCodec, SimulcastCodecInfo, SipDTMF, SpeakerInfo, SpeakersChanged, StopEgressRequest, StreamInfo, StreamInfoList, StreamInfo_Status, StreamOutput, StreamProtocol, StreamState, StreamStateInfo, StreamStateUpdate, SubscribedCodec, SubscribedQuality, SubscribedQualityUpdate, SubscriptionError, SubscriptionPermission, SubscriptionPermissionUpdate, SubscriptionResponse, SyncState, TimeSeriesMetric, TimedVersion, TrackCompositeEgressRequest, TrackEgressRequest, TrackInfo, TrackPermission, TrackPublishedResponse, TrackSource, TrackSubscribed, TrackType, TrackUnpublishedResponse, Transcription, TranscriptionSegment, TransferSIPParticipantRequest, TrickleRequest, UpdateIngressRequest, UpdateJobStatus, UpdateLayoutRequest, UpdateLocalAudioTrack, UpdateLocalVideoTrack, UpdateParticipantMetadata, UpdateParticipantRequest, UpdateRoomMetadataRequest, UpdateStreamRequest, UpdateSubscription, UpdateSubscriptionsRequest, UpdateSubscriptionsResponse, UpdateTrackSettings, UpdateVideoLayers, UpdateWorkerStatus, UserPacket, VP8MungerState, VideoCodec, VideoConfiguration, VideoLayer, VideoQuality, WebEgressRequest, WebhookEvent, WorkerMessage, WorkerPing, WorkerPong, WorkerStatus, version };\n//# sourceMappingURL=index.mjs.map\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","import * as log from 'loglevel';\n\nexport enum LogLevel {\n  trace = 0,\n  debug = 1,\n  info = 2,\n  warn = 3,\n  error = 4,\n  silent = 5,\n}\n\nexport enum LoggerNames {\n  Default = 'livekit',\n  Room = 'livekit-room',\n  Participant = 'livekit-participant',\n  Track = 'livekit-track',\n  Publication = 'livekit-track-publication',\n  Engine = 'livekit-engine',\n  Signal = 'livekit-signal',\n  PCManager = 'livekit-pc-manager',\n  PCTransport = 'livekit-pc-transport',\n  E2EE = 'lk-e2ee',\n}\n\ntype LogLevelString = keyof typeof LogLevel;\n\nexport type StructuredLogger = log.Logger & {\n  trace: (msg: string, context?: object) => void;\n  debug: (msg: string, context?: object) => void;\n  info: (msg: string, context?: object) => void;\n  warn: (msg: string, context?: object) => void;\n  error: (msg: string, context?: object) => void;\n  setDefaultLevel: (level: log.LogLevelDesc) => void;\n  setLevel: (level: log.LogLevelDesc) => void;\n  getLevel: () => number;\n};\n\nlet livekitLogger = log.getLogger('livekit');\nconst livekitLoggers = Object.values(LoggerNames).map((name) => log.getLogger(name));\n\nlivekitLogger.setDefaultLevel(LogLevel.info);\n\nexport default livekitLogger as StructuredLogger;\n\n/**\n * @internal\n */\nexport function getLogger(name: string) {\n  const logger = log.getLogger(name);\n  logger.setDefaultLevel(livekitLogger.getLevel());\n  return logger as StructuredLogger;\n}\n\nexport function setLogLevel(level: LogLevel | LogLevelString, loggerName?: LoggerNames) {\n  if (loggerName) {\n    log.getLogger(loggerName).setLevel(level);\n  } else {\n    for (const logger of livekitLoggers) {\n      logger.setLevel(level);\n    }\n  }\n}\n\nexport type LogExtension = (level: LogLevel, msg: string, context?: object) => void;\n\n/**\n * use this to hook into the logging function to allow sending internal livekit logs to third party services\n * if set, the browser logs will lose their stacktrace information (see https://github.com/pimterry/loglevel#writing-plugins)\n */\nexport function setLogExtension(extension: LogExtension, logger?: StructuredLogger) {\n  const loggers = logger ? [logger] : livekitLoggers;\n\n  loggers.forEach((logR) => {\n    const originalFactory = logR.methodFactory;\n\n    logR.methodFactory = (methodName, configLevel, loggerName) => {\n      const rawMethod = originalFactory(methodName, configLevel, loggerName);\n\n      const logLevel = LogLevel[methodName as LogLevelString];\n      const needLog = logLevel >= configLevel && logLevel < LogLevel.silent;\n\n      return (msg, context?: [msg: string, context: object]) => {\n        if (context) rawMethod(msg, context);\n        else rawMethod(msg);\n        if (needLog) {\n          extension(logLevel, msg, context);\n        }\n      };\n    };\n    logR.setLevel(logR.getLevel());\n  });\n}\n\nexport const workerLogger = log.getLogger('lk-e2ee') as StructuredLogger;\n","import type { ReconnectContext, ReconnectPolicy } from './ReconnectPolicy';\n\nconst maxRetryDelay = 7000;\n\nconst DEFAULT_RETRY_DELAYS_IN_MS = [\n  0,\n  300,\n  2 * 2 * 300,\n  3 * 3 * 300,\n  4 * 4 * 300,\n  maxRetryDelay,\n  maxRetryDelay,\n  maxRetryDelay,\n  maxRetryDelay,\n  maxRetryDelay,\n];\n\nclass DefaultReconnectPolicy implements ReconnectPolicy {\n  private readonly _retryDelays: number[];\n\n  constructor(retryDelays?: number[]) {\n    this._retryDelays = retryDelays !== undefined ? [...retryDelays] : DEFAULT_RETRY_DELAYS_IN_MS;\n  }\n\n  public nextRetryDelayInMs(context: ReconnectContext): number | null {\n    if (context.retryCount >= this._retryDelays.length) return null;\n\n    const retryDelay = this._retryDelays[context.retryCount];\n    if (context.retryCount <= 1) return retryDelay;\n\n    return retryDelay + Math.random() * 1_000;\n  }\n}\n\nexport default DefaultReconnectPolicy;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  // Prefer navigator.userAgentData.\n  if (navigator.userAgentData && navigator.userAgentData.brands) {\n    const chromium = navigator.userAgentData.brands.find((brand) => {\n      return brand.brand === 'Chromium';\n    });\n    if (chromium) {\n      return {browser: 'chrome', version: parseInt(chromium.version, 10)};\n    }\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","import type { KeyProviderOptions } from './types';\n\nexport const ENCRYPTION_ALGORITHM = 'AES-GCM';\n\n// How many consecutive frames can fail decrypting before a particular key gets marked as invalid\nexport const DECRYPTION_FAILURE_TOLERANCE = 10;\n\n// We copy the first bytes of the VP8 payload unencrypted.\n// For keyframes this is 10 bytes, for non-keyframes (delta) 3. See\n//   https://tools.ietf.org/html/rfc6386#section-9.1\n// This allows the bridge to continue detecting keyframes (only one byte needed in the JVB)\n// and is also a bit easier for the VP8 decoder (i.e. it generates funny garbage pictures\n// instead of being unable to decode).\n// This is a bit for show and we might want to reduce to 1 unconditionally in the final version.\n//\n// For audio (where frame.type is not set) we do not encrypt the opus TOC byte:\n//   https://tools.ietf.org/html/rfc6716#section-3.1\nexport const UNENCRYPTED_BYTES = {\n  key: 10,\n  delta: 3,\n  audio: 1, // frame.type is not set on audio, so this is set manually\n  empty: 0,\n} as const;\n\n/* We use a 12 byte bit IV. This is signalled in plain together with the\n packet. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters */\nexport const IV_LENGTH = 12;\n\n// flag set to indicate that e2ee has been setup for sender/receiver;\nexport const E2EE_FLAG = 'lk_e2ee';\n\nexport const SALT = 'LKFrameEncryptionKey';\n\nexport const KEY_PROVIDER_DEFAULTS: KeyProviderOptions = {\n  sharedKey: false,\n  ratchetSalt: SALT,\n  ratchetWindowSize: 8,\n  failureTolerance: DECRYPTION_FAILURE_TOLERANCE,\n  keyringSize: 16,\n} as const;\n\nexport const MAX_SIF_COUNT = 100;\nexport const MAX_SIF_DURATION = 2000;\n","import type Participant from '../room/participant/Participant';\nimport type { CryptorError } from './errors';\nimport type { KeyInfo } from './types';\n\nexport enum KeyProviderEvent {\n  SetKey = 'setKey',\n  RatchetRequest = 'ratchetRequest',\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type KeyProviderCallbacks = {\n  [KeyProviderEvent.SetKey]: (keyInfo: KeyInfo) => void;\n  [KeyProviderEvent.RatchetRequest]: (participantIdentity?: string, keyIndex?: number) => void;\n  [KeyProviderEvent.KeyRatcheted]: (material: CryptoKey, keyIndex?: number) => void;\n};\n\nexport enum KeyHandlerEvent {\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type ParticipantKeyHandlerCallbacks = {\n  [KeyHandlerEvent.KeyRatcheted]: (\n    material: CryptoKey,\n    participantIdentity: string,\n    keyIndex?: number,\n  ) => void;\n};\n\nexport enum EncryptionEvent {\n  ParticipantEncryptionStatusChanged = 'participantEncryptionStatusChanged',\n  EncryptionError = 'encryptionError',\n}\n\nexport type E2EEManagerCallbacks = {\n  [EncryptionEvent.ParticipantEncryptionStatusChanged]: (\n    enabled: boolean,\n    participant: Participant,\n  ) => void;\n  [EncryptionEvent.EncryptionError]: (error: Error) => void;\n};\n\nexport type CryptorCallbacks = {\n  [CryptorEvent.Error]: (error: CryptorError) => void;\n};\n\nexport enum CryptorEvent {\n  Error = 'cryptorError',\n}\n","import { ENCRYPTION_ALGORITHM } from './constants';\n\nexport function isE2EESupported() {\n  return isInsertableStreamSupported() || isScriptTransformSupported();\n}\n\nexport function isScriptTransformSupported() {\n  // @ts-ignore\n  return typeof window.RTCRtpScriptTransform !== 'undefined';\n}\n\nexport function isInsertableStreamSupported() {\n  return (\n    typeof window.RTCRtpSender !== 'undefined' &&\n    // @ts-ignore\n    typeof window.RTCRtpSender.prototype.createEncodedStreams !== 'undefined'\n  );\n}\n\nexport function isVideoFrame(\n  frame: RTCEncodedAudioFrame | RTCEncodedVideoFrame,\n): frame is RTCEncodedVideoFrame {\n  return 'type' in frame;\n}\n\nexport async function importKey(\n  keyBytes: Uint8Array | ArrayBuffer,\n  algorithm: string | { name: string } = { name: ENCRYPTION_ALGORITHM },\n  usage: 'derive' | 'encrypt' = 'encrypt',\n) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n  return crypto.subtle.importKey(\n    'raw',\n    keyBytes,\n    algorithm,\n    false,\n    usage === 'derive' ? ['deriveBits', 'deriveKey'] : ['encrypt', 'decrypt'],\n  );\n}\n\nexport async function createKeyMaterialFromString(password: string) {\n  let enc = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    enc.encode(password),\n    {\n      name: 'PBKDF2',\n    },\n    false,\n    ['deriveBits', 'deriveKey'],\n  );\n\n  return keyMaterial;\n}\n\nexport async function createKeyMaterialFromBuffer(cryptoBuffer: ArrayBuffer) {\n  const keyMaterial = await crypto.subtle.importKey('raw', cryptoBuffer, 'HKDF', false, [\n    'deriveBits',\n    'deriveKey',\n  ]);\n\n  return keyMaterial;\n}\n\nfunction getAlgoOptions(algorithmName: string, salt: string) {\n  const textEncoder = new TextEncoder();\n  const encodedSalt = textEncoder.encode(salt);\n  switch (algorithmName) {\n    case 'HKDF':\n      return {\n        name: 'HKDF',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        info: new ArrayBuffer(128),\n      };\n    case 'PBKDF2': {\n      return {\n        name: 'PBKDF2',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        iterations: 100000,\n      };\n    }\n    default:\n      throw new Error(`algorithm ${algorithmName} is currently unsupported`);\n  }\n}\n\n/**\n * Derives a set of keys from the master key.\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nexport async function deriveKeys(material: CryptoKey, salt: string) {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n  // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n  const encryptionKey = await crypto.subtle.deriveKey(\n    algorithmOptions,\n    material,\n    {\n      name: ENCRYPTION_ALGORITHM,\n      length: 128,\n    },\n    false,\n    ['encrypt', 'decrypt'],\n  );\n\n  return { material, encryptionKey };\n}\n\nexport function createE2EEKey(): Uint8Array {\n  return window.crypto.getRandomValues(new Uint8Array(32));\n}\n\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n */\nexport async function ratchet(material: CryptoKey, salt: string): Promise<ArrayBuffer> {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n  return crypto.subtle.deriveBits(algorithmOptions, material, 256);\n}\n\nexport function needsRbspUnescaping(frameData: Uint8Array) {\n  for (var i = 0; i < frameData.length - 3; i++) {\n    if (frameData[i] == 0 && frameData[i + 1] == 0 && frameData[i + 2] == 3) return true;\n  }\n  return false;\n}\n\nexport function parseRbsp(stream: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var length = stream.length;\n  for (var i = 0; i < stream.length; ) {\n    // Be careful about over/underflow here. byte_length_ - 3 can underflow, and\n    // i + 3 can overflow, but byte_length_ - i can't, because i < byte_length_\n    // above, and that expression will produce the number of bytes left in\n    // the stream including the byte at i.\n    if (length - i >= 3 && !stream[i] && !stream[i + 1] && stream[i + 2] == 3) {\n      // Two rbsp bytes.\n      dataOut.push(stream[i++]);\n      dataOut.push(stream[i++]);\n      // Skip the emulation byte.\n      i++;\n    } else {\n      // Single rbsp byte.\n      dataOut.push(stream[i++]);\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n\nconst kZerosInStartSequence = 2;\nconst kEmulationByte = 3;\n\nexport function writeRbsp(data_in: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var numConsecutiveZeros = 0;\n  for (var i = 0; i < data_in.length; ++i) {\n    var byte = data_in[i];\n    if (byte <= kEmulationByte && numConsecutiveZeros >= kZerosInStartSequence) {\n      // Need to escape.\n      dataOut.push(kEmulationByte);\n      numConsecutiveZeros = 0;\n    }\n    dataOut.push(byte);\n    if (byte == 0) {\n      ++numConsecutiveZeros;\n    } else {\n      numConsecutiveZeros = 0;\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n","import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport log from '../logger';\nimport { KEY_PROVIDER_DEFAULTS } from './constants';\nimport { type KeyProviderCallbacks, KeyProviderEvent } from './events';\nimport type { KeyInfo, KeyProviderOptions } from './types';\nimport { createKeyMaterialFromBuffer, createKeyMaterialFromString } from './utils';\n\n/**\n * @experimental\n */\nexport class BaseKeyProvider extends (EventEmitter as new () => TypedEventEmitter<KeyProviderCallbacks>) {\n  private keyInfoMap: Map<string, KeyInfo>;\n\n  private readonly options: KeyProviderOptions;\n\n  constructor(options: Partial<KeyProviderOptions> = {}) {\n    super();\n    this.keyInfoMap = new Map();\n    this.options = { ...KEY_PROVIDER_DEFAULTS, ...options };\n    this.on(KeyProviderEvent.KeyRatcheted, this.onKeyRatcheted);\n  }\n\n  /**\n   * callback to invoke once a key has been set for a participant\n   * @param key\n   * @param participantIdentity\n   * @param keyIndex\n   */\n  protected onSetEncryptionKey(key: CryptoKey, participantIdentity?: string, keyIndex?: number) {\n    const keyInfo: KeyInfo = { key, participantIdentity, keyIndex };\n    if (!this.options.sharedKey && !participantIdentity) {\n      throw new Error(\n        'participant identity needs to be passed for encryption key if sharedKey option is false',\n      );\n    }\n    this.keyInfoMap.set(`${participantIdentity ?? 'shared'}-${keyIndex ?? 0}`, keyInfo);\n    this.emit(KeyProviderEvent.SetKey, keyInfo);\n  }\n\n  /**\n   * callback being invoked after a ratchet request has been performed on a participant\n   * that surfaces the new key material.\n   * @param material\n   * @param keyIndex\n   */\n  protected onKeyRatcheted = (material: CryptoKey, keyIndex?: number) => {\n    log.debug('key ratcheted event received', { material, keyIndex });\n  };\n\n  getKeys() {\n    return Array.from(this.keyInfoMap.values());\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  ratchetKey(participantIdentity?: string, keyIndex?: number) {\n    this.emit(KeyProviderEvent.RatchetRequest, participantIdentity, keyIndex);\n  }\n}\n\n/**\n * A basic KeyProvider implementation intended for a single shared\n * passphrase between all participants\n * @experimental\n */\nexport class ExternalE2EEKeyProvider extends BaseKeyProvider {\n  ratchetInterval: number | undefined;\n\n  constructor(options: Partial<Omit<KeyProviderOptions, 'sharedKey'>> = {}) {\n    const opts: Partial<KeyProviderOptions> = {\n      ...options,\n      sharedKey: true,\n      // for a shared key provider failing to decrypt for a specific participant\n      // should not mark the key as invalid, so we accept wrong keys forever\n      // and won't try to auto-ratchet\n      ratchetWindowSize: 0,\n      failureTolerance: -1,\n    };\n    super(opts);\n  }\n\n  /**\n   * Accepts a passphrase that's used to create the crypto keys.\n   * When passing in a string, PBKDF2 is used.\n   * When passing in an Array buffer of cryptographically random numbers, HKDF is being used. (recommended)\n   * @param key\n   */\n  async setKey(key: string | ArrayBuffer) {\n    const derivedKey =\n      typeof key === 'string'\n        ? await createKeyMaterialFromString(key)\n        : await createKeyMaterialFromBuffer(key);\n    this.onSetEncryptionKey(derivedKey);\n  }\n}\n","import { DisconnectReason, RequestResponse_Reason } from '@livekit/protocol';\n\nexport class LivekitError extends Error {\n  code: number;\n\n  constructor(code: number, message?: string) {\n    super(message || 'an error has occured');\n    this.code = code;\n  }\n}\n\nexport const enum ConnectionErrorReason {\n  NotAllowed,\n  ServerUnreachable,\n  InternalError,\n  Cancelled,\n  LeaveRequest,\n}\n\nexport class ConnectionError extends LivekitError {\n  status?: number;\n\n  context?: unknown | DisconnectReason;\n\n  reason: ConnectionErrorReason;\n\n  constructor(\n    message: string,\n    reason: ConnectionErrorReason,\n    status?: number,\n    context?: unknown | DisconnectReason,\n  ) {\n    super(1, message);\n    this.status = status;\n    this.reason = reason;\n    this.context = context;\n  }\n}\n\nexport class DeviceUnsupportedError extends LivekitError {\n  constructor(message?: string) {\n    super(21, message ?? 'device is unsupported');\n  }\n}\n\nexport class TrackInvalidError extends LivekitError {\n  constructor(message?: string) {\n    super(20, message ?? 'track is invalid');\n  }\n}\n\nexport class UnsupportedServer extends LivekitError {\n  constructor(message?: string) {\n    super(10, message ?? 'unsupported server');\n  }\n}\n\nexport class UnexpectedConnectionState extends LivekitError {\n  constructor(message?: string) {\n    super(12, message ?? 'unexpected connection state');\n  }\n}\n\nexport class NegotiationError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to negotiate');\n  }\n}\n\nexport class PublishDataError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to publish data');\n  }\n}\n\nexport type RequestErrorReason =\n  | Exclude<RequestResponse_Reason, RequestResponse_Reason.OK>\n  | 'TimeoutError';\n\nexport class SignalRequestError extends LivekitError {\n  reason: RequestErrorReason;\n\n  constructor(message: string, reason: RequestErrorReason) {\n    super(15, message);\n    this.reason = reason;\n  }\n}\n\nexport enum MediaDeviceFailure {\n  // user rejected permissions\n  PermissionDenied = 'PermissionDenied',\n  // device is not available\n  NotFound = 'NotFound',\n  // device is in use. On Windows, only a single tab may get access to a device at a time.\n  DeviceInUse = 'DeviceInUse',\n  Other = 'Other',\n}\n\nexport namespace MediaDeviceFailure {\n  export function getFailure(error: any): MediaDeviceFailure | undefined {\n    if (error && 'name' in error) {\n      if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n        return MediaDeviceFailure.NotFound;\n      }\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n        return MediaDeviceFailure.PermissionDenied;\n      }\n      if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n        return MediaDeviceFailure.DeviceInUse;\n      }\n      return MediaDeviceFailure.Other;\n    }\n  }\n}\n","import { LivekitError } from '../room/errors';\n\nexport enum CryptorErrorReason {\n  InvalidKey = 0,\n  MissingKey = 1,\n  InternalError = 2,\n}\n\nexport class CryptorError extends LivekitError {\n  reason: CryptorErrorReason;\n\n  participantIdentity?: string;\n\n  constructor(\n    message?: string,\n    reason: CryptorErrorReason = CryptorErrorReason.InternalError,\n    participantIdentity?: string,\n  ) {\n    super(40, message);\n    this.reason = reason;\n    this.participantIdentity = participantIdentity;\n  }\n}\n","/**\n * Events are the primary way LiveKit notifies your application of changes.\n *\n * The following are events emitted by [[Room]], listen to room events like\n *\n * ```typescript\n * room.on(RoomEvent.TrackPublished, (track, publication, participant) => {})\n * ```\n */\n\nexport enum RoomEvent {\n  /**\n   * When the connection to the server has been established\n   */\n  Connected = 'connected',\n\n  /**\n   * When the connection to the server has been interrupted and it's attempting\n   * to reconnect.\n   */\n  Reconnecting = 'reconnecting',\n\n  /**\n   * When the signal connection to the server has been interrupted. This isn't noticeable to users most of the time.\n   * It will resolve with a `RoomEvent.Reconnected` once the signal connection has been re-established.\n   * If media fails additionally it an additional `RoomEvent.Reconnecting` will be emitted.\n   */\n  SignalReconnecting = 'signalReconnecting',\n\n  /**\n   * Fires when a reconnection has been successful.\n   */\n  Reconnected = 'reconnected',\n\n  /**\n   * When disconnected from room. This fires when room.disconnect() is called or\n   * when an unrecoverable connection issue had occured.\n   *\n   * DisconnectReason can be used to determine why the participant was disconnected. Notable reasons are\n   * - DUPLICATE_IDENTITY: another client with the same identity has joined the room\n   * - PARTICIPANT_REMOVED: participant was removed by RemoveParticipant API\n   * - ROOM_DELETED: the room has ended via DeleteRoom API\n   *\n   * args: ([[DisconnectReason]])\n   */\n  Disconnected = 'disconnected',\n\n  /**\n   * Whenever the connection state of the room changes\n   *\n   * args: ([[ConnectionState]])\n   */\n  ConnectionStateChanged = 'connectionStateChanged',\n\n  /**\n   * When input or output devices on the machine have changed.\n   */\n  MediaDevicesChanged = 'mediaDevicesChanged',\n\n  /**\n   * When a [[RemoteParticipant]] joins *after* the local\n   * participant. It will not emit events for participants that are already\n   * in the room\n   *\n   * args: ([[RemoteParticipant]])\n   */\n  ParticipantConnected = 'participantConnected',\n\n  /**\n   * When a [[RemoteParticipant]] leaves *after* the local\n   * participant has joined.\n   *\n   * args: ([[RemoteParticipant]])\n   */\n  ParticipantDisconnected = 'participantDisconnected',\n\n  /**\n   * When a new track is published to room *after* the local\n   * participant has joined. It will not fire for tracks that are already published.\n   *\n   * A track published doesn't mean the participant has subscribed to it. It's\n   * simply reflecting the state of the room.\n   *\n   * args: ([[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackPublished = 'trackPublished',\n\n  /**\n   * The [[LocalParticipant]] has subscribed to a new track. This event will **always**\n   * fire as long as new tracks are ready for use.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackSubscribed = 'trackSubscribed',\n\n  /**\n   * Could not subscribe to a track\n   *\n   * args: (track sid, [[RemoteParticipant]])\n   */\n  TrackSubscriptionFailed = 'trackSubscriptionFailed',\n\n  /**\n   * A [[RemoteParticipant]] has unpublished a track\n   *\n   * args: ([[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackUnpublished = 'trackUnpublished',\n\n  /**\n   * A subscribed track is no longer available. Clients should listen to this\n   * event and ensure they detach tracks.\n   *\n   * args: ([[Track]], [[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  TrackUnsubscribed = 'trackUnsubscribed',\n\n  /**\n   * A track that was muted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]], [[Participant]])\n   */\n  TrackMuted = 'trackMuted',\n\n  /**\n   * A track that was unmuted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]], [[Participant]])\n   */\n  TrackUnmuted = 'trackUnmuted',\n\n  /**\n   * A local track was published successfully. This event is helpful to know\n   * when to update your local UI with the newly published track.\n   *\n   * args: ([[LocalTrackPublication]], [[LocalParticipant]])\n   */\n  LocalTrackPublished = 'localTrackPublished',\n\n  /**\n   * A local track was unpublished. This event is helpful to know when to remove\n   * the local track from your UI.\n   *\n   * When a user stops sharing their screen by pressing \"End\" on the browser UI,\n   * this event will also fire.\n   *\n   * args: ([[LocalTrackPublication]], [[LocalParticipant]])\n   */\n  LocalTrackUnpublished = 'localTrackUnpublished',\n\n  /**\n   * When a local audio track is published the SDK checks whether there is complete silence\n   * on that track and emits the LocalAudioSilenceDetected event in that case.\n   * This allows for applications to show UI informing users that they might have to\n   * reset their audio hardware or check for proper device connectivity.\n   */\n  LocalAudioSilenceDetected = 'localAudioSilenceDetected',\n\n  /**\n   * Active speakers changed. List of speakers are ordered by their audio level.\n   * loudest speakers first. This will include the LocalParticipant too.\n   *\n   * Speaker updates are sent only to the publishing participant and their subscribers.\n   *\n   * args: (Array<[[Participant]]>)\n   */\n  ActiveSpeakersChanged = 'activeSpeakersChanged',\n\n  /**\n   * Participant metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateParticipantMetadata is called to change a participant's\n   * state, *all*  participants in the room will fire this event.\n   *\n   * args: (prevMetadata: string, [[Participant]])\n   *\n   */\n  ParticipantMetadataChanged = 'participantMetadataChanged',\n\n  /**\n   * Participant's display name changed\n   *\n   * args: (name: string, [[Participant]])\n   *\n   */\n  ParticipantNameChanged = 'participantNameChanged',\n\n  /**\n   * Participant attributes is an app-specific key value state to be pushed to\n   * all users.\n   * When a participant's attributes changed, this event will be emitted with the changed attributes and the participant\n   * args: (changedAttributes: [[Record<string, string]], participant: [[Participant]])\n   */\n  ParticipantAttributesChanged = 'participantAttributesChanged',\n\n  /**\n   * Room metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateRoomMetadata is called to change a room's state,\n   * *all*  participants in the room will fire this event.\n   *\n   * args: (string)\n   */\n  RoomMetadataChanged = 'roomMetadataChanged',\n\n  /**\n   * Data received from another participant.\n   * Data packets provides the ability to use LiveKit to send/receive arbitrary payloads.\n   * All participants in the room will receive the messages sent to the room.\n   *\n   * args: (payload: Uint8Array, participant: [[Participant]], kind: [[DataPacket_Kind]], topic?: string)\n   */\n  DataReceived = 'dataReceived',\n\n  /**\n   * SIP DTMF tones received from another participant.\n   *\n   * args: (participant: [[Participant]], dtmf: [[DataPacket_Kind]])\n   */\n  SipDTMFReceived = 'sipDTMFReceived',\n\n  /**\n   * Transcription received from a participant's track.\n   * @beta\n   */\n  TranscriptionReceived = 'transcriptionReceived',\n\n  /**\n   * Connection quality was changed for a Participant. It'll receive updates\n   * from the local participant, as well as any [[RemoteParticipant]]s that we are\n   * subscribed to.\n   *\n   * args: (connectionQuality: [[ConnectionQuality]], participant: [[Participant]])\n   */\n  ConnectionQualityChanged = 'connectionQualityChanged',\n\n  /**\n   * StreamState indicates if a subscribed (remote) track has been paused by the SFU\n   * (typically this happens because of subscriber's bandwidth constraints)\n   *\n   * When bandwidth conditions allow, the track will be resumed automatically.\n   * TrackStreamStateChanged will also be emitted when that happens.\n   *\n   * args: (pub: [[RemoteTrackPublication]], streamState: [[Track.StreamState]],\n   *        participant: [[RemoteParticipant]])\n   */\n  TrackStreamStateChanged = 'trackStreamStateChanged',\n\n  /**\n   * One of subscribed tracks have changed its permissions for the current\n   * participant. If permission was revoked, then the track will no longer\n   * be subscribed. If permission was granted, a TrackSubscribed event will\n   * be emitted.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.PermissionStatus]],\n   *        participant: [[RemoteParticipant]])\n   */\n  TrackSubscriptionPermissionChanged = 'trackSubscriptionPermissionChanged',\n\n  /**\n   * One of subscribed tracks have changed its status for the current\n   * participant.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.SubscriptionStatus]],\n   *        participant: [[RemoteParticipant]])\n   */\n  TrackSubscriptionStatusChanged = 'trackSubscriptionStatusChanged',\n\n  /**\n   * LiveKit will attempt to autoplay all audio tracks when you attach them to\n   * audio elements. However, if that fails, we'll notify you via AudioPlaybackStatusChanged.\n   * `Room.canPlaybackAudio` will indicate if audio playback is permitted.\n   */\n  AudioPlaybackStatusChanged = 'audioPlaybackChanged',\n\n  /**\n   * LiveKit will attempt to autoplay all video tracks when you attach them to\n   * a video element. However, if that fails, we'll notify you via VideoPlaybackStatusChanged.\n   * Calling `room.startVideo()` in a user gesture event handler will resume the video playback.\n   */\n  VideoPlaybackStatusChanged = 'videoPlaybackChanged',\n\n  /**\n   * When we have encountered an error while attempting to create a track.\n   * The errors take place in getUserMedia().\n   * Use MediaDeviceFailure.getFailure(error) to get the reason of failure.\n   * [[LocalParticipant.lastCameraError]] and [[LocalParticipant.lastMicrophoneError]]\n   * will indicate if it had an error while creating the audio or video track respectively.\n   *\n   * args: (error: Error)\n   */\n  MediaDevicesError = 'mediaDevicesError',\n\n  /**\n   * A participant's permission has changed.\n   * args: (prevPermissions: [[ParticipantPermission]], participant: [[Participant]])\n   */\n  ParticipantPermissionsChanged = 'participantPermissionsChanged',\n\n  /**\n   * Signal connected, can publish tracks.\n   */\n  SignalConnected = 'signalConnected',\n\n  /**\n   * Recording of a room has started/stopped. Room.isRecording will be updated too.\n   * args: (isRecording: boolean)\n   */\n  RecordingStatusChanged = 'recordingStatusChanged',\n\n  ParticipantEncryptionStatusChanged = 'participantEncryptionStatusChanged',\n\n  EncryptionError = 'encryptionError',\n  /**\n   * Emits whenever the current buffer status of a data channel changes\n   * args: (isLow: boolean, kind: [[DataPacket_Kind]])\n   */\n  DCBufferStatusChanged = 'dcBufferStatusChanged',\n\n  /**\n   * Triggered by a call to room.switchActiveDevice\n   * args: (kind: MediaDeviceKind, deviceId: string)\n   */\n  ActiveDeviceChanged = 'activeDeviceChanged',\n\n  ChatMessage = 'chatMessage',\n  /**\n   * fired when the first remote participant has subscribed to the localParticipant's track\n   */\n  LocalTrackSubscribed = 'localTrackSubscribed',\n\n  /**\n   * fired when the client receives connection metrics from other participants\n   */\n  MetricsReceived = 'metricsReceived',\n}\n\nexport enum ParticipantEvent {\n  /**\n   * When a new track is published to room *after* the local\n   * participant has joined. It will not fire for tracks that are already published.\n   *\n   * A track published doesn't mean the participant has subscribed to it. It's\n   * simply reflecting the state of the room.\n   *\n   * args: ([[RemoteTrackPublication]])\n   */\n  TrackPublished = 'trackPublished',\n\n  /**\n   * Successfully subscribed to the [[RemoteParticipant]]'s track.\n   * This event will **always** fire as long as new tracks are ready for use.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]])\n   */\n  TrackSubscribed = 'trackSubscribed',\n\n  /**\n   * Could not subscribe to a track\n   *\n   * args: (track sid)\n   */\n  TrackSubscriptionFailed = 'trackSubscriptionFailed',\n\n  /**\n   * A [[RemoteParticipant]] has unpublished a track\n   *\n   * args: ([[RemoteTrackPublication]])\n   */\n  TrackUnpublished = 'trackUnpublished',\n\n  /**\n   * A subscribed track is no longer available. Clients should listen to this\n   * event and ensure they detach tracks.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]])\n   */\n  TrackUnsubscribed = 'trackUnsubscribed',\n\n  /**\n   * A track that was muted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]])\n   */\n  TrackMuted = 'trackMuted',\n\n  /**\n   * A track that was unmuted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]])\n   */\n  TrackUnmuted = 'trackUnmuted',\n\n  /**\n   * A local track was published successfully. This event is helpful to know\n   * when to update your local UI with the newly published track.\n   *\n   * args: ([[LocalTrackPublication]])\n   */\n  LocalTrackPublished = 'localTrackPublished',\n\n  /**\n   * A local track was unpublished. This event is helpful to know when to remove\n   * the local track from your UI.\n   *\n   * When a user stops sharing their screen by pressing \"End\" on the browser UI,\n   * this event will also fire.\n   *\n   * args: ([[LocalTrackPublication]])\n   */\n  LocalTrackUnpublished = 'localTrackUnpublished',\n\n  /**\n   * Participant metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateParticipantMetadata is called to change a participant's\n   * state, *all*  participants in the room will fire this event.\n   * To access the current metadata, see [[Participant.metadata]].\n   *\n   * args: (prevMetadata: string)\n   *\n   */\n  ParticipantMetadataChanged = 'participantMetadataChanged',\n\n  /**\n   * Participant's display name changed\n   *\n   * args: (name: string, [[Participant]])\n   *\n   */\n  ParticipantNameChanged = 'participantNameChanged',\n\n  /**\n   * Data received from this participant as sender.\n   * Data packets provides the ability to use LiveKit to send/receive arbitrary payloads.\n   * All participants in the room will receive the messages sent to the room.\n   *\n   * args: (payload: Uint8Array, kind: [[DataPacket_Kind]])\n   */\n  DataReceived = 'dataReceived',\n\n  /**\n   * SIP DTMF tones received from this participant as sender.\n   *\n   * args: (dtmf: [[DataPacket_Kind]])\n   */\n  SipDTMFReceived = 'sipDTMFReceived',\n\n  /**\n   * Transcription received from this participant as data source.\n   * @beta\n   */\n  TranscriptionReceived = 'transcriptionReceived',\n\n  /**\n   * Has speaking status changed for the current participant\n   *\n   * args: (speaking: boolean)\n   */\n  IsSpeakingChanged = 'isSpeakingChanged',\n\n  /**\n   * Connection quality was changed for a Participant. It'll receive updates\n   * from the local participant, as well as any [[RemoteParticipant]]s that we are\n   * subscribed to.\n   *\n   * args: (connectionQuality: [[ConnectionQuality]])\n   */\n  ConnectionQualityChanged = 'connectionQualityChanged',\n\n  /**\n   * StreamState indicates if a subscribed track has been paused by the SFU\n   * (typically this happens because of subscriber's bandwidth constraints)\n   *\n   * When bandwidth conditions allow, the track will be resumed automatically.\n   * TrackStreamStateChanged will also be emitted when that happens.\n   *\n   * args: (pub: [[RemoteTrackPublication]], streamState: [[Track.StreamState]])\n   */\n  TrackStreamStateChanged = 'trackStreamStateChanged',\n\n  /**\n   * One of subscribed tracks have changed its permissions for the current\n   * participant. If permission was revoked, then the track will no longer\n   * be subscribed. If permission was granted, a TrackSubscribed event will\n   * be emitted.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.SubscriptionStatus]])\n   */\n  TrackSubscriptionPermissionChanged = 'trackSubscriptionPermissionChanged',\n\n  /**\n   * One of the remote participants publications has changed its subscription status.\n   *\n   */\n  TrackSubscriptionStatusChanged = 'trackSubscriptionStatusChanged',\n\n  // fired only on LocalParticipant\n  /** @internal */\n  MediaDevicesError = 'mediaDevicesError',\n\n  // fired only on LocalParticipant\n  /** @internal */\n  AudioStreamAcquired = 'audioStreamAcquired',\n\n  /**\n   * A participant's permission has changed.\n   * args: (prevPermissions: [[ParticipantPermission]])\n   */\n  ParticipantPermissionsChanged = 'participantPermissionsChanged',\n\n  /** @internal */\n  PCTrackAdded = 'pcTrackAdded',\n\n  /**\n   * Participant attributes is an app-specific key value state to be pushed to\n   * all users.\n   * When a participant's attributes changed, this event will be emitted with the changed attributes\n   * args: (changedAttributes: [[Record<string, string]])\n   */\n  AttributesChanged = 'attributesChanged',\n\n  /**\n   * fired on local participant only, when the first remote participant has subscribed to the track specified in the payload\n   */\n  LocalTrackSubscribed = 'localTrackSubscribed',\n\n  /** only emitted on local participant */\n  ChatMessage = 'chatMessage',\n}\n\n/** @internal */\nexport enum EngineEvent {\n  TransportsCreated = 'transportsCreated',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n  Resuming = 'resuming',\n  Resumed = 'resumed',\n  Restarting = 'restarting',\n  Restarted = 'restarted',\n  SignalResumed = 'signalResumed',\n  SignalRestarted = 'signalRestarted',\n  Closing = 'closing',\n  MediaTrackAdded = 'mediaTrackAdded',\n  ActiveSpeakersUpdate = 'activeSpeakersUpdate',\n  DataPacketReceived = 'dataPacketReceived',\n  RTPVideoMapUpdate = 'rtpVideoMapUpdate',\n  DCBufferStatusChanged = 'dcBufferStatusChanged',\n  ParticipantUpdate = 'participantUpdate',\n  RoomUpdate = 'roomUpdate',\n  SpeakersChanged = 'speakersChanged',\n  StreamStateChanged = 'streamStateChanged',\n  ConnectionQualityUpdate = 'connectionQualityUpdate',\n  SubscriptionError = 'subscriptionError',\n  SubscriptionPermissionUpdate = 'subscriptionPermissionUpdate',\n  RemoteMute = 'remoteMute',\n  SubscribedQualityUpdate = 'subscribedQualityUpdate',\n  LocalTrackUnpublished = 'localTrackUnpublished',\n  LocalTrackSubscribed = 'localTrackSubscribed',\n  Offline = 'offline',\n  SignalRequestResponse = 'signalRequestResponse',\n}\n\nexport enum TrackEvent {\n  Message = 'message',\n  Muted = 'muted',\n  Unmuted = 'unmuted',\n  /**\n   * Only fires on LocalTracks\n   */\n  Restarted = 'restarted',\n  Ended = 'ended',\n  Subscribed = 'subscribed',\n  Unsubscribed = 'unsubscribed',\n  /** @internal */\n  UpdateSettings = 'updateSettings',\n  /** @internal */\n  UpdateSubscription = 'updateSubscription',\n  /** @internal */\n  AudioPlaybackStarted = 'audioPlaybackStarted',\n  /** @internal */\n  AudioPlaybackFailed = 'audioPlaybackFailed',\n  /**\n   * @internal\n   * Only fires on LocalAudioTrack instances\n   */\n  AudioSilenceDetected = 'audioSilenceDetected',\n  /** @internal */\n  VisibilityChanged = 'visibilityChanged',\n  /** @internal */\n  VideoDimensionsChanged = 'videoDimensionsChanged',\n  /** @internal */\n  VideoPlaybackStarted = 'videoPlaybackStarted',\n  /** @internal */\n  VideoPlaybackFailed = 'videoPlaybackFailed',\n  /** @internal */\n  ElementAttached = 'elementAttached',\n  /** @internal */\n  ElementDetached = 'elementDetached',\n  /**\n   * @internal\n   * Only fires on LocalTracks\n   */\n  UpstreamPaused = 'upstreamPaused',\n  /**\n   * @internal\n   * Only fires on LocalTracks\n   */\n  UpstreamResumed = 'upstreamResumed',\n  /**\n   * @internal\n   * Fires on RemoteTrackPublication\n   */\n  SubscriptionPermissionChanged = 'subscriptionPermissionChanged',\n  /**\n   * Fires on RemoteTrackPublication\n   */\n  SubscriptionStatusChanged = 'subscriptionStatusChanged',\n  /**\n   * Fires on RemoteTrackPublication\n   */\n  SubscriptionFailed = 'subscriptionFailed',\n  /**\n   * @internal\n   */\n  TrackProcessorUpdate = 'trackProcessorUpdate',\n\n  /**\n   * @internal\n   */\n  AudioTrackFeatureUpdate = 'audioTrackFeatureUpdate',\n\n  /**\n   * @beta\n   */\n  TranscriptionReceived = 'transcriptionReceived',\n\n  /**\n   * @experimental\n   */\n  TimeSyncUpdate = 'timeSyncUpdate',\n}\n","function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","// tiny, simplified version of https://github.com/lancedikson/bowser/blob/master/src/parser-browsers.js\n// reduced to only differentiate Chrome(ium) based browsers / Firefox / Safari\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nexport type DetectableBrowser = 'Chrome' | 'Firefox' | 'Safari';\nexport type DetectableOS = 'iOS' | 'macOS';\n\nexport type BrowserDetails = {\n  name: DetectableBrowser;\n  version: string;\n  os?: DetectableOS;\n  osVersion?: string;\n};\n\nlet browserDetails: BrowserDetails | undefined;\n\n/**\n * @internal\n */\nexport function getBrowser(userAgent?: string, force = true): BrowserDetails | undefined {\n  if (typeof userAgent === 'undefined' && typeof navigator === 'undefined') {\n    return;\n  }\n  const ua = (userAgent ?? navigator.userAgent).toLowerCase();\n  if (browserDetails === undefined || force) {\n    const browser = browsersList.find(({ test }) => test.test(ua));\n    browserDetails = browser?.describe(ua);\n  }\n  return browserDetails;\n}\n\nconst browsersList = [\n  {\n    test: /firefox|iceweasel|fxios/i,\n    describe(ua: string) {\n      const browser: BrowserDetails = {\n        name: 'Firefox',\n        version: getMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua),\n        os: ua.toLowerCase().includes('fxios') ? 'iOS' : undefined,\n        osVersion: getOSVersion(ua),\n      };\n      return browser;\n    },\n  },\n  {\n    test: /chrom|crios|crmo/i,\n    describe(ua: string) {\n      const browser: BrowserDetails = {\n        name: 'Chrome',\n        version: getMatch(/(?:chrome|chromium|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua),\n        os: ua.toLowerCase().includes('crios') ? 'iOS' : undefined,\n        osVersion: getOSVersion(ua),\n      };\n\n      return browser;\n    },\n  },\n  /* Safari */\n  {\n    test: /safari|applewebkit/i,\n    describe(ua: string) {\n      const browser: BrowserDetails = {\n        name: 'Safari',\n        version: getMatch(commonVersionIdentifier, ua),\n        os: ua.includes('mobile/') ? 'iOS' : 'macOS',\n        osVersion: getOSVersion(ua),\n      };\n\n      return browser;\n    },\n  },\n];\n\nfunction getMatch(exp: RegExp, ua: string, id = 1) {\n  const match = ua.match(exp);\n  return (match && match.length >= id && match[id]) || '';\n}\n\nfunction getOSVersion(ua: string) {\n  return ua.includes('mac os')\n    ? getMatch(/\\(.+?(\\d+_\\d+(:?_\\d+)?)/, ua, 1).replace(/_/g, '.')\n    : undefined;\n}\n","import { version as v } from '../package.json';\n\nexport const version = v;\nexport const protocolVersion = 15;\n","/**\n * Timers that can be overridden with platform specific implementations\n * that ensure that they are fired. These should be used when it is critical\n * that the timer fires on time.\n */\nexport default class CriticalTimers {\n  static setTimeout: (...args: Parameters<typeof setTimeout>) => ReturnType<typeof setTimeout> = (\n    ...args: Parameters<typeof setTimeout>\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n  ) => setTimeout(...args);\n\n  static setInterval: (...args: Parameters<typeof setInterval>) => ReturnType<typeof setInterval> =\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    (...args: Parameters<typeof setInterval>) => setInterval(...args);\n\n  static clearTimeout: (\n    ...args: Parameters<typeof clearTimeout>\n  ) => ReturnType<typeof clearTimeout> = (...args: Parameters<typeof clearTimeout>) =>\n    clearTimeout(...args);\n\n  static clearInterval: (\n    ...args: Parameters<typeof clearInterval>\n  ) => ReturnType<typeof clearInterval> = (...args: Parameters<typeof clearInterval>) =>\n    clearInterval(...args);\n}\n","import type { Track } from './Track';\nimport type {\n  AudioProcessorOptions,\n  TrackProcessor,\n  VideoProcessorOptions,\n} from './processor/types';\n\nexport interface TrackPublishDefaults {\n  /**\n   * encoding parameters for camera track\n   */\n  videoEncoding?: VideoEncoding;\n\n  /**\n   * Multi-codec Simulcast\n   * VP9 and AV1 are not supported by all browser clients. When backupCodec is\n   * set, when an incompatible client attempts to subscribe to the track, LiveKit\n   * will automatically publish a secondary track encoded with the backup codec.\n   *\n   * You could customize specific encoding parameters of the backup track by\n   * explicitly setting codec and encoding fields.\n   *\n   * Defaults to `true`\n   */\n  backupCodec?: true | false | { codec: BackupVideoCodec; encoding?: VideoEncoding };\n\n  /**\n   * encoding parameters for screen share track\n   */\n  screenShareEncoding?: VideoEncoding;\n\n  /**\n   * codec, defaults to vp8; for svc codecs, auto enable vp8\n   * as backup. (TBD)\n   */\n  videoCodec?: VideoCodec;\n\n  /**\n   * which audio preset should be used for publishing (audio) tracks\n   * defaults to [[AudioPresets.music]]\n   */\n  audioPreset?: AudioPreset;\n\n  /**\n   * dtx (Discontinuous Transmission of audio), enabled by default for mono tracks.\n   */\n  dtx?: boolean;\n\n  /**\n   * red (Redundant Audio Data), enabled by default for mono tracks.\n   */\n  red?: boolean;\n\n  /**\n   * publish track in stereo mode (or set to false to disable). defaults determined by capture channel count.\n   */\n  forceStereo?: boolean;\n\n  /**\n   * use simulcast, defaults to true.\n   * When using simulcast, LiveKit will publish up to three versions of the stream\n   * at various resolutions.\n   */\n  simulcast?: boolean;\n\n  /**\n   * scalability mode for svc codecs, defaults to 'L3T3_KEY'.\n   * for svc codecs, simulcast is disabled.\n   */\n  scalabilityMode?: ScalabilityMode;\n\n  /**\n   * degradation preference\n   */\n  degradationPreference?: RTCDegradationPreference;\n\n  /**\n   * Up to two additional simulcast layers to publish in addition to the original\n   * Track.\n   * When left blank, it defaults to h180, h360.\n   * If a SVC codec is used (VP9 or AV1), this field has no effect.\n   *\n   * To publish three total layers, you would specify:\n   * {\n   *   videoEncoding: {...}, // encoding of the primary layer\n   *   videoSimulcastLayers: [\n   *     VideoPresets.h540,\n   *     VideoPresets.h216,\n   *   ],\n   * }\n   */\n  videoSimulcastLayers?: Array<VideoPreset>;\n\n  /**\n   * custom video simulcast layers for screen tracks\n   * Note: the layers need to be ordered from lowest to highest quality\n   */\n  screenShareSimulcastLayers?: Array<VideoPreset>;\n\n  /**\n   * For local tracks, stop the underlying MediaStreamTrack when the track is muted (or paused)\n   * on some platforms, this option is necessary to disable the microphone recording indicator.\n   * Note: when this is enabled, and BT devices are connected, they will transition between\n   * profiles (e.g. HFP to A2DP) and there will be an audible difference in playback.\n   *\n   * defaults to false\n   */\n  stopMicTrackOnMute?: boolean;\n}\n\n/**\n * Options when publishing tracks\n */\nexport interface TrackPublishOptions extends TrackPublishDefaults {\n  /**\n   * set a track name\n   */\n  name?: string;\n\n  /**\n   * Source of track, camera, microphone, or screen\n   */\n  source?: Track.Source;\n\n  /**\n   * Set stream name for the track. Audio and video tracks with the same stream name\n   * will be placed in the same `MediaStream` and offer better synchronization.\n   * By default, camera and microphone will be placed in a stream; as would screen_share and screen_share_audio\n   */\n  stream?: string;\n}\n\nexport interface CreateLocalTracksOptions {\n  /**\n   * audio track options, true to create with defaults. false if audio shouldn't be created\n   * default true\n   */\n  audio?: boolean | AudioCaptureOptions;\n\n  /**\n   * video track options, true to create with defaults. false if video shouldn't be created\n   * default true\n   */\n  video?: boolean | VideoCaptureOptions;\n}\n\nexport interface VideoCaptureOptions {\n  /**\n   * A ConstrainDOMString object specifying a device ID or an array of device\n   * IDs which are acceptable and/or required.\n   */\n  deviceId?: ConstrainDOMString;\n\n  /**\n   * a facing or an array of facings which are acceptable and/or required.\n   */\n  facingMode?: 'user' | 'environment' | 'left' | 'right';\n\n  resolution?: VideoResolution;\n\n  /**\n   * initialize the track with a given processor\n   */\n  processor?: TrackProcessor<Track.Kind.Video, VideoProcessorOptions>;\n}\n\nexport interface ScreenShareCaptureOptions {\n  /**\n   * true to capture audio shared. browser support for audio capturing in\n   * screenshare is limited: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#browser_compatibility\n   */\n  audio?: boolean | AudioCaptureOptions;\n\n  /**\n   * only allows for 'true' and chrome allows for additional options to be passed in\n   * https://developer.chrome.com/docs/web-platform/screen-sharing-controls/#displaySurface\n   */\n  video?: true | { displaySurface?: 'window' | 'browser' | 'monitor' };\n\n  /**\n   * capture resolution, defaults to 1080 for all browsers other than Safari\n   * On Safari 17, default resolution is not capped, due to a bug, specifying\n   * any resolution at all would lead to a low-resolution capture.\n   * https://bugs.webkit.org/show_bug.cgi?id=263015\n   */\n  resolution?: VideoResolution;\n\n  /** a CaptureController object instance containing methods that can be used to further manipulate the capture session if included. */\n  controller?: unknown; // TODO replace type with CaptureController once it lands in TypeScript\n\n  /** specifies whether the browser should allow the user to select the current tab for capture */\n  selfBrowserSurface?: 'include' | 'exclude';\n\n  /** specifies whether the browser should display a control to allow the user to dynamically switch the shared tab during screen-sharing. */\n  surfaceSwitching?: 'include' | 'exclude';\n\n  /** specifies whether the browser should include the system audio among the possible audio sources offered to the user */\n  systemAudio?: 'include' | 'exclude';\n\n  /** specify the type of content, see: https://www.w3.org/TR/mst-content-hint/#video-content-hints */\n  contentHint?: 'detail' | 'text' | 'motion';\n\n  /**\n   * Experimental option to control whether the audio playing in a tab will continue to be played out of a user's\n   * local speakers when the tab is captured.\n   */\n  suppressLocalAudioPlayback?: boolean;\n\n  /**\n   * Experimental option to instruct the browser to offer the current tab as the most prominent capture source\n   * @experimental\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#prefercurrenttab\n   */\n  preferCurrentTab?: boolean;\n}\n\nexport interface AudioCaptureOptions {\n  /**\n   * specifies whether automatic gain control is preferred and/or required\n   */\n  autoGainControl?: ConstrainBoolean;\n\n  /**\n   * the channel count or range of channel counts which are acceptable and/or required\n   */\n  channelCount?: ConstrainULong;\n\n  /**\n   * A ConstrainDOMString object specifying a device ID or an array of device\n   * IDs which are acceptable and/or required.\n   */\n  deviceId?: ConstrainDOMString;\n\n  /**\n   * whether or not echo cancellation is preferred and/or required\n   */\n  echoCancellation?: ConstrainBoolean;\n\n  /**\n   * the latency or range of latencies which are acceptable and/or required.\n   */\n  latency?: ConstrainDouble;\n\n  /**\n   * whether noise suppression is preferred and/or required.\n   */\n  noiseSuppression?: ConstrainBoolean;\n\n  /**\n   * @experimental\n   * a stronger version of 'noiseSuppression', browser support is not widespread yet.\n   * If this is set (and supported) the value for 'noiseSuppression' will be ignored\n   * @see https://w3c.github.io/mediacapture-extensions/#voiceisolation-constraint\n   */\n  voiceIsolation?: ConstrainBoolean;\n\n  /**\n   * the sample rate or range of sample rates which are acceptable and/or required.\n   */\n  sampleRate?: ConstrainULong;\n\n  /**\n   * sample size or range of sample sizes which are acceptable and/or required.\n   */\n  sampleSize?: ConstrainULong;\n\n  /**\n   * initialize the track with a given processor\n   */\n  processor?: TrackProcessor<Track.Kind.Audio, AudioProcessorOptions>;\n}\n\nexport interface AudioOutputOptions {\n  /**\n   * deviceId to output audio\n   *\n   * Only supported on browsers where `setSinkId` is available\n   */\n  deviceId?: string;\n}\n\nexport interface VideoResolution {\n  width: number;\n  height: number;\n  frameRate?: number;\n  aspectRatio?: number;\n}\n\nexport interface VideoEncoding {\n  maxBitrate: number;\n  maxFramerate?: number;\n  priority?: RTCPriorityType;\n}\n\nexport interface VideoPresetOptions {\n  width: number;\n  height: number;\n  aspectRatio?: number;\n  maxBitrate: number;\n  maxFramerate?: number;\n  priority?: RTCPriorityType;\n}\n\nexport class VideoPreset {\n  encoding: VideoEncoding;\n\n  width: number;\n\n  height: number;\n\n  aspectRatio?: number;\n\n  constructor(videoPresetOptions: VideoPresetOptions);\n  constructor(\n    width: number,\n    height: number,\n    maxBitrate: number,\n    maxFramerate?: number,\n    priority?: RTCPriorityType,\n  );\n  constructor(\n    widthOrOptions: number | VideoPresetOptions,\n    height?: number,\n    maxBitrate?: number,\n    maxFramerate?: number,\n    priority?: RTCPriorityType,\n  ) {\n    if (typeof widthOrOptions === 'object') {\n      this.width = widthOrOptions.width;\n      this.height = widthOrOptions.height;\n      this.aspectRatio = widthOrOptions.aspectRatio;\n      this.encoding = {\n        maxBitrate: widthOrOptions.maxBitrate,\n        maxFramerate: widthOrOptions.maxFramerate,\n        priority: widthOrOptions.priority,\n      };\n    } else if (height !== undefined && maxBitrate !== undefined) {\n      this.width = widthOrOptions;\n      this.height = height;\n      this.aspectRatio = widthOrOptions / height;\n      this.encoding = {\n        maxBitrate,\n        maxFramerate,\n        priority,\n      };\n    } else {\n      throw new TypeError('Unsupported options: provide at least width, height and maxBitrate');\n    }\n  }\n\n  get resolution(): VideoResolution {\n    return {\n      width: this.width,\n      height: this.height,\n      frameRate: this.encoding.maxFramerate,\n      aspectRatio: this.aspectRatio,\n    };\n  }\n}\n\nexport interface AudioPreset {\n  maxBitrate: number;\n  priority?: RTCPriorityType;\n}\n\nconst backupCodecs = ['vp8', 'h264'] as const;\n\nexport const videoCodecs = ['vp8', 'h264', 'vp9', 'av1'] as const;\n\nexport type VideoCodec = (typeof videoCodecs)[number];\n\nexport type BackupVideoCodec = (typeof backupCodecs)[number];\n\nexport function isBackupCodec(codec: string): codec is BackupVideoCodec {\n  return !!backupCodecs.find((backup) => backup === codec);\n}\n\n/**\n * scalability modes for svc.\n */\nexport type ScalabilityMode =\n  | 'L1T1'\n  | 'L1T2'\n  | 'L1T3'\n  | 'L2T1'\n  | 'L2T1h'\n  | 'L2T1_KEY'\n  | 'L2T2'\n  | 'L2T2h'\n  | 'L2T2_KEY'\n  | 'L2T3'\n  | 'L2T3h'\n  | 'L2T3_KEY'\n  | 'L3T1'\n  | 'L3T1h'\n  | 'L3T1_KEY'\n  | 'L3T2'\n  | 'L3T2h'\n  | 'L3T2_KEY'\n  | 'L3T3'\n  | 'L3T3h'\n  | 'L3T3_KEY';\n\nexport namespace AudioPresets {\n  export const telephone: AudioPreset = {\n    maxBitrate: 12_000,\n  };\n  export const speech: AudioPreset = {\n    maxBitrate: 24_000,\n  };\n  export const music: AudioPreset = {\n    maxBitrate: 48_000,\n  };\n  export const musicStereo: AudioPreset = {\n    maxBitrate: 64_000,\n  };\n  export const musicHighQuality: AudioPreset = {\n    maxBitrate: 96_000,\n  };\n  export const musicHighQualityStereo: AudioPreset = {\n    maxBitrate: 128_000,\n  };\n}\n\n/**\n * Sane presets for video resolution/encoding\n */\nexport const VideoPresets = {\n  h90: new VideoPreset(160, 90, 90_000, 20),\n  h180: new VideoPreset(320, 180, 160_000, 20),\n  h216: new VideoPreset(384, 216, 180_000, 20),\n  h360: new VideoPreset(640, 360, 450_000, 20),\n  h540: new VideoPreset(960, 540, 800_000, 25),\n  h720: new VideoPreset(1280, 720, 1_700_000, 30),\n  h1080: new VideoPreset(1920, 1080, 3_000_000, 30),\n  h1440: new VideoPreset(2560, 1440, 5_000_000, 30),\n  h2160: new VideoPreset(3840, 2160, 8_000_000, 30),\n} as const;\n\n/**\n * Four by three presets\n */\nexport const VideoPresets43 = {\n  h120: new VideoPreset(160, 120, 70_000, 20),\n  h180: new VideoPreset(240, 180, 125_000, 20),\n  h240: new VideoPreset(320, 240, 140_000, 20),\n  h360: new VideoPreset(480, 360, 330_000, 20),\n  h480: new VideoPreset(640, 480, 500_000, 20),\n  h540: new VideoPreset(720, 540, 600_000, 25),\n  h720: new VideoPreset(960, 720, 1_300_000, 30),\n  h1080: new VideoPreset(1440, 1080, 2_300_000, 30),\n  h1440: new VideoPreset(1920, 1440, 3_800_000, 30),\n} as const;\n\nexport const ScreenSharePresets = {\n  h360fps3: new VideoPreset(640, 360, 200_000, 3, 'medium'),\n  h360fps15: new VideoPreset(640, 360, 400_000, 15, 'medium'),\n  h720fps5: new VideoPreset(1280, 720, 800_000, 5, 'medium'),\n  h720fps15: new VideoPreset(1280, 720, 1_500_000, 15, 'medium'),\n  h720fps30: new VideoPreset(1280, 720, 2_000_000, 30, 'medium'),\n  h1080fps15: new VideoPreset(1920, 1080, 2_500_000, 15, 'medium'),\n  h1080fps30: new VideoPreset(1920, 1080, 5_000_000, 30, 'medium'),\n  // original resolution, without resizing\n  original: new VideoPreset(0, 0, 7_000_000, 30, 'medium'),\n} as const;\n","export function cloneDeep<T>(value: T) {\n  if (typeof value === 'undefined') {\n    return;\n  }\n\n  if (typeof structuredClone === 'function') {\n    return structuredClone(value);\n  } else {\n    return JSON.parse(JSON.stringify(value)) as T;\n  }\n}\n","import {\n  AudioTrackFeature,\n  VideoQuality as ProtoQuality,\n  StreamState as ProtoStreamState,\n  TrackSource,\n  TrackType,\n} from '@livekit/protocol';\nimport { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport type { SignalClient } from '../../api/SignalClient';\nimport log, { LoggerNames, type StructuredLogger, getLogger } from '../../logger';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport { isFireFox, isSafari, isWeb } from '../utils';\nimport type { TrackProcessor } from './processor/types';\nimport { getLogContextFromTrack } from './utils';\n\nconst BACKGROUND_REACTION_DELAY = 5000;\n\n// keep old audio elements when detached, we would re-use them since on iOS\n// Safari tracks which audio elements have been \"blessed\" by the user.\nconst recycledElements: Array<HTMLAudioElement> = [];\n\nexport enum VideoQuality {\n  LOW = ProtoQuality.LOW,\n  MEDIUM = ProtoQuality.MEDIUM,\n  HIGH = ProtoQuality.HIGH,\n}\nexport abstract class Track<\n  TrackKind extends Track.Kind = Track.Kind,\n> extends (EventEmitter as new () => TypedEventEmitter<TrackEventCallbacks>) {\n  readonly kind: TrackKind;\n\n  attachedElements: HTMLMediaElement[] = [];\n\n  isMuted: boolean = false;\n\n  source: Track.Source;\n\n  /**\n   * sid is set after track is published to server, or if it's a remote track\n   */\n  sid?: Track.SID;\n\n  /**\n   * @internal\n   */\n  mediaStream?: MediaStream;\n\n  /**\n   * indicates current state of stream, it'll indicate `paused` if the track\n   * has been paused by congestion controller\n   */\n  streamState: Track.StreamState = Track.StreamState.Active;\n\n  /** @internal */\n  rtpTimestamp: number | undefined;\n\n  protected _mediaStreamTrack: MediaStreamTrack;\n\n  protected _mediaStreamID: string;\n\n  protected isInBackground: boolean = false;\n\n  private backgroundTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private loggerContextCb: LoggerOptions['loggerContextCb'];\n\n  protected timeSyncHandle: number | undefined;\n\n  protected _currentBitrate: number = 0;\n\n  protected monitorInterval?: ReturnType<typeof setInterval>;\n\n  protected log: StructuredLogger = log;\n\n  protected constructor(\n    mediaTrack: MediaStreamTrack,\n    kind: TrackKind,\n    loggerOptions: LoggerOptions = {},\n  ) {\n    super();\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.Track);\n    this.loggerContextCb = loggerOptions.loggerContextCb;\n\n    this.setMaxListeners(100);\n    this.kind = kind;\n    this._mediaStreamTrack = mediaTrack;\n    this._mediaStreamID = mediaTrack.id;\n    this.source = Track.Source.Unknown;\n  }\n\n  protected get logContext() {\n    return {\n      ...this.loggerContextCb?.(),\n      ...getLogContextFromTrack(this),\n    };\n  }\n\n  /** current receive bits per second */\n  get currentBitrate(): number {\n    return this._currentBitrate;\n  }\n\n  get mediaStreamTrack() {\n    return this._mediaStreamTrack;\n  }\n\n  /**\n   * @internal\n   * used for keep mediaStream's first id, since it's id might change\n   * if we disable/enable a track\n   */\n  get mediaStreamID(): string {\n    return this._mediaStreamID;\n  }\n\n  /**\n   * creates a new HTMLAudioElement or HTMLVideoElement, attaches to it, and returns it\n   */\n  attach(): HTMLMediaElement;\n\n  /**\n   * attaches track to an existing HTMLAudioElement or HTMLVideoElement\n   */\n  attach(element: HTMLMediaElement): HTMLMediaElement;\n  attach(element?: HTMLMediaElement): HTMLMediaElement {\n    let elementType = 'audio';\n    if (this.kind === Track.Kind.Video) {\n      elementType = 'video';\n    }\n    if (this.attachedElements.length === 0 && this.kind === Track.Kind.Video) {\n      this.addAppVisibilityListener();\n    }\n    if (!element) {\n      if (elementType === 'audio') {\n        recycledElements.forEach((e) => {\n          if (e.parentElement === null && !element) {\n            element = e;\n          }\n        });\n        if (element) {\n          // remove it from pool\n          recycledElements.splice(recycledElements.indexOf(element), 1);\n        }\n      }\n      if (!element) {\n        element = <HTMLMediaElement>document.createElement(elementType);\n      }\n    }\n\n    if (!this.attachedElements.includes(element)) {\n      this.attachedElements.push(element);\n    }\n\n    // even if we believe it's already attached to the element, it's possible\n    // the element's srcObject was set to something else out of band.\n    // we'll want to re-attach it in that case\n    attachToElement(this.mediaStreamTrack, element);\n\n    // handle auto playback failures\n    const allMediaStreamTracks = (element.srcObject as MediaStream).getTracks();\n    const hasAudio = allMediaStreamTracks.some((tr) => tr.kind === 'audio');\n\n    // manually play media to detect auto playback status\n    element\n      .play()\n      .then(() => {\n        this.emit(hasAudio ? TrackEvent.AudioPlaybackStarted : TrackEvent.VideoPlaybackStarted);\n      })\n      .catch((e) => {\n        if (e.name === 'NotAllowedError') {\n          this.emit(hasAudio ? TrackEvent.AudioPlaybackFailed : TrackEvent.VideoPlaybackFailed, e);\n        } else if (e.name === 'AbortError') {\n          // commonly triggered by another `play` request, only log for debugging purposes\n          log.debug(\n            `${hasAudio ? 'audio' : 'video'} playback aborted, likely due to new play request`,\n          );\n        } else {\n          log.warn(`could not playback ${hasAudio ? 'audio' : 'video'}`, e);\n        }\n        // If audio playback isn't allowed make sure we still play back the video\n        if (\n          hasAudio &&\n          element &&\n          allMediaStreamTracks.some((tr) => tr.kind === 'video') &&\n          e.name === 'NotAllowedError'\n        ) {\n          element.muted = true;\n          element.play().catch(() => {\n            // catch for Safari, exceeded options at this point to automatically play the media element\n          });\n        }\n      });\n\n    this.emit(TrackEvent.ElementAttached, element);\n    return element;\n  }\n\n  /**\n   * Detaches from all attached elements\n   */\n  detach(): HTMLMediaElement[];\n\n  /**\n   * Detach from a single element\n   * @param element\n   */\n  detach(element: HTMLMediaElement): HTMLMediaElement;\n  detach(element?: HTMLMediaElement): HTMLMediaElement | HTMLMediaElement[] {\n    try {\n      // detach from a single element\n      if (element) {\n        detachTrack(this.mediaStreamTrack, element);\n        const idx = this.attachedElements.indexOf(element);\n        if (idx >= 0) {\n          this.attachedElements.splice(idx, 1);\n          this.recycleElement(element);\n          this.emit(TrackEvent.ElementDetached, element);\n        }\n        return element;\n      }\n\n      const detached: HTMLMediaElement[] = [];\n      this.attachedElements.forEach((elm) => {\n        detachTrack(this.mediaStreamTrack, elm);\n        detached.push(elm);\n        this.recycleElement(elm);\n        this.emit(TrackEvent.ElementDetached, elm);\n      });\n\n      // remove all tracks\n      this.attachedElements = [];\n      return detached;\n    } finally {\n      if (this.attachedElements.length === 0) {\n        this.removeAppVisibilityListener();\n      }\n    }\n  }\n\n  stop() {\n    this.stopMonitor();\n    this._mediaStreamTrack.stop();\n  }\n\n  protected enable() {\n    this._mediaStreamTrack.enabled = true;\n  }\n\n  protected disable() {\n    this._mediaStreamTrack.enabled = false;\n  }\n\n  /* @internal */\n  abstract startMonitor(signalClient?: SignalClient): void;\n\n  /* @internal */\n  stopMonitor() {\n    if (this.monitorInterval) {\n      clearInterval(this.monitorInterval);\n    }\n    if (this.timeSyncHandle) {\n      cancelAnimationFrame(this.timeSyncHandle);\n    }\n  }\n\n  /** @internal */\n  updateLoggerOptions(loggerOptions: LoggerOptions) {\n    if (loggerOptions.loggerName) {\n      this.log = getLogger(loggerOptions.loggerName);\n    }\n    if (loggerOptions.loggerContextCb) {\n      this.loggerContextCb = loggerOptions.loggerContextCb;\n    }\n  }\n\n  private recycleElement(element: HTMLMediaElement) {\n    if (element instanceof HTMLAudioElement) {\n      // we only need to re-use a single element\n      let shouldCache = true;\n      element.pause();\n      recycledElements.forEach((e) => {\n        if (!e.parentElement) {\n          shouldCache = false;\n        }\n      });\n      if (shouldCache) {\n        recycledElements.push(element);\n      }\n    }\n  }\n\n  protected appVisibilityChangedListener = () => {\n    if (this.backgroundTimeout) {\n      clearTimeout(this.backgroundTimeout);\n    }\n    // delay app visibility update if it goes to hidden\n    // update immediately if it comes back to focus\n    if (document.visibilityState === 'hidden') {\n      this.backgroundTimeout = setTimeout(\n        () => this.handleAppVisibilityChanged(),\n        BACKGROUND_REACTION_DELAY,\n      );\n    } else {\n      this.handleAppVisibilityChanged();\n    }\n  };\n\n  protected async handleAppVisibilityChanged() {\n    this.isInBackground = document.visibilityState === 'hidden';\n    if (!this.isInBackground && this.kind === Track.Kind.Video) {\n      setTimeout(\n        () =>\n          this.attachedElements.forEach((el) =>\n            el.play().catch(() => {\n              /** catch clause necessary for Safari */\n            }),\n          ),\n        0,\n      );\n    }\n  }\n\n  protected addAppVisibilityListener() {\n    if (isWeb()) {\n      this.isInBackground = document.visibilityState === 'hidden';\n      document.addEventListener('visibilitychange', this.appVisibilityChangedListener);\n    } else {\n      this.isInBackground = false;\n    }\n  }\n\n  protected removeAppVisibilityListener() {\n    if (isWeb()) {\n      document.removeEventListener('visibilitychange', this.appVisibilityChangedListener);\n    }\n  }\n}\n\nexport function attachToElement(track: MediaStreamTrack, element: HTMLMediaElement) {\n  let mediaStream: MediaStream;\n  if (element.srcObject instanceof MediaStream) {\n    mediaStream = element.srcObject;\n  } else {\n    mediaStream = new MediaStream();\n  }\n\n  // check if track matches existing track\n  let existingTracks: MediaStreamTrack[];\n  if (track.kind === 'audio') {\n    existingTracks = mediaStream.getAudioTracks();\n  } else {\n    existingTracks = mediaStream.getVideoTracks();\n  }\n  if (!existingTracks.includes(track)) {\n    existingTracks.forEach((et) => {\n      mediaStream.removeTrack(et);\n    });\n    mediaStream.addTrack(track);\n  }\n\n  if (!isSafari() || !(element instanceof HTMLVideoElement)) {\n    // when in low power mode (applies to both macOS and iOS), Safari will show a play/pause overlay\n    // when a video starts that has the `autoplay` attribute is set.\n    // we work around this by _not_ setting the autoplay attribute on safari and instead call `setTimeout(() => el.play(),0)` further down\n    element.autoplay = true;\n  }\n  // In case there are no audio tracks present on the mediastream, we set the element as muted to ensure autoplay works\n  element.muted = mediaStream.getAudioTracks().length === 0;\n  if (element instanceof HTMLVideoElement) {\n    element.playsInline = true;\n  }\n\n  // avoid flicker\n  if (element.srcObject !== mediaStream) {\n    element.srcObject = mediaStream;\n    if ((isSafari() || isFireFox()) && element instanceof HTMLVideoElement) {\n      // Firefox also has a timing issue where video doesn't actually get attached unless\n      // performed out-of-band\n      // Safari 15 has a bug where in certain layouts, video element renders\n      // black until the page is resized or other changes take place.\n      // Resetting the src triggers it to render.\n      // https://developer.apple.com/forums/thread/690523\n      setTimeout(() => {\n        element.srcObject = mediaStream;\n        // Safari 15 sometimes fails to start a video\n        // when the window is backgrounded before the first frame is drawn\n        // manually calling play here seems to fix that\n        element.play().catch(() => {\n          /** do nothing */\n        });\n      }, 0);\n    }\n  }\n}\n\n/** @internal */\nexport function detachTrack(track: MediaStreamTrack, element: HTMLMediaElement) {\n  if (element.srcObject instanceof MediaStream) {\n    const mediaStream = element.srcObject;\n    mediaStream.removeTrack(track);\n    if (mediaStream.getTracks().length > 0) {\n      element.srcObject = mediaStream;\n    } else {\n      element.srcObject = null;\n    }\n  }\n}\n\nexport namespace Track {\n  export enum Kind {\n    Audio = 'audio',\n    Video = 'video',\n    Unknown = 'unknown',\n  }\n  export type SID = string;\n  export enum Source {\n    Camera = 'camera',\n    Microphone = 'microphone',\n    ScreenShare = 'screen_share',\n    ScreenShareAudio = 'screen_share_audio',\n    Unknown = 'unknown',\n  }\n\n  export enum StreamState {\n    Active = 'active',\n    Paused = 'paused',\n    Unknown = 'unknown',\n  }\n\n  export interface Dimensions {\n    width: number;\n    height: number;\n  }\n\n  /** @internal */\n  export function kindToProto(k: Kind): TrackType {\n    switch (k) {\n      case Kind.Audio:\n        return TrackType.AUDIO;\n      case Kind.Video:\n        return TrackType.VIDEO;\n      default:\n        // FIXME this was UNRECOGNIZED before\n        return TrackType.DATA;\n    }\n  }\n\n  /** @internal */\n  export function kindFromProto(t: TrackType): Kind | undefined {\n    switch (t) {\n      case TrackType.AUDIO:\n        return Kind.Audio;\n      case TrackType.VIDEO:\n        return Kind.Video;\n      default:\n        return Kind.Unknown;\n    }\n  }\n\n  /** @internal */\n  export function sourceToProto(s: Source): TrackSource {\n    switch (s) {\n      case Source.Camera:\n        return TrackSource.CAMERA;\n      case Source.Microphone:\n        return TrackSource.MICROPHONE;\n      case Source.ScreenShare:\n        return TrackSource.SCREEN_SHARE;\n      case Source.ScreenShareAudio:\n        return TrackSource.SCREEN_SHARE_AUDIO;\n      default:\n        return TrackSource.UNKNOWN;\n    }\n  }\n\n  /** @internal */\n  export function sourceFromProto(s: TrackSource): Source {\n    switch (s) {\n      case TrackSource.CAMERA:\n        return Source.Camera;\n      case TrackSource.MICROPHONE:\n        return Source.Microphone;\n      case TrackSource.SCREEN_SHARE:\n        return Source.ScreenShare;\n      case TrackSource.SCREEN_SHARE_AUDIO:\n        return Source.ScreenShareAudio;\n      default:\n        return Source.Unknown;\n    }\n  }\n\n  /** @internal */\n  export function streamStateFromProto(s: ProtoStreamState): StreamState {\n    switch (s) {\n      case ProtoStreamState.ACTIVE:\n        return StreamState.Active;\n      case ProtoStreamState.PAUSED:\n        return StreamState.Paused;\n      default:\n        return StreamState.Unknown;\n    }\n  }\n}\n\nexport type TrackEventCallbacks = {\n  message: () => void;\n  muted: (track?: any) => void;\n  unmuted: (track?: any) => void;\n  restarted: (track?: any) => void;\n  ended: (track?: any) => void;\n  updateSettings: () => void;\n  updateSubscription: () => void;\n  audioPlaybackStarted: () => void;\n  audioPlaybackFailed: (error?: Error) => void;\n  audioSilenceDetected: () => void;\n  visibilityChanged: (visible: boolean, track?: any) => void;\n  videoDimensionsChanged: (dimensions: Track.Dimensions, track?: any) => void;\n  videoPlaybackStarted: () => void;\n  videoPlaybackFailed: (error?: Error) => void;\n  elementAttached: (element: HTMLMediaElement) => void;\n  elementDetached: (element: HTMLMediaElement) => void;\n  upstreamPaused: (track: any) => void;\n  upstreamResumed: (track: any) => void;\n  trackProcessorUpdate: (processor?: TrackProcessor<Track.Kind, any>) => void;\n  audioTrackFeatureUpdate: (track: any, feature: AudioTrackFeature, enabled: boolean) => void;\n  timeSyncUpdate: (update: { timestamp: number; rtpTimestamp: number }) => void;\n};\n","import { TrackPublishedResponse } from '@livekit/protocol';\nimport type { AudioProcessorOptions, TrackProcessor, VideoProcessorOptions } from '../..';\nimport { cloneDeep } from '../../utils/cloneDeep';\nimport { isSafari, sleep } from '../utils';\nimport { Track } from './Track';\nimport type { TrackPublication } from './TrackPublication';\nimport {\n  type AudioCaptureOptions,\n  type CreateLocalTracksOptions,\n  type ScreenShareCaptureOptions,\n  type VideoCaptureOptions,\n  type VideoCodec,\n} from './options';\nimport type { AudioTrack } from './types';\n\nexport function mergeDefaultOptions(\n  options?: CreateLocalTracksOptions,\n  audioDefaults?: AudioCaptureOptions,\n  videoDefaults?: VideoCaptureOptions,\n): CreateLocalTracksOptions {\n  const { optionsWithoutProcessor, audioProcessor, videoProcessor } = extractProcessorsFromOptions(\n    options ?? {},\n  );\n  const clonedOptions: CreateLocalTracksOptions = cloneDeep(optionsWithoutProcessor) ?? {};\n  if (clonedOptions.audio === true) clonedOptions.audio = {};\n  if (clonedOptions.video === true) clonedOptions.video = {};\n\n  // use defaults\n  if (clonedOptions.audio) {\n    mergeObjectWithoutOverwriting(\n      clonedOptions.audio as Record<string, unknown>,\n      audioDefaults as Record<string, unknown>,\n    );\n    clonedOptions.audio.deviceId ??= 'default';\n    if (audioProcessor) {\n      clonedOptions.audio.processor = audioProcessor;\n    }\n  }\n  if (clonedOptions.video) {\n    mergeObjectWithoutOverwriting(\n      clonedOptions.video as Record<string, unknown>,\n      videoDefaults as Record<string, unknown>,\n    );\n    clonedOptions.video.deviceId ??= 'default';\n    if (videoProcessor) {\n      clonedOptions.video.processor = videoProcessor;\n    }\n  }\n  return clonedOptions;\n}\n\nfunction mergeObjectWithoutOverwriting(\n  mainObject: Record<string, unknown>,\n  objectToMerge: Record<string, unknown>,\n): Record<string, unknown> {\n  Object.keys(objectToMerge).forEach((key) => {\n    if (mainObject[key] === undefined) mainObject[key] = objectToMerge[key];\n  });\n  return mainObject;\n}\n\nexport function constraintsForOptions(options: CreateLocalTracksOptions): MediaStreamConstraints {\n  const constraints: MediaStreamConstraints = {};\n\n  if (options.video) {\n    // default video options\n    if (typeof options.video === 'object') {\n      const videoOptions: MediaTrackConstraints = {};\n      const target = videoOptions as Record<string, unknown>;\n      const source = options.video as Record<string, unknown>;\n      Object.keys(source).forEach((key) => {\n        switch (key) {\n          case 'resolution':\n            // flatten VideoResolution fields\n            mergeObjectWithoutOverwriting(target, source.resolution as Record<string, unknown>);\n            break;\n          default:\n            target[key] = source[key];\n        }\n      });\n      constraints.video = videoOptions;\n      constraints.video.deviceId ??= 'default';\n    } else {\n      constraints.video = options.video ? { deviceId: 'default' } : false;\n    }\n  } else {\n    constraints.video = false;\n  }\n\n  if (options.audio) {\n    if (typeof options.audio === 'object') {\n      constraints.audio = options.audio;\n      constraints.audio.deviceId ??= 'default';\n    } else {\n      constraints.audio = { deviceId: 'default' };\n    }\n  } else {\n    constraints.audio = false;\n  }\n  return constraints;\n}\n/**\n * This function detects silence on a given [[Track]] instance.\n * Returns true if the track seems to be entirely silent.\n */\nexport async function detectSilence(track: AudioTrack, timeOffset = 200): Promise<boolean> {\n  const ctx = getNewAudioContext();\n  if (ctx) {\n    const analyser = ctx.createAnalyser();\n    analyser.fftSize = 2048;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const source = ctx.createMediaStreamSource(new MediaStream([track.mediaStreamTrack]));\n\n    source.connect(analyser);\n    await sleep(timeOffset);\n    analyser.getByteTimeDomainData(dataArray);\n    const someNoise = dataArray.some((sample) => sample !== 128 && sample !== 0);\n    ctx.close();\n    return !someNoise;\n  }\n  return false;\n}\n\n/**\n * @internal\n */\nexport function getNewAudioContext(): AudioContext | void {\n  const AudioContext =\n    // @ts-ignore\n    typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  if (AudioContext) {\n    return new AudioContext({ latencyHint: 'interactive' });\n  }\n}\n\n/**\n * @internal\n */\nexport function kindToSource(kind: MediaDeviceKind) {\n  if (kind === 'audioinput') {\n    return Track.Source.Microphone;\n  } else if (kind === 'videoinput') {\n    return Track.Source.Camera;\n  } else {\n    return Track.Source.Unknown;\n  }\n}\n\n/**\n * @internal\n */\nexport function sourceToKind(source: Track.Source): MediaDeviceKind | undefined {\n  if (source === Track.Source.Microphone) {\n    return 'audioinput';\n  } else if (source === Track.Source.Camera) {\n    return 'videoinput';\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @internal\n */\nexport function screenCaptureToDisplayMediaStreamOptions(\n  options: ScreenShareCaptureOptions,\n): DisplayMediaStreamOptions {\n  let videoConstraints: MediaTrackConstraints | boolean = options.video ?? true;\n  // treat 0 as uncapped\n  if (options.resolution && options.resolution.width > 0 && options.resolution.height > 0) {\n    videoConstraints = typeof videoConstraints === 'boolean' ? {} : videoConstraints;\n    if (isSafari()) {\n      videoConstraints = {\n        ...videoConstraints,\n        width: { max: options.resolution.width },\n        height: { max: options.resolution.height },\n        frameRate: options.resolution.frameRate,\n      };\n    } else {\n      videoConstraints = {\n        ...videoConstraints,\n        width: { ideal: options.resolution.width },\n        height: { ideal: options.resolution.height },\n        frameRate: options.resolution.frameRate,\n      };\n    }\n  }\n\n  return {\n    audio: options.audio ?? false,\n    video: videoConstraints,\n    // @ts-expect-error support for experimental display media features\n    controller: options.controller,\n    selfBrowserSurface: options.selfBrowserSurface,\n    surfaceSwitching: options.surfaceSwitching,\n    systemAudio: options.systemAudio,\n    preferCurrentTab: options.preferCurrentTab,\n  };\n}\n\nexport function mimeTypeToVideoCodecString(mimeType: string) {\n  return mimeType.split('/')[1].toLowerCase() as VideoCodec;\n}\n\nexport function getTrackPublicationInfo<T extends TrackPublication>(\n  tracks: T[],\n): TrackPublishedResponse[] {\n  const infos: TrackPublishedResponse[] = [];\n  tracks.forEach((track: TrackPublication) => {\n    if (track.track !== undefined) {\n      infos.push(\n        new TrackPublishedResponse({\n          cid: track.track.mediaStreamID,\n          track: track.trackInfo,\n        }),\n      );\n    }\n  });\n  return infos;\n}\n\nexport function getLogContextFromTrack(track: Track | TrackPublication): Record<string, unknown> {\n  if (track instanceof Track) {\n    return {\n      trackID: track.sid,\n      source: track.source,\n      muted: track.isMuted,\n      enabled: track.mediaStreamTrack.enabled,\n      kind: track.kind,\n      streamID: track.mediaStreamID,\n      streamTrackID: track.mediaStreamTrack.id,\n    };\n  } else {\n    return {\n      trackID: track.trackSid,\n      enabled: track.isEnabled,\n      muted: track.isMuted,\n      trackInfo: {\n        mimeType: track.mimeType,\n        name: track.trackName,\n        encrypted: track.isEncrypted,\n        kind: track.kind,\n        source: track.source,\n        ...(track.track ? getLogContextFromTrack(track.track) : {}),\n      },\n    };\n  }\n}\n\nexport function supportsSynchronizationSources(): boolean {\n  return typeof RTCRtpReceiver !== 'undefined' && 'getSynchronizationSources' in RTCRtpReceiver;\n}\n\nexport function diffAttributes(\n  oldValues: Record<string, string> | undefined,\n  newValues: Record<string, string> | undefined,\n) {\n  if (oldValues === undefined) {\n    oldValues = {};\n  }\n  if (newValues === undefined) {\n    newValues = {};\n  }\n  const allKeys = [...Object.keys(newValues), ...Object.keys(oldValues)];\n  const diff: Record<string, string> = {};\n\n  for (const key of allKeys) {\n    if (oldValues[key] !== newValues[key]) {\n      diff[key] = newValues[key] ?? '';\n    }\n  }\n\n  return diff;\n}\n\n/** @internal */\nexport function extractProcessorsFromOptions(options: CreateLocalTracksOptions) {\n  const newOptions = { ...options };\n  let audioProcessor: TrackProcessor<Track.Kind.Audio, AudioProcessorOptions> | undefined;\n  let videoProcessor: TrackProcessor<Track.Kind.Video, VideoProcessorOptions> | undefined;\n\n  if (typeof newOptions.audio === 'object' && newOptions.audio.processor) {\n    audioProcessor = newOptions.audio.processor;\n    newOptions.audio = { ...newOptions.audio, processor: undefined };\n  }\n  if (typeof newOptions.video === 'object' && newOptions.video.processor) {\n    videoProcessor = newOptions.video.processor;\n    newOptions.video = { ...newOptions.video, processor: undefined };\n  }\n\n  return { audioProcessor, videoProcessor, optionsWithoutProcessor: newOptions };\n}\n","import {\n  ChatMessage as ChatMessageModel,\n  ClientInfo,\n  ClientInfo_SDK,\n  DisconnectReason,\n  Transcription as TranscriptionModel,\n} from '@livekit/protocol';\nimport { getBrowser } from '../utils/browserParser';\nimport { protocolVersion, version } from '../version';\nimport { type ConnectionError, ConnectionErrorReason } from './errors';\nimport CriticalTimers from './timers';\nimport type LocalAudioTrack from './track/LocalAudioTrack';\nimport type RemoteAudioTrack from './track/RemoteAudioTrack';\nimport { type VideoCodec, videoCodecs } from './track/options';\nimport { getNewAudioContext } from './track/utils';\nimport type { ChatMessage, LiveKitReactNativeInfo, TranscriptionSegment } from './types';\n\nconst separator = '|';\nexport const ddExtensionURI =\n  'https://aomediacodec.github.io/av1-rtp-spec/#dependency-descriptor-rtp-header-extension';\n\nexport function unpackStreamId(packed: string): string[] {\n  const parts = packed.split(separator);\n  if (parts.length > 1) {\n    return [parts[0], packed.substr(parts[0].length + 1)];\n  }\n  return [packed, ''];\n}\n\nexport async function sleep(duration: number): Promise<void> {\n  return new Promise((resolve) => CriticalTimers.setTimeout(resolve, duration));\n}\n\n/** @internal */\nexport function supportsTransceiver() {\n  return 'addTransceiver' in RTCPeerConnection.prototype;\n}\n\n/** @internal */\nexport function supportsAddTrack() {\n  return 'addTrack' in RTCPeerConnection.prototype;\n}\n\nexport function supportsAdaptiveStream() {\n  return typeof ResizeObserver !== undefined && typeof IntersectionObserver !== undefined;\n}\n\nexport function supportsDynacast() {\n  return supportsTransceiver();\n}\n\nexport function supportsAV1(): boolean {\n  if (!('getCapabilities' in RTCRtpSender)) {\n    return false;\n  }\n  if (isSafari()) {\n    // Safari 17 on iPhone14 reports AV1 capability, but does not actually support it\n    return false;\n  }\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  let hasAV1 = false;\n  if (capabilities) {\n    for (const codec of capabilities.codecs) {\n      if (codec.mimeType === 'video/AV1') {\n        hasAV1 = true;\n        break;\n      }\n    }\n  }\n  return hasAV1;\n}\n\nexport function supportsVP9(): boolean {\n  if (!('getCapabilities' in RTCRtpSender)) {\n    return false;\n  }\n  if (isFireFox()) {\n    // technically speaking FireFox supports VP9, but SVC publishing is broken\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1633876\n    return false;\n  }\n  if (isSafari()) {\n    const browser = getBrowser();\n    if (browser?.version && compareVersions(browser.version, '16') < 0) {\n      // Safari 16 and below does not support VP9\n      return false;\n    }\n  }\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  let hasVP9 = false;\n  if (capabilities) {\n    for (const codec of capabilities.codecs) {\n      if (codec.mimeType === 'video/VP9') {\n        hasVP9 = true;\n        break;\n      }\n    }\n  }\n  return hasVP9;\n}\n\nexport function isSVCCodec(codec?: string): boolean {\n  return codec === 'av1' || codec === 'vp9';\n}\n\nexport function supportsSetSinkId(elm?: HTMLMediaElement): boolean {\n  if (!document) {\n    return false;\n  }\n  if (!elm) {\n    elm = document.createElement('audio');\n  }\n  return 'setSinkId' in elm;\n}\n\nexport function isBrowserSupported() {\n  if (typeof RTCPeerConnection === 'undefined') {\n    return false;\n  }\n  return supportsTransceiver() || supportsAddTrack();\n}\n\nexport function isFireFox(): boolean {\n  return getBrowser()?.name === 'Firefox';\n}\n\nexport function isChromiumBased(): boolean {\n  return getBrowser()?.name === 'Chrome';\n}\n\nexport function isSafari(): boolean {\n  return getBrowser()?.name === 'Safari';\n}\n\nexport function isSafari17(): boolean {\n  const b = getBrowser();\n  return b?.name === 'Safari' && b.version.startsWith('17.');\n}\n\nexport function isMobile(): boolean {\n  if (!isWeb()) return false;\n\n  return (\n    // @ts-expect-error `userAgentData` is not yet part of typescript\n    navigator.userAgentData?.mobile ??\n    /Tablet|iPad|Mobile|Android|BlackBerry/.test(navigator.userAgent)\n  );\n}\n\nexport function isE2EESimulcastSupported() {\n  const browser = getBrowser();\n  const supportedSafariVersion = '17.2'; // see https://bugs.webkit.org/show_bug.cgi?id=257803\n  if (browser) {\n    if (browser.name !== 'Safari' && browser.os !== 'iOS') {\n      return true;\n    } else if (\n      browser.os === 'iOS' &&\n      browser.osVersion &&\n      compareVersions(supportedSafariVersion, browser.osVersion) >= 0\n    ) {\n      return true;\n    } else if (\n      browser.name === 'Safari' &&\n      compareVersions(supportedSafariVersion, browser.version) >= 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport function isWeb(): boolean {\n  return typeof document !== 'undefined';\n}\n\nexport function isReactNative(): boolean {\n  // navigator.product is deprecated on browsers, but will be set appropriately for react-native.\n  return navigator.product == 'ReactNative';\n}\n\nexport function isCloud(serverUrl: URL) {\n  return (\n    serverUrl.hostname.endsWith('.livekit.cloud') || serverUrl.hostname.endsWith('.livekit.run')\n  );\n}\n\nfunction getLKReactNativeInfo(): LiveKitReactNativeInfo | undefined {\n  // global defined only for ReactNative.\n  // @ts-ignore\n  if (global && global.LiveKitReactNativeGlobal) {\n    // @ts-ignore\n    return global.LiveKitReactNativeGlobal as LiveKitReactNativeInfo;\n  }\n\n  return undefined;\n}\n\nexport function getReactNativeOs(): string | undefined {\n  if (!isReactNative()) {\n    return undefined;\n  }\n\n  let info = getLKReactNativeInfo();\n  if (info) {\n    return info.platform;\n  }\n\n  return undefined;\n}\n\nexport function getDevicePixelRatio(): number {\n  if (isWeb()) {\n    return window.devicePixelRatio;\n  }\n\n  if (isReactNative()) {\n    let info = getLKReactNativeInfo();\n    if (info) {\n      return info.devicePixelRatio;\n    }\n  }\n\n  return 1;\n}\n\nexport function compareVersions(v1: string, v2: string): number {\n  const parts1 = v1.split('.');\n  const parts2 = v2.split('.');\n  const k = Math.min(parts1.length, parts2.length);\n  for (let i = 0; i < k; ++i) {\n    const p1 = parseInt(parts1[i], 10);\n    const p2 = parseInt(parts2[i], 10);\n    if (p1 > p2) return 1;\n    if (p1 < p2) return -1;\n    if (i === k - 1 && p1 === p2) return 0;\n  }\n  if (v1 === '' && v2 !== '') {\n    return -1;\n  } else if (v2 === '') {\n    return 1;\n  }\n  return parts1.length == parts2.length ? 0 : parts1.length < parts2.length ? -1 : 1;\n}\n\nfunction roDispatchCallback(entries: ResizeObserverEntry[]) {\n  for (const entry of entries) {\n    (entry.target as ObservableMediaElement).handleResize(entry);\n  }\n}\n\nfunction ioDispatchCallback(entries: IntersectionObserverEntry[]) {\n  for (const entry of entries) {\n    (entry.target as ObservableMediaElement).handleVisibilityChanged(entry);\n  }\n}\n\nlet resizeObserver: ResizeObserver | null = null;\nexport const getResizeObserver = () => {\n  if (!resizeObserver) resizeObserver = new ResizeObserver(roDispatchCallback);\n  return resizeObserver;\n};\n\nlet intersectionObserver: IntersectionObserver | null = null;\nexport const getIntersectionObserver = () => {\n  if (!intersectionObserver) {\n    intersectionObserver = new IntersectionObserver(ioDispatchCallback, {\n      root: null,\n      rootMargin: '0px',\n    });\n  }\n  return intersectionObserver;\n};\n\nexport interface ObservableMediaElement extends HTMLMediaElement {\n  handleResize: (entry: ResizeObserverEntry) => void;\n  handleVisibilityChanged: (entry: IntersectionObserverEntry) => void;\n}\n\nexport function getClientInfo(): ClientInfo {\n  const info = new ClientInfo({\n    sdk: ClientInfo_SDK.JS,\n    protocol: protocolVersion,\n    version,\n  });\n\n  if (isReactNative()) {\n    info.os = getReactNativeOs() ?? '';\n  }\n  return info;\n}\n\nlet emptyVideoStreamTrack: MediaStreamTrack | undefined;\n\nexport function getEmptyVideoStreamTrack() {\n  if (!emptyVideoStreamTrack) {\n    emptyVideoStreamTrack = createDummyVideoStreamTrack();\n  }\n  return emptyVideoStreamTrack.clone();\n}\n\nexport function createDummyVideoStreamTrack(\n  width: number = 16,\n  height: number = 16,\n  enabled: boolean = false,\n  paintContent: boolean = false,\n) {\n  const canvas = document.createElement('canvas');\n  // the canvas size is set to 16 by default, because electron apps seem to fail with smaller values\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx?.fillRect(0, 0, canvas.width, canvas.height);\n  if (paintContent && ctx) {\n    ctx.beginPath();\n    ctx.arc(width / 2, height / 2, 50, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fillStyle = 'grey';\n    ctx.fill();\n  }\n  // @ts-ignore\n  const dummyStream = canvas.captureStream();\n  const [dummyTrack] = dummyStream.getTracks();\n  if (!dummyTrack) {\n    throw Error('Could not get empty media stream video track');\n  }\n  dummyTrack.enabled = enabled;\n\n  return dummyTrack;\n}\n\nlet emptyAudioStreamTrack: MediaStreamTrack | undefined;\n\nexport function getEmptyAudioStreamTrack() {\n  if (!emptyAudioStreamTrack) {\n    // implementation adapted from https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n    const ctx = new AudioContext();\n    const oscillator = ctx.createOscillator();\n    const gain = ctx.createGain();\n    gain.gain.setValueAtTime(0, 0);\n    const dst = ctx.createMediaStreamDestination();\n    oscillator.connect(gain);\n    gain.connect(dst);\n    oscillator.start();\n    [emptyAudioStreamTrack] = dst.stream.getAudioTracks();\n    if (!emptyAudioStreamTrack) {\n      throw Error('Could not get empty media stream audio track');\n    }\n    emptyAudioStreamTrack.enabled = false;\n  }\n  return emptyAudioStreamTrack.clone();\n}\n\nexport class Future<T> {\n  promise: Promise<T>;\n\n  resolve?: (arg: T) => void;\n\n  reject?: (e: any) => void;\n\n  onFinally?: () => void;\n\n  constructor(\n    futureBase?: (resolve: (arg: T) => void, reject: (e: any) => void) => void,\n    onFinally?: () => void,\n  ) {\n    this.onFinally = onFinally;\n    this.promise = new Promise<T>(async (resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n      if (futureBase) {\n        await futureBase(resolve, reject);\n      }\n    }).finally(() => this.onFinally?.());\n  }\n}\n\nexport type AudioAnalyserOptions = {\n  /**\n   * If set to true, the analyser will use a cloned version of the underlying mediastreamtrack, which won't be impacted by muting the track.\n   * Useful for local tracks when implementing things like \"seems like you're muted, but trying to speak\".\n   * Defaults to false\n   */\n  cloneTrack?: boolean;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\n   */\n  fftSize?: number;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant\n   */\n  smoothingTimeConstant?: number;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/minDecibels\n   */\n  minDecibels?: number;\n  /**\n   * see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/maxDecibels\n   */\n  maxDecibels?: number;\n};\n\n/**\n * Creates and returns an analyser web audio node that is attached to the provided track.\n * Additionally returns a convenience method `calculateVolume` to perform instant volume readings on that track.\n * Call the returned `cleanup` function to close the audioContext that has been created for the instance of this helper\n */\nexport function createAudioAnalyser(\n  track: LocalAudioTrack | RemoteAudioTrack,\n  options?: AudioAnalyserOptions,\n) {\n  const opts = {\n    cloneTrack: false,\n    fftSize: 2048,\n    smoothingTimeConstant: 0.8,\n    minDecibels: -100,\n    maxDecibels: -80,\n    ...options,\n  };\n  const audioContext = getNewAudioContext();\n\n  if (!audioContext) {\n    throw new Error('Audio Context not supported on this browser');\n  }\n  const streamTrack = opts.cloneTrack ? track.mediaStreamTrack.clone() : track.mediaStreamTrack;\n  const mediaStreamSource = audioContext.createMediaStreamSource(new MediaStream([streamTrack]));\n  const analyser = audioContext.createAnalyser();\n  analyser.minDecibels = opts.minDecibels;\n  analyser.maxDecibels = opts.maxDecibels;\n  analyser.fftSize = opts.fftSize;\n  analyser.smoothingTimeConstant = opts.smoothingTimeConstant;\n\n  mediaStreamSource.connect(analyser);\n  const dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n  /**\n   * Calculates the current volume of the track in the range from 0 to 1\n   */\n  const calculateVolume = () => {\n    analyser.getByteFrequencyData(dataArray);\n    let sum = 0;\n    for (const amplitude of dataArray) {\n      sum += Math.pow(amplitude / 255, 2);\n    }\n    const volume = Math.sqrt(sum / dataArray.length);\n    return volume;\n  };\n\n  const cleanup = async () => {\n    await audioContext.close();\n    if (opts.cloneTrack) {\n      streamTrack.stop();\n    }\n  };\n\n  return { calculateVolume, analyser, cleanup };\n}\n\nexport function isVideoCodec(maybeCodec: string): maybeCodec is VideoCodec {\n  return videoCodecs.includes(maybeCodec as VideoCodec);\n}\n\nexport function unwrapConstraint(constraint: ConstrainDOMString): string;\nexport function unwrapConstraint(constraint: ConstrainULong): number;\nexport function unwrapConstraint(constraint: ConstrainDOMString | ConstrainULong): string | number {\n  if (typeof constraint === 'string' || typeof constraint === 'number') {\n    return constraint;\n  }\n\n  if (Array.isArray(constraint)) {\n    return constraint[0];\n  }\n  if (constraint.exact) {\n    if (Array.isArray(constraint.exact)) {\n      return constraint.exact[0];\n    }\n    return constraint.exact;\n  }\n  if (constraint.ideal) {\n    if (Array.isArray(constraint.ideal)) {\n      return constraint.ideal[0];\n    }\n    return constraint.ideal;\n  }\n  throw Error('could not unwrap constraint');\n}\n\nexport function toWebsocketUrl(url: string): string {\n  if (url.startsWith('http')) {\n    return url.replace(/^(http)/, 'ws');\n  }\n  return url;\n}\n\nexport function toHttpUrl(url: string): string {\n  if (url.startsWith('ws')) {\n    return url.replace(/^(ws)/, 'http');\n  }\n  return url;\n}\n\nexport function extractTranscriptionSegments(\n  transcription: TranscriptionModel,\n  firstReceivedTimesMap: Map<string, number>,\n): TranscriptionSegment[] {\n  return transcription.segments.map(({ id, text, language, startTime, endTime, final }) => {\n    const firstReceivedTime = firstReceivedTimesMap.get(id) ?? Date.now();\n    const lastReceivedTime = Date.now();\n    if (final) {\n      firstReceivedTimesMap.delete(id);\n    } else {\n      firstReceivedTimesMap.set(id, firstReceivedTime);\n    }\n    return {\n      id,\n      text,\n      startTime: Number.parseInt(startTime.toString()),\n      endTime: Number.parseInt(endTime.toString()),\n      final,\n      language,\n      firstReceivedTime,\n      lastReceivedTime,\n    };\n  });\n}\n\nexport function extractChatMessage(msg: ChatMessageModel): ChatMessage {\n  const { id, timestamp, message, editTimestamp } = msg;\n  return {\n    id,\n    timestamp: Number.parseInt(timestamp.toString()),\n    editTimestamp: editTimestamp ? Number.parseInt(editTimestamp.toString()) : undefined,\n    message,\n  };\n}\n\nexport function getDisconnectReasonFromConnectionError(e: ConnectionError) {\n  switch (e.reason) {\n    case ConnectionErrorReason.LeaveRequest:\n      return e.context as DisconnectReason;\n    case ConnectionErrorReason.Cancelled:\n      return DisconnectReason.CLIENT_INITIATED;\n    case ConnectionErrorReason.NotAllowed:\n      return DisconnectReason.USER_REJECTED;\n    case ConnectionErrorReason.ServerUnreachable:\n      return DisconnectReason.JOIN_FAILURE;\n    default:\n      return DisconnectReason.UNKNOWN_REASON;\n  }\n}\n","import log from '../logger';\nimport { isSafari } from './utils';\n\nconst defaultId = 'default';\n\nexport default class DeviceManager {\n  private static instance?: DeviceManager;\n\n  static mediaDeviceKinds: MediaDeviceKind[] = ['audioinput', 'audiooutput', 'videoinput'];\n\n  static getInstance(): DeviceManager {\n    if (this.instance === undefined) {\n      this.instance = new DeviceManager();\n    }\n    return this.instance;\n  }\n\n  static userMediaPromiseMap: Map<MediaDeviceKind, Promise<MediaStream>> = new Map();\n\n  private _previousDevices: MediaDeviceInfo[] = [];\n\n  get previousDevices() {\n    return this._previousDevices;\n  }\n\n  async getDevices(\n    kind?: MediaDeviceKind,\n    requestPermissions: boolean = true,\n  ): Promise<MediaDeviceInfo[]> {\n    if (DeviceManager.userMediaPromiseMap?.size > 0) {\n      log.debug('awaiting getUserMedia promise');\n      try {\n        if (kind) {\n          await DeviceManager.userMediaPromiseMap.get(kind);\n        } else {\n          await Promise.all(DeviceManager.userMediaPromiseMap.values());\n        }\n      } catch (e: any) {\n        log.warn('error waiting for media permissons');\n      }\n    }\n    let devices = await navigator.mediaDevices.enumerateDevices();\n\n    if (\n      requestPermissions &&\n      // for safari we need to skip this check, as otherwise it will re-acquire user media and fail on iOS https://bugs.webkit.org/show_bug.cgi?id=179363\n      !(isSafari() && this.hasDeviceInUse(kind))\n    ) {\n      const isDummyDeviceOrEmpty =\n        devices.filter((d) => d.kind === kind).length === 0 ||\n        devices.some((device) => {\n          const noLabel = device.label === '';\n          const isRelevant = kind ? device.kind === kind : true;\n          return noLabel && isRelevant;\n        });\n\n      if (isDummyDeviceOrEmpty) {\n        const permissionsToAcquire = {\n          video: kind !== 'audioinput' && kind !== 'audiooutput',\n          audio: kind !== 'videoinput' && { deviceId: 'default' },\n        };\n        const stream = await navigator.mediaDevices.getUserMedia(permissionsToAcquire);\n        devices = await navigator.mediaDevices.enumerateDevices();\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      }\n    }\n    this._previousDevices = devices;\n\n    if (kind) {\n      devices = devices.filter((device) => device.kind === kind);\n    }\n    return devices;\n  }\n\n  async normalizeDeviceId(\n    kind: MediaDeviceKind,\n    deviceId?: string,\n    groupId?: string,\n  ): Promise<string | undefined> {\n    if (deviceId !== defaultId) {\n      return deviceId;\n    }\n\n    // resolve actual device id if it's 'default': Chrome returns it when no\n    // device has been chosen\n    const devices = await this.getDevices(kind);\n\n    const defaultDevice = devices.find((d) => d.deviceId === defaultId);\n\n    if (!defaultDevice) {\n      log.warn('could not reliably determine default device');\n      return undefined;\n    }\n\n    const device = devices.find(\n      (d) => d.deviceId !== defaultId && d.groupId === (groupId ?? defaultDevice.groupId),\n    );\n\n    if (!device) {\n      log.warn('could not reliably determine default device');\n      return undefined;\n    }\n\n    return device?.deviceId;\n  }\n\n  private hasDeviceInUse(kind?: MediaDeviceKind): boolean {\n    return kind\n      ? DeviceManager.userMediaPromiseMap.has(kind)\n      : DeviceManager.userMediaPromiseMap.size > 0;\n  }\n}\n","import { Mutex } from '@livekit/mutex';\nimport { debounce } from 'ts-debounce';\nimport { getBrowser } from '../../utils/browserParser';\nimport DeviceManager from '../DeviceManager';\nimport { DeviceUnsupportedError, TrackInvalidError } from '../errors';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport { compareVersions, isMobile, sleep, unwrapConstraint } from '../utils';\nimport { Track, attachToElement, detachTrack } from './Track';\nimport type { VideoCodec } from './options';\nimport type { TrackProcessor } from './processor/types';\nimport type { ReplaceTrackOptions } from './types';\n\nconst defaultDimensionsTimeout = 1000;\n\nexport default abstract class LocalTrack<\n  TrackKind extends Track.Kind = Track.Kind,\n> extends Track<TrackKind> {\n  protected _sender?: RTCRtpSender;\n\n  /** @internal */\n  get sender(): RTCRtpSender | undefined {\n    return this._sender;\n  }\n\n  /** @internal */\n  set sender(sender: RTCRtpSender | undefined) {\n    this._sender = sender;\n  }\n\n  /** @internal */\n  codec?: VideoCodec;\n\n  get constraints() {\n    return this._constraints;\n  }\n\n  protected _constraints: MediaTrackConstraints;\n\n  protected reacquireTrack: boolean;\n\n  protected providedByUser: boolean;\n\n  protected muteLock: Mutex;\n\n  protected pauseUpstreamLock: Mutex;\n\n  protected processorElement?: HTMLMediaElement;\n\n  protected processor?: TrackProcessor<TrackKind, any>;\n\n  protected processorLock: Mutex;\n\n  protected audioContext?: AudioContext;\n\n  protected manuallyStopped: boolean = false;\n\n  private restartLock: Mutex;\n\n  /**\n   *\n   * @param mediaTrack\n   * @param kind\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  protected constructor(\n    mediaTrack: MediaStreamTrack,\n    kind: TrackKind,\n    constraints?: MediaTrackConstraints,\n    userProvidedTrack = false,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, kind, loggerOptions);\n    this.reacquireTrack = false;\n    this.providedByUser = userProvidedTrack;\n    this.muteLock = new Mutex();\n    this.pauseUpstreamLock = new Mutex();\n    this.processorLock = new Mutex();\n    this.restartLock = new Mutex();\n    this.setMediaStreamTrack(mediaTrack, true);\n\n    // added to satisfy TS compiler, constraints are synced with MediaStreamTrack\n    this._constraints = mediaTrack.getConstraints();\n    if (constraints) {\n      this._constraints = constraints;\n    }\n  }\n\n  get id(): string {\n    return this._mediaStreamTrack.id;\n  }\n\n  get dimensions(): Track.Dimensions | undefined {\n    if (this.kind !== Track.Kind.Video) {\n      return undefined;\n    }\n\n    const { width, height } = this._mediaStreamTrack.getSettings();\n    if (width && height) {\n      return {\n        width,\n        height,\n      };\n    }\n    return undefined;\n  }\n\n  private _isUpstreamPaused: boolean = false;\n\n  get isUpstreamPaused() {\n    return this._isUpstreamPaused;\n  }\n\n  get isUserProvided() {\n    return this.providedByUser;\n  }\n\n  get mediaStreamTrack() {\n    return this.processor?.processedTrack ?? this._mediaStreamTrack;\n  }\n\n  /**\n   * @internal\n   * returns mediaStreamTrack settings of the capturing mediastreamtrack source - ignoring processors\n   */\n  getSourceTrackSettings() {\n    return this._mediaStreamTrack.getSettings();\n  }\n\n  private async setMediaStreamTrack(newTrack: MediaStreamTrack, force?: boolean) {\n    if (newTrack === this._mediaStreamTrack && !force) {\n      return;\n    }\n    if (this._mediaStreamTrack) {\n      // detach\n      this.attachedElements.forEach((el) => {\n        detachTrack(this._mediaStreamTrack, el);\n      });\n      this.debouncedTrackMuteHandler.cancel('new-track');\n      this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n      this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n      this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    }\n\n    this.mediaStream = new MediaStream([newTrack]);\n    if (newTrack) {\n      newTrack.addEventListener('ended', this.handleEnded);\n      // when underlying track emits mute, it indicates that the device is unable\n      // to produce media. In this case we'll need to signal with remote that\n      // the track is \"muted\"\n      // note this is different from LocalTrack.mute because we do not want to\n      // touch MediaStreamTrack.enabled\n      newTrack.addEventListener('mute', this.handleTrackMuteEvent);\n      newTrack.addEventListener('unmute', this.handleTrackUnmuteEvent);\n      this._constraints = newTrack.getConstraints();\n    }\n    let processedTrack: MediaStreamTrack | undefined;\n    if (this.processor && newTrack) {\n      const unlock = await this.processorLock.lock();\n      try {\n        this.log.debug('restarting processor', this.logContext);\n        if (this.kind === 'unknown') {\n          throw TypeError('cannot set processor on track of unknown kind');\n        }\n\n        if (this.processorElement) {\n          attachToElement(newTrack, this.processorElement);\n          // ensure the processorElement itself stays muted\n          this.processorElement.muted = true;\n        }\n        await this.processor.restart({\n          track: newTrack,\n          kind: this.kind,\n          element: this.processorElement,\n        });\n        processedTrack = this.processor.processedTrack;\n      } finally {\n        unlock();\n      }\n    }\n    if (this.sender) {\n      await this.sender.replaceTrack(processedTrack ?? newTrack);\n    }\n    // if `newTrack` is different from the existing track, stop the\n    // older track just before replacing it\n    if (!this.providedByUser && this._mediaStreamTrack !== newTrack) {\n      this._mediaStreamTrack.stop();\n    }\n    this._mediaStreamTrack = newTrack;\n    if (newTrack) {\n      // sync muted state with the enabled state of the newly provided track\n      this._mediaStreamTrack.enabled = !this.isMuted;\n      // when a valid track is replace, we'd want to start producing\n      await this.resumeUpstream();\n      this.attachedElements.forEach((el) => {\n        attachToElement(processedTrack ?? newTrack, el);\n      });\n    }\n  }\n\n  async waitForDimensions(timeout = defaultDimensionsTimeout): Promise<Track.Dimensions> {\n    if (this.kind === Track.Kind.Audio) {\n      throw new Error('cannot get dimensions for audio tracks');\n    }\n\n    if (getBrowser()?.os === 'iOS') {\n      // browsers report wrong initial resolution on iOS.\n      // when slightly delaying the call to .getSettings(), the correct resolution is being reported\n      await sleep(10);\n    }\n\n    const started = Date.now();\n    while (Date.now() - started < timeout) {\n      const dims = this.dimensions;\n      if (dims) {\n        return dims;\n      }\n      await sleep(50);\n    }\n    throw new TrackInvalidError('unable to get track dimensions after timeout');\n  }\n\n  async setDeviceId(deviceId: ConstrainDOMString): Promise<boolean> {\n    if (\n      this._constraints.deviceId === deviceId &&\n      this._mediaStreamTrack.getSettings().deviceId === unwrapConstraint(deviceId)\n    ) {\n      return true;\n    }\n    this._constraints.deviceId = deviceId;\n\n    // when track is muted, underlying media stream track is stopped and\n    // will be restarted later\n    if (this.isMuted) {\n      return true;\n    }\n\n    await this.restartTrack();\n\n    return unwrapConstraint(deviceId) === this._mediaStreamTrack.getSettings().deviceId;\n  }\n\n  abstract restartTrack(constraints?: unknown): Promise<void>;\n\n  /**\n   * @returns DeviceID of the device that is currently being used for this track\n   */\n  async getDeviceId(normalize = true): Promise<string | undefined> {\n    // screen share doesn't have a usable device id\n    if (this.source === Track.Source.ScreenShare) {\n      return;\n    }\n    const { deviceId, groupId } = this._mediaStreamTrack.getSettings();\n    const kind = this.kind === Track.Kind.Audio ? 'audioinput' : 'videoinput';\n\n    return normalize\n      ? DeviceManager.getInstance().normalizeDeviceId(kind, deviceId, groupId)\n      : deviceId;\n  }\n\n  async mute() {\n    this.setTrackMuted(true);\n    return this;\n  }\n\n  async unmute() {\n    this.setTrackMuted(false);\n    return this;\n  }\n\n  async replaceTrack(track: MediaStreamTrack, options?: ReplaceTrackOptions): Promise<typeof this>;\n  async replaceTrack(track: MediaStreamTrack, userProvidedTrack?: boolean): Promise<typeof this>;\n  async replaceTrack(\n    track: MediaStreamTrack,\n    userProvidedOrOptions: boolean | ReplaceTrackOptions | undefined,\n  ) {\n    if (!this.sender) {\n      throw new TrackInvalidError('unable to replace an unpublished track');\n    }\n\n    let userProvidedTrack: boolean | undefined;\n    let stopProcessor: boolean | undefined;\n\n    if (typeof userProvidedOrOptions === 'boolean') {\n      userProvidedTrack = userProvidedOrOptions;\n    } else if (userProvidedOrOptions !== undefined) {\n      userProvidedTrack = userProvidedOrOptions.userProvidedTrack;\n      stopProcessor = userProvidedOrOptions.stopProcessor;\n    }\n\n    this.providedByUser = userProvidedTrack ?? true;\n\n    this.log.debug('replace MediaStreamTrack', this.logContext);\n    await this.setMediaStreamTrack(track);\n    // this must be synced *after* setting mediaStreamTrack above, since it relies\n    // on the previous state in order to cleanup\n\n    if (stopProcessor && this.processor) {\n      await this.stopProcessor();\n    }\n    return this;\n  }\n\n  protected async restart(constraints?: MediaTrackConstraints) {\n    this.manuallyStopped = false;\n    const unlock = await this.restartLock.lock();\n    try {\n      if (!constraints) {\n        constraints = this._constraints;\n      }\n      this.log.debug('restarting track with constraints', { ...this.logContext, constraints });\n\n      const streamConstraints: MediaStreamConstraints = {\n        audio: false,\n        video: false,\n      };\n\n      if (this.kind === Track.Kind.Video) {\n        streamConstraints.video = constraints;\n      } else {\n        streamConstraints.audio = constraints;\n      }\n\n      // these steps are duplicated from setMediaStreamTrack because we must stop\n      // the previous tracks before new tracks can be acquired\n      this.attachedElements.forEach((el) => {\n        detachTrack(this.mediaStreamTrack, el);\n      });\n      this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n      // on Safari, the old audio track must be stopped before attempting to acquire\n      // the new track, otherwise the new track will stop with\n      // 'A MediaStreamTrack ended due to a capture failure`\n      this._mediaStreamTrack.stop();\n\n      // create new track and attach\n      const mediaStream = await navigator.mediaDevices.getUserMedia(streamConstraints);\n      const newTrack = mediaStream.getTracks()[0];\n      newTrack.addEventListener('ended', this.handleEnded);\n      this.log.debug('re-acquired MediaStreamTrack', this.logContext);\n\n      await this.setMediaStreamTrack(newTrack);\n      this._constraints = constraints;\n      this.emit(TrackEvent.Restarted, this);\n      if (this.manuallyStopped) {\n        this.log.warn(\n          'track was stopped during a restart, stopping restarted track',\n          this.logContext,\n        );\n        this.stop();\n      }\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  protected setTrackMuted(muted: boolean) {\n    this.log.debug(`setting ${this.kind} track ${muted ? 'muted' : 'unmuted'}`, this.logContext);\n\n    if (this.isMuted === muted && this._mediaStreamTrack.enabled !== muted) {\n      return;\n    }\n\n    this.isMuted = muted;\n    this._mediaStreamTrack.enabled = !muted;\n    this.emit(muted ? TrackEvent.Muted : TrackEvent.Unmuted, this);\n  }\n\n  protected get needsReAcquisition(): boolean {\n    return (\n      this._mediaStreamTrack.readyState !== 'live' ||\n      this._mediaStreamTrack.muted ||\n      !this._mediaStreamTrack.enabled ||\n      this.reacquireTrack\n    );\n  }\n\n  protected async handleAppVisibilityChanged() {\n    await super.handleAppVisibilityChanged();\n    if (!isMobile()) return;\n    this.log.debug(`visibility changed, is in Background: ${this.isInBackground}`, this.logContext);\n\n    if (!this.isInBackground && this.needsReAcquisition && !this.isUserProvided && !this.isMuted) {\n      this.log.debug(`track needs to be reacquired, restarting ${this.source}`, this.logContext);\n      await this.restart();\n      this.reacquireTrack = false;\n    }\n  }\n\n  private handleTrackMuteEvent = () =>\n    this.debouncedTrackMuteHandler().catch(() =>\n      this.log.debug('track mute bounce got cancelled by an unmute event', this.logContext),\n    );\n\n  private debouncedTrackMuteHandler = debounce(async () => {\n    await this.pauseUpstream();\n  }, 5000);\n\n  private handleTrackUnmuteEvent = async () => {\n    this.debouncedTrackMuteHandler.cancel('unmute');\n    await this.resumeUpstream();\n  };\n\n  private handleEnded = () => {\n    if (this.isInBackground) {\n      this.reacquireTrack = true;\n    }\n    this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n    this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    this.emit(TrackEvent.Ended, this);\n  };\n\n  stop() {\n    this.manuallyStopped = true;\n    super.stop();\n\n    this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n    this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n    this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    this.processor?.destroy();\n    this.processor = undefined;\n  }\n\n  /**\n   * pauses publishing to the server without disabling the local MediaStreamTrack\n   * this is used to display a user's own video locally while pausing publishing to\n   * the server.\n   * this API is unsupported on Safari < 12 due to a bug\n   **/\n  async pauseUpstream() {\n    const unlock = await this.pauseUpstreamLock.lock();\n    try {\n      if (this._isUpstreamPaused === true) {\n        return;\n      }\n      if (!this.sender) {\n        this.log.warn('unable to pause upstream for an unpublished track', this.logContext);\n        return;\n      }\n\n      this._isUpstreamPaused = true;\n      this.emit(TrackEvent.UpstreamPaused, this);\n      const browser = getBrowser();\n      if (browser?.name === 'Safari' && compareVersions(browser.version, '12.0') < 0) {\n        // https://bugs.webkit.org/show_bug.cgi?id=184911\n        throw new DeviceUnsupportedError('pauseUpstream is not supported on Safari < 12.');\n      }\n      await this.sender.replaceTrack(null);\n    } finally {\n      unlock();\n    }\n  }\n\n  async resumeUpstream() {\n    const unlock = await this.pauseUpstreamLock.lock();\n    try {\n      if (this._isUpstreamPaused === false) {\n        return;\n      }\n      if (!this.sender) {\n        this.log.warn('unable to resume upstream for an unpublished track', this.logContext);\n        return;\n      }\n      this._isUpstreamPaused = false;\n      this.emit(TrackEvent.UpstreamResumed, this);\n\n      // this operation is noop if mediastreamtrack is already being sent\n      await this.sender.replaceTrack(this.mediaStreamTrack);\n    } finally {\n      unlock();\n    }\n  }\n\n  /**\n   * Gets the RTCStatsReport for the LocalTrack's underlying RTCRtpSender\n   * See https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport\n   *\n   * @returns Promise<RTCStatsReport> | undefined\n   */\n  async getRTCStatsReport(): Promise<RTCStatsReport | undefined> {\n    if (!this.sender?.getStats) {\n      return;\n    }\n    const statsReport = await this.sender.getStats();\n    return statsReport;\n  }\n\n  /**\n   * Sets a processor on this track.\n   * See https://github.com/livekit/track-processors-js for example usage\n   *\n   * @experimental\n   *\n   * @param processor\n   * @param showProcessedStreamLocally\n   * @returns\n   */\n  async setProcessor(processor: TrackProcessor<TrackKind>, showProcessedStreamLocally = true) {\n    const unlock = await this.processorLock.lock();\n    try {\n      this.log.debug('setting up processor', this.logContext);\n\n      const processorElement = document.createElement(this.kind) as HTMLMediaElement;\n\n      const processorOptions = {\n        kind: this.kind,\n        track: this._mediaStreamTrack,\n        element: processorElement,\n        audioContext: this.audioContext,\n      };\n      await processor.init(processorOptions);\n      this.log.debug('processor initialized', this.logContext);\n\n      if (this.processor) {\n        await this.stopProcessor();\n      }\n      if (this.kind === 'unknown') {\n        throw TypeError('cannot set processor on track of unknown kind');\n      }\n\n      attachToElement(this._mediaStreamTrack, processorElement);\n      processorElement.muted = true;\n\n      processorElement\n        .play()\n        .catch((error) =>\n          this.log.error('failed to play processor element', { ...this.logContext, error }),\n        );\n\n      this.processor = processor;\n      this.processorElement = processorElement;\n      if (this.processor.processedTrack) {\n        for (const el of this.attachedElements) {\n          if (el !== this.processorElement && showProcessedStreamLocally) {\n            detachTrack(this._mediaStreamTrack, el);\n            attachToElement(this.processor.processedTrack, el);\n          }\n        }\n        await this.sender?.replaceTrack(this.processor.processedTrack);\n      }\n      this.emit(TrackEvent.TrackProcessorUpdate, this.processor);\n    } finally {\n      unlock();\n    }\n  }\n\n  getProcessor() {\n    return this.processor;\n  }\n\n  /**\n   * Stops the track processor\n   * See https://github.com/livekit/track-processors-js for example usage\n   *\n   * @experimental\n   * @returns\n   */\n  async stopProcessor(keepElement = true) {\n    if (!this.processor) return;\n\n    this.log.debug('stopping processor', this.logContext);\n    this.processor.processedTrack?.stop();\n    await this.processor.destroy();\n    this.processor = undefined;\n    if (!keepElement) {\n      this.processorElement?.remove();\n      this.processorElement = undefined;\n    }\n    // apply original track constraints in case the processor changed them\n    await this._mediaStreamTrack.applyConstraints(this._constraints);\n    // force re-setting of the mediaStreamTrack on the sender\n    await this.setMediaStreamTrack(this._mediaStreamTrack, true);\n    this.emit(TrackEvent.TrackProcessorUpdate);\n  }\n\n  protected abstract monitorSender(): void;\n}\n","import { Encryption_Type, TrackInfo } from '@livekit/protocol';\nimport { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport log, { LogLevel, workerLogger } from '../logger';\nimport type RTCEngine from '../room/RTCEngine';\nimport type Room from '../room/Room';\nimport { ConnectionState } from '../room/Room';\nimport { DeviceUnsupportedError } from '../room/errors';\nimport { EngineEvent, ParticipantEvent, RoomEvent } from '../room/events';\nimport LocalTrack from '../room/track/LocalTrack';\nimport type RemoteTrack from '../room/track/RemoteTrack';\nimport type { Track } from '../room/track/Track';\nimport type { VideoCodec } from '../room/track/options';\nimport { mimeTypeToVideoCodecString } from '../room/track/utils';\nimport type { BaseKeyProvider } from './KeyProvider';\nimport { E2EE_FLAG } from './constants';\nimport { type E2EEManagerCallbacks, EncryptionEvent, KeyProviderEvent } from './events';\nimport type {\n  E2EEManagerOptions,\n  E2EEWorkerMessage,\n  EnableMessage,\n  EncodeMessage,\n  InitMessage,\n  KeyInfo,\n  RTPVideoMapMessage,\n  RatchetRequestMessage,\n  RemoveTransformMessage,\n  SetKeyMessage,\n  SifTrailerMessage,\n  UpdateCodecMessage,\n} from './types';\nimport { isE2EESupported, isScriptTransformSupported } from './utils';\n\nexport interface BaseE2EEManager {\n  setup(room: Room): void;\n  setupEngine(engine: RTCEngine): void;\n  setParticipantCryptorEnabled(enabled: boolean, participantIdentity: string): void;\n  setSifTrailer(trailer: Uint8Array): void;\n  on<E extends keyof E2EEManagerCallbacks>(event: E, listener: E2EEManagerCallbacks[E]): this;\n}\n\n/**\n * @experimental\n */\nexport class E2EEManager\n  extends (EventEmitter as new () => TypedEventEmitter<E2EEManagerCallbacks>)\n  implements BaseE2EEManager\n{\n  protected worker: Worker;\n\n  protected room?: Room;\n\n  private encryptionEnabled: boolean;\n\n  private keyProvider: BaseKeyProvider;\n\n  constructor(options: E2EEManagerOptions) {\n    super();\n    this.keyProvider = options.keyProvider;\n    this.worker = options.worker;\n    this.encryptionEnabled = false;\n  }\n\n  /**\n   * @internal\n   */\n  setup(room: Room) {\n    if (!isE2EESupported()) {\n      throw new DeviceUnsupportedError(\n        'tried to setup end-to-end encryption on an unsupported browser',\n      );\n    }\n    log.info('setting up e2ee');\n    if (room !== this.room) {\n      this.room = room;\n      this.setupEventListeners(room, this.keyProvider);\n      // this.worker = new Worker('');\n      const msg: InitMessage = {\n        kind: 'init',\n        data: {\n          keyProviderOptions: this.keyProvider.getOptions(),\n          loglevel: workerLogger.getLevel() as LogLevel,\n        },\n      };\n      if (this.worker) {\n        log.info(`initializing worker`, { worker: this.worker });\n        this.worker.onmessage = this.onWorkerMessage;\n        this.worker.onerror = this.onWorkerError;\n        this.worker.postMessage(msg);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  setParticipantCryptorEnabled(enabled: boolean, participantIdentity: string) {\n    log.debug(`set e2ee to ${enabled} for participant ${participantIdentity}`);\n    this.postEnable(enabled, participantIdentity);\n  }\n\n  /**\n   * @internal\n   */\n  setSifTrailer(trailer: Uint8Array) {\n    if (!trailer || trailer.length === 0) {\n      log.warn(\"ignoring server sent trailer as it's empty\");\n    } else {\n      this.postSifTrailer(trailer);\n    }\n  }\n\n  private onWorkerMessage = (ev: MessageEvent<E2EEWorkerMessage>) => {\n    const { kind, data } = ev.data;\n    switch (kind) {\n      case 'error':\n        log.error(data.error.message);\n        this.emit(EncryptionEvent.EncryptionError, data.error);\n        break;\n      case 'initAck':\n        if (data.enabled) {\n          this.keyProvider.getKeys().forEach((keyInfo) => {\n            this.postKey(keyInfo);\n          });\n        }\n        break;\n\n      case 'enable':\n        if (data.enabled) {\n          this.keyProvider.getKeys().forEach((keyInfo) => {\n            this.postKey(keyInfo);\n          });\n        }\n        if (\n          this.encryptionEnabled !== data.enabled &&\n          data.participantIdentity === this.room?.localParticipant.identity\n        ) {\n          this.emit(\n            EncryptionEvent.ParticipantEncryptionStatusChanged,\n            data.enabled,\n            this.room!.localParticipant,\n          );\n          this.encryptionEnabled = data.enabled;\n        } else if (data.participantIdentity) {\n          const participant = this.room?.getParticipantByIdentity(data.participantIdentity);\n          if (!participant) {\n            throw TypeError(\n              `couldn't set encryption status, participant not found${data.participantIdentity}`,\n            );\n          }\n          this.emit(EncryptionEvent.ParticipantEncryptionStatusChanged, data.enabled, participant);\n        }\n        break;\n      case 'ratchetKey':\n        this.keyProvider.emit(KeyProviderEvent.KeyRatcheted, data.material, data.keyIndex);\n        break;\n      default:\n        break;\n    }\n  };\n\n  private onWorkerError = (ev: ErrorEvent) => {\n    log.error('e2ee worker encountered an error:', { error: ev.error });\n    this.emit(EncryptionEvent.EncryptionError, ev.error);\n  };\n\n  public setupEngine(engine: RTCEngine) {\n    engine.on(EngineEvent.RTPVideoMapUpdate, (rtpMap) => {\n      this.postRTPMap(rtpMap);\n    });\n  }\n\n  private setupEventListeners(room: Room, keyProvider: BaseKeyProvider) {\n    room.on(RoomEvent.TrackPublished, (pub, participant) =>\n      this.setParticipantCryptorEnabled(\n        pub.trackInfo!.encryption !== Encryption_Type.NONE,\n        participant.identity,\n      ),\n    );\n    room\n      .on(RoomEvent.ConnectionStateChanged, (state) => {\n        if (state === ConnectionState.Connected) {\n          room.remoteParticipants.forEach((participant) => {\n            participant.trackPublications.forEach((pub) => {\n              this.setParticipantCryptorEnabled(\n                pub.trackInfo!.encryption !== Encryption_Type.NONE,\n                participant.identity,\n              );\n            });\n          });\n        }\n      })\n      .on(RoomEvent.TrackUnsubscribed, (track, _, participant) => {\n        const msg: RemoveTransformMessage = {\n          kind: 'removeTransform',\n          data: {\n            participantIdentity: participant.identity,\n            trackId: track.mediaStreamID,\n          },\n        };\n        this.worker?.postMessage(msg);\n      })\n      .on(RoomEvent.TrackSubscribed, (track, pub, participant) => {\n        this.setupE2EEReceiver(track, participant.identity, pub.trackInfo);\n      })\n      .on(RoomEvent.SignalConnected, () => {\n        if (!this.room) {\n          throw new TypeError(`expected room to be present on signal connect`);\n        }\n        keyProvider.getKeys().forEach((keyInfo) => {\n          this.postKey(keyInfo);\n        });\n        this.setParticipantCryptorEnabled(\n          this.room.localParticipant.isE2EEEnabled,\n          this.room.localParticipant.identity,\n        );\n      });\n    room.localParticipant.on(ParticipantEvent.LocalTrackPublished, async (publication) => {\n      this.setupE2EESender(publication.track!, publication.track!.sender!);\n    });\n\n    keyProvider\n      .on(KeyProviderEvent.SetKey, (keyInfo) => this.postKey(keyInfo))\n      .on(KeyProviderEvent.RatchetRequest, (participantId, keyIndex) =>\n        this.postRatchetRequest(participantId, keyIndex),\n      );\n  }\n\n  private postRatchetRequest(participantIdentity?: string, keyIndex?: number) {\n    if (!this.worker) {\n      throw Error('could not ratchet key, worker is missing');\n    }\n    const msg: RatchetRequestMessage = {\n      kind: 'ratchetRequest',\n      data: {\n        participantIdentity: participantIdentity,\n        keyIndex,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private postKey({ key, participantIdentity, keyIndex }: KeyInfo) {\n    if (!this.worker) {\n      throw Error('could not set key, worker is missing');\n    }\n    const msg: SetKeyMessage = {\n      kind: 'setKey',\n      data: {\n        participantIdentity: participantIdentity,\n        isPublisher: participantIdentity === this.room?.localParticipant.identity,\n        key,\n        keyIndex,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private postEnable(enabled: boolean, participantIdentity: string) {\n    if (this.worker) {\n      const enableMsg: EnableMessage = {\n        kind: 'enable',\n        data: {\n          enabled,\n          participantIdentity,\n        },\n      };\n      this.worker.postMessage(enableMsg);\n    } else {\n      throw new ReferenceError('failed to enable e2ee, worker is not ready');\n    }\n  }\n\n  private postRTPMap(map: Map<number, VideoCodec>) {\n    if (!this.worker) {\n      throw TypeError('could not post rtp map, worker is missing');\n    }\n    if (!this.room?.localParticipant.identity) {\n      throw TypeError('could not post rtp map, local participant identity is missing');\n    }\n    const msg: RTPVideoMapMessage = {\n      kind: 'setRTPMap',\n      data: {\n        map,\n        participantIdentity: this.room.localParticipant.identity,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private postSifTrailer(trailer: Uint8Array) {\n    if (!this.worker) {\n      throw Error('could not post SIF trailer, worker is missing');\n    }\n    const msg: SifTrailerMessage = {\n      kind: 'setSifTrailer',\n      data: {\n        trailer,\n      },\n    };\n    this.worker.postMessage(msg);\n  }\n\n  private setupE2EEReceiver(track: RemoteTrack, remoteId: string, trackInfo?: TrackInfo) {\n    if (!track.receiver) {\n      return;\n    }\n    if (!trackInfo?.mimeType || trackInfo.mimeType === '') {\n      throw new TypeError('MimeType missing from trackInfo, cannot set up E2EE cryptor');\n    }\n    this.handleReceiver(\n      track.receiver,\n      track.mediaStreamID,\n      remoteId,\n      track.kind === 'video' ? mimeTypeToVideoCodecString(trackInfo.mimeType) : undefined,\n    );\n  }\n\n  private setupE2EESender(track: Track, sender: RTCRtpSender) {\n    if (!(track instanceof LocalTrack) || !sender) {\n      if (!sender) log.warn('early return because sender is not ready');\n      return;\n    }\n    this.handleSender(sender, track.mediaStreamID, undefined);\n  }\n\n  /**\n   * Handles the given {@code RTCRtpReceiver} by creating a {@code TransformStream} which will inject\n   * a frame decoder.\n   *\n   */\n  private async handleReceiver(\n    receiver: RTCRtpReceiver,\n    trackId: string,\n    participantIdentity: string,\n    codec?: VideoCodec,\n  ) {\n    if (!this.worker) {\n      return;\n    }\n\n    if (isScriptTransformSupported()) {\n      const options = {\n        kind: 'decode',\n        participantIdentity,\n        trackId,\n        codec,\n      };\n      // @ts-ignore\n      receiver.transform = new RTCRtpScriptTransform(this.worker, options);\n    } else {\n      if (E2EE_FLAG in receiver && codec) {\n        // only update codec\n        const msg: UpdateCodecMessage = {\n          kind: 'updateCodec',\n          data: {\n            trackId,\n            codec,\n            participantIdentity: participantIdentity,\n          },\n        };\n        this.worker.postMessage(msg);\n        return;\n      }\n      // @ts-ignore\n      let writable: WritableStream = receiver.writableStream;\n      // @ts-ignore\n      let readable: ReadableStream = receiver.readableStream;\n      if (!writable || !readable) {\n        // @ts-ignore\n        const receiverStreams = receiver.createEncodedStreams();\n        // @ts-ignore\n        receiver.writableStream = receiverStreams.writable;\n        writable = receiverStreams.writable;\n        // @ts-ignore\n        receiver.readableStream = receiverStreams.readable;\n        readable = receiverStreams.readable;\n      }\n\n      const msg: EncodeMessage = {\n        kind: 'decode',\n        data: {\n          readableStream: readable,\n          writableStream: writable,\n          trackId: trackId,\n          codec,\n          participantIdentity: participantIdentity,\n        },\n      };\n      this.worker.postMessage(msg, [readable, writable]);\n    }\n\n    // @ts-ignore\n    receiver[E2EE_FLAG] = true;\n  }\n\n  /**\n   * Handles the given {@code RTCRtpSender} by creating a {@code TransformStream} which will inject\n   * a frame encoder.\n   *\n   */\n  private handleSender(sender: RTCRtpSender, trackId: string, codec?: VideoCodec) {\n    if (E2EE_FLAG in sender || !this.worker) {\n      return;\n    }\n\n    if (!this.room?.localParticipant.identity || this.room.localParticipant.identity === '') {\n      throw TypeError('local identity needs to be known in order to set up encrypted sender');\n    }\n\n    if (isScriptTransformSupported()) {\n      log.info('initialize script transform');\n      const options = {\n        kind: 'encode',\n        participantIdentity: this.room.localParticipant.identity,\n        trackId,\n        codec,\n      };\n      // @ts-ignore\n      sender.transform = new RTCRtpScriptTransform(this.worker, options);\n    } else {\n      log.info('initialize encoded streams');\n      // @ts-ignore\n      const senderStreams = sender.createEncodedStreams();\n      const msg: EncodeMessage = {\n        kind: 'encode',\n        data: {\n          readableStream: senderStreams.readable,\n          writableStream: senderStreams.writable,\n          codec,\n          trackId,\n          participantIdentity: this.room.localParticipant.identity,\n        },\n      };\n      this.worker.postMessage(msg, [senderStreams.readable, senderStreams.writable]);\n    }\n\n    // @ts-ignore\n    sender[E2EE_FLAG] = true;\n  }\n}\n","import { Mutex } from '@livekit/mutex';\n\ntype QueueTask<T> = () => PromiseLike<T>;\n\nenum QueueTaskStatus {\n  'WAITING',\n  'RUNNING',\n  'COMPLETED',\n}\n\ntype QueueTaskInfo = {\n  id: number;\n  enqueuedAt: number;\n  executedAt?: number;\n  status: QueueTaskStatus;\n};\n\nexport class AsyncQueue {\n  private pendingTasks: Map<number, QueueTaskInfo>;\n\n  private taskMutex: Mutex;\n\n  private nextTaskIndex: number;\n\n  constructor() {\n    this.pendingTasks = new Map();\n    this.taskMutex = new Mutex();\n    this.nextTaskIndex = 0;\n  }\n\n  async run<T>(task: QueueTask<T>) {\n    const taskInfo: QueueTaskInfo = {\n      id: this.nextTaskIndex++,\n      enqueuedAt: Date.now(),\n      status: QueueTaskStatus.WAITING,\n    };\n    this.pendingTasks.set(taskInfo.id, taskInfo);\n    const unlock = await this.taskMutex.lock();\n    try {\n      taskInfo.executedAt = Date.now();\n      taskInfo.status = QueueTaskStatus.RUNNING;\n      return await task();\n    } finally {\n      taskInfo.status = QueueTaskStatus.COMPLETED;\n      this.pendingTasks.delete(taskInfo.id);\n      unlock();\n    }\n  }\n\n  async flush() {\n    return this.run(async () => {});\n  }\n\n  snapshot() {\n    return Array.from(this.pendingTasks.values());\n  }\n}\n","import { Mutex } from '@livekit/mutex';\nimport {\n  AddTrackRequest,\n  AudioTrackFeature,\n  ClientInfo,\n  ConnectionQualityUpdate,\n  DisconnectReason,\n  JoinResponse,\n  LeaveRequest,\n  LeaveRequest_Action,\n  MuteTrackRequest,\n  ParticipantInfo,\n  Ping,\n  ReconnectReason,\n  ReconnectResponse,\n  RequestResponse,\n  Room,\n  SessionDescription,\n  SignalRequest,\n  SignalResponse,\n  SignalTarget,\n  SimulateScenario,\n  SpeakerInfo,\n  StreamStateUpdate,\n  SubscribedQualityUpdate,\n  SubscriptionPermission,\n  SubscriptionPermissionUpdate,\n  SubscriptionResponse,\n  SyncState,\n  TrackPermission,\n  TrackPublishedResponse,\n  TrackUnpublishedResponse,\n  TrickleRequest,\n  UpdateLocalAudioTrack,\n  UpdateParticipantMetadata,\n  UpdateSubscription,\n  UpdateTrackSettings,\n  UpdateVideoLayers,\n  VideoLayer,\n  protoInt64,\n} from '@livekit/protocol';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport { ConnectionError, ConnectionErrorReason } from '../room/errors';\nimport CriticalTimers from '../room/timers';\nimport type { LoggerOptions } from '../room/types';\nimport { getClientInfo, isReactNative, sleep, toWebsocketUrl } from '../room/utils';\nimport { AsyncQueue } from '../utils/AsyncQueue';\n\n// internal options\ninterface ConnectOpts extends SignalOptions {\n  /** internal */\n  reconnect?: boolean;\n  /** internal */\n  reconnectReason?: number;\n  /** internal */\n  sid?: string;\n}\n\n// public options\nexport interface SignalOptions {\n  autoSubscribe: boolean;\n  adaptiveStream?: boolean;\n  maxRetries: number;\n  e2eeEnabled: boolean;\n  websocketTimeout: number;\n}\n\ntype SignalMessage = SignalRequest['message'];\n\ntype SignalKind = NonNullable<SignalMessage>['case'];\n\nconst passThroughQueueSignals: Array<SignalKind> = [\n  'syncState',\n  'trickle',\n  'offer',\n  'answer',\n  'simulate',\n  'leave',\n];\n\nfunction canPassThroughQueue(req: SignalMessage): boolean {\n  const canPass = passThroughQueueSignals.indexOf(req!.case) >= 0;\n  log.trace('request allowed to bypass queue:', { canPass, req });\n  return canPass;\n}\n\nexport enum SignalConnectionState {\n  CONNECTING,\n  CONNECTED,\n  RECONNECTING,\n  DISCONNECTING,\n  DISCONNECTED,\n}\n\n/** @internal */\nexport class SignalClient {\n  requestQueue: AsyncQueue;\n\n  queuedRequests: Array<() => Promise<void>>;\n\n  useJSON: boolean;\n\n  /** signal rtt in milliseconds */\n  rtt: number = 0;\n\n  /** simulate signaling latency by delaying messages */\n  signalLatency?: number;\n\n  onClose?: (reason: string) => void;\n\n  onAnswer?: (sd: RTCSessionDescriptionInit) => void;\n\n  onOffer?: (sd: RTCSessionDescriptionInit) => void;\n\n  // when a new ICE candidate is made available\n  onTrickle?: (sd: RTCIceCandidateInit, target: SignalTarget) => void;\n\n  onParticipantUpdate?: (updates: ParticipantInfo[]) => void;\n\n  onLocalTrackPublished?: (res: TrackPublishedResponse) => void;\n\n  onNegotiateRequested?: () => void;\n\n  onSpeakersChanged?: (res: SpeakerInfo[]) => void;\n\n  onRemoteMuteChanged?: (trackSid: string, muted: boolean) => void;\n\n  onRoomUpdate?: (room: Room) => void;\n\n  onConnectionQuality?: (update: ConnectionQualityUpdate) => void;\n\n  onStreamStateUpdate?: (update: StreamStateUpdate) => void;\n\n  onSubscribedQualityUpdate?: (update: SubscribedQualityUpdate) => void;\n\n  onSubscriptionPermissionUpdate?: (update: SubscriptionPermissionUpdate) => void;\n\n  onSubscriptionError?: (update: SubscriptionResponse) => void;\n\n  onLocalTrackUnpublished?: (res: TrackUnpublishedResponse) => void;\n\n  onTokenRefresh?: (token: string) => void;\n\n  onLeave?: (leave: LeaveRequest) => void;\n\n  onRequestResponse?: (response: RequestResponse) => void;\n\n  onLocalTrackSubscribed?: (trackSid: string) => void;\n\n  connectOptions?: ConnectOpts;\n\n  ws?: WebSocket;\n\n  get currentState() {\n    return this.state;\n  }\n\n  get isDisconnected() {\n    return (\n      this.state === SignalConnectionState.DISCONNECTING ||\n      this.state === SignalConnectionState.DISCONNECTED\n    );\n  }\n\n  private get isEstablishingConnection() {\n    return (\n      this.state === SignalConnectionState.CONNECTING ||\n      this.state === SignalConnectionState.RECONNECTING\n    );\n  }\n\n  private getNextRequestId() {\n    this._requestId += 1;\n    return this._requestId;\n  }\n\n  private options?: SignalOptions;\n\n  private pingTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  private pingTimeoutDuration: number | undefined;\n\n  private pingIntervalDuration: number | undefined;\n\n  private pingInterval: ReturnType<typeof setInterval> | undefined;\n\n  private closingLock: Mutex;\n\n  private state: SignalConnectionState = SignalConnectionState.DISCONNECTED;\n\n  private connectionLock: Mutex;\n\n  private log = log;\n\n  private loggerContextCb?: LoggerOptions['loggerContextCb'];\n\n  private _requestId = 0;\n\n  constructor(useJSON: boolean = false, loggerOptions: LoggerOptions = {}) {\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.Signal);\n    this.loggerContextCb = loggerOptions.loggerContextCb;\n    this.useJSON = useJSON;\n    this.requestQueue = new AsyncQueue();\n    this.queuedRequests = [];\n    this.closingLock = new Mutex();\n    this.connectionLock = new Mutex();\n    this.state = SignalConnectionState.DISCONNECTED;\n  }\n\n  private get logContext() {\n    return this.loggerContextCb?.() ?? {};\n  }\n\n  async join(\n    url: string,\n    token: string,\n    opts: SignalOptions,\n    abortSignal?: AbortSignal,\n  ): Promise<JoinResponse> {\n    // during a full reconnect, we'd want to start the sequence even if currently\n    // connected\n    this.state = SignalConnectionState.CONNECTING;\n    this.options = opts;\n    const res = await this.connect(url, token, opts, abortSignal);\n    return res as JoinResponse;\n  }\n\n  async reconnect(\n    url: string,\n    token: string,\n    sid?: string,\n    reason?: ReconnectReason,\n  ): Promise<ReconnectResponse | undefined> {\n    if (!this.options) {\n      this.log.warn(\n        'attempted to reconnect without signal options being set, ignoring',\n        this.logContext,\n      );\n      return;\n    }\n    this.state = SignalConnectionState.RECONNECTING;\n    // clear ping interval and restart it once reconnected\n    this.clearPingInterval();\n\n    const res = await this.connect(url, token, {\n      ...this.options,\n      reconnect: true,\n      sid,\n      reconnectReason: reason,\n    });\n    return res;\n  }\n\n  private connect(\n    url: string,\n    token: string,\n    opts: ConnectOpts,\n    abortSignal?: AbortSignal,\n  ): Promise<JoinResponse | ReconnectResponse | undefined> {\n    this.connectOptions = opts;\n    url = toWebsocketUrl(url);\n    // strip trailing slash\n    url = url.replace(/\\/$/, '');\n    url += '/rtc';\n\n    const clientInfo = getClientInfo();\n    const params = createConnectionParams(token, clientInfo, opts);\n\n    return new Promise<JoinResponse | ReconnectResponse | undefined>(async (resolve, reject) => {\n      const unlock = await this.connectionLock.lock();\n      try {\n        const abortHandler = async () => {\n          this.close();\n          clearTimeout(wsTimeout);\n          reject(\n            new ConnectionError(\n              'room connection has been cancelled (signal)',\n              ConnectionErrorReason.Cancelled,\n            ),\n          );\n        };\n\n        const wsTimeout = setTimeout(() => {\n          this.close();\n          reject(\n            new ConnectionError(\n              'room connection has timed out (signal)',\n              ConnectionErrorReason.ServerUnreachable,\n            ),\n          );\n        }, opts.websocketTimeout);\n\n        if (abortSignal?.aborted) {\n          abortHandler();\n        }\n        abortSignal?.addEventListener('abort', abortHandler);\n        this.log.debug(`connecting to ${url + params}`, this.logContext);\n        if (this.ws) {\n          await this.close(false);\n        }\n        this.ws = new WebSocket(url + params);\n        this.ws.binaryType = 'arraybuffer';\n\n        this.ws.onopen = () => {\n          clearTimeout(wsTimeout);\n        };\n\n        this.ws.onerror = async (ev: Event) => {\n          if (this.state !== SignalConnectionState.CONNECTED) {\n            this.state = SignalConnectionState.DISCONNECTED;\n            clearTimeout(wsTimeout);\n            try {\n              const resp = await fetch(`http${url.substring(2)}/validate${params}`);\n              if (resp.status.toFixed(0).startsWith('4')) {\n                const msg = await resp.text();\n                reject(new ConnectionError(msg, ConnectionErrorReason.NotAllowed, resp.status));\n              } else {\n                reject(\n                  new ConnectionError(\n                    'Internal error',\n                    ConnectionErrorReason.InternalError,\n                    resp.status,\n                  ),\n                );\n              }\n            } catch (e) {\n              reject(\n                new ConnectionError(\n                  'server was not reachable',\n                  ConnectionErrorReason.ServerUnreachable,\n                ),\n              );\n            }\n            return;\n          }\n          // other errors, handle\n          this.handleWSError(ev);\n        };\n\n        this.ws.onmessage = async (ev: MessageEvent) => {\n          // not considered connected until JoinResponse is received\n          let resp: SignalResponse;\n          if (typeof ev.data === 'string') {\n            const json = JSON.parse(ev.data);\n            resp = SignalResponse.fromJson(json, { ignoreUnknownFields: true });\n          } else if (ev.data instanceof ArrayBuffer) {\n            resp = SignalResponse.fromBinary(new Uint8Array(ev.data));\n          } else {\n            this.log.error(\n              `could not decode websocket message: ${typeof ev.data}`,\n              this.logContext,\n            );\n            return;\n          }\n\n          if (this.state !== SignalConnectionState.CONNECTED) {\n            let shouldProcessMessage = false;\n            // handle join message only\n            if (resp.message?.case === 'join') {\n              this.state = SignalConnectionState.CONNECTED;\n              abortSignal?.removeEventListener('abort', abortHandler);\n              this.pingTimeoutDuration = resp.message.value.pingTimeout;\n              this.pingIntervalDuration = resp.message.value.pingInterval;\n\n              if (this.pingTimeoutDuration && this.pingTimeoutDuration > 0) {\n                this.log.debug('ping config', {\n                  ...this.logContext,\n                  timeout: this.pingTimeoutDuration,\n                  interval: this.pingIntervalDuration,\n                });\n                this.startPingInterval();\n              }\n              resolve(resp.message.value);\n            } else if (\n              this.state === SignalConnectionState.RECONNECTING &&\n              resp.message.case !== 'leave'\n            ) {\n              // in reconnecting, any message received means signal reconnected\n              this.state = SignalConnectionState.CONNECTED;\n              abortSignal?.removeEventListener('abort', abortHandler);\n              this.startPingInterval();\n              if (resp.message?.case === 'reconnect') {\n                resolve(resp.message.value);\n              } else {\n                this.log.debug(\n                  'declaring signal reconnected without reconnect response received',\n                  this.logContext,\n                );\n                resolve(undefined);\n                shouldProcessMessage = true;\n              }\n            } else if (this.isEstablishingConnection && resp.message.case === 'leave') {\n              reject(\n                new ConnectionError(\n                  'Received leave request while trying to (re)connect',\n                  ConnectionErrorReason.LeaveRequest,\n                  undefined,\n                  resp.message.value.reason,\n                ),\n              );\n            } else if (!opts.reconnect) {\n              // non-reconnect case, should receive join response first\n              reject(\n                new ConnectionError(\n                  `did not receive join response, got ${resp.message?.case} instead`,\n                  ConnectionErrorReason.InternalError,\n                ),\n              );\n            }\n            if (!shouldProcessMessage) {\n              return;\n            }\n          }\n\n          if (this.signalLatency) {\n            await sleep(this.signalLatency);\n          }\n          this.handleSignalResponse(resp);\n        };\n\n        this.ws.onclose = (ev: CloseEvent) => {\n          if (this.isEstablishingConnection) {\n            reject(\n              new ConnectionError(\n                'Websocket got closed during a (re)connection attempt',\n                ConnectionErrorReason.InternalError,\n              ),\n            );\n          }\n\n          this.log.warn(`websocket closed`, {\n            ...this.logContext,\n            reason: ev.reason,\n            code: ev.code,\n            wasClean: ev.wasClean,\n            state: this.state,\n          });\n          this.handleOnClose(ev.reason);\n        };\n      } finally {\n        unlock();\n      }\n    });\n  }\n\n  /** @internal */\n  resetCallbacks = () => {\n    this.onAnswer = undefined;\n    this.onLeave = undefined;\n    this.onLocalTrackPublished = undefined;\n    this.onLocalTrackUnpublished = undefined;\n    this.onNegotiateRequested = undefined;\n    this.onOffer = undefined;\n    this.onRemoteMuteChanged = undefined;\n    this.onSubscribedQualityUpdate = undefined;\n    this.onTokenRefresh = undefined;\n    this.onTrickle = undefined;\n    this.onClose = undefined;\n  };\n\n  async close(updateState: boolean = true) {\n    const unlock = await this.closingLock.lock();\n    try {\n      this.clearPingInterval();\n      if (updateState) {\n        this.state = SignalConnectionState.DISCONNECTING;\n      }\n      if (this.ws) {\n        this.ws.onmessage = null;\n        this.ws.onopen = null;\n        this.ws.onclose = null;\n\n        // calling `ws.close()` only starts the closing handshake (CLOSING state), prefer to wait until state is actually CLOSED\n        const closePromise = new Promise<void>((resolve) => {\n          if (this.ws) {\n            this.ws.onclose = () => {\n              resolve();\n            };\n          } else {\n            resolve();\n          }\n        });\n\n        if (this.ws.readyState < this.ws.CLOSING) {\n          this.ws.close();\n          // 250ms grace period for ws to close gracefully\n          await Promise.race([closePromise, sleep(250)]);\n        }\n        this.ws = undefined;\n      }\n    } finally {\n      if (updateState) {\n        this.state = SignalConnectionState.DISCONNECTED;\n      }\n      unlock();\n    }\n  }\n\n  // initial offer after joining\n  sendOffer(offer: RTCSessionDescriptionInit) {\n    this.log.debug('sending offer', { ...this.logContext, offerSdp: offer.sdp });\n    this.sendRequest({\n      case: 'offer',\n      value: toProtoSessionDescription(offer),\n    });\n  }\n\n  // answer a server-initiated offer\n  sendAnswer(answer: RTCSessionDescriptionInit) {\n    this.log.debug('sending answer', { ...this.logContext, answerSdp: answer.sdp });\n    return this.sendRequest({\n      case: 'answer',\n      value: toProtoSessionDescription(answer),\n    });\n  }\n\n  sendIceCandidate(candidate: RTCIceCandidateInit, target: SignalTarget) {\n    this.log.trace('sending ice candidate', { ...this.logContext, candidate });\n    return this.sendRequest({\n      case: 'trickle',\n      value: new TrickleRequest({\n        candidateInit: JSON.stringify(candidate),\n        target,\n      }),\n    });\n  }\n\n  sendMuteTrack(trackSid: string, muted: boolean) {\n    return this.sendRequest({\n      case: 'mute',\n      value: new MuteTrackRequest({\n        sid: trackSid,\n        muted,\n      }),\n    });\n  }\n\n  sendAddTrack(req: AddTrackRequest) {\n    return this.sendRequest({\n      case: 'addTrack',\n      value: req,\n    });\n  }\n\n  async sendUpdateLocalMetadata(\n    metadata: string,\n    name: string,\n    attributes: Record<string, string> = {},\n  ) {\n    const requestId = this.getNextRequestId();\n    await this.sendRequest({\n      case: 'updateMetadata',\n      value: new UpdateParticipantMetadata({\n        requestId,\n        metadata,\n        name,\n        attributes,\n      }),\n    });\n    return requestId;\n  }\n\n  sendUpdateTrackSettings(settings: UpdateTrackSettings) {\n    this.sendRequest({\n      case: 'trackSetting',\n      value: settings,\n    });\n  }\n\n  sendUpdateSubscription(sub: UpdateSubscription) {\n    return this.sendRequest({\n      case: 'subscription',\n      value: sub,\n    });\n  }\n\n  sendSyncState(sync: SyncState) {\n    return this.sendRequest({\n      case: 'syncState',\n      value: sync,\n    });\n  }\n\n  sendUpdateVideoLayers(trackSid: string, layers: VideoLayer[]) {\n    return this.sendRequest({\n      case: 'updateLayers',\n      value: new UpdateVideoLayers({\n        trackSid,\n        layers,\n      }),\n    });\n  }\n\n  sendUpdateSubscriptionPermissions(allParticipants: boolean, trackPermissions: TrackPermission[]) {\n    return this.sendRequest({\n      case: 'subscriptionPermission',\n      value: new SubscriptionPermission({\n        allParticipants,\n        trackPermissions,\n      }),\n    });\n  }\n\n  sendSimulateScenario(scenario: SimulateScenario) {\n    return this.sendRequest({\n      case: 'simulate',\n      value: scenario,\n    });\n  }\n\n  sendPing() {\n    /** send both of ping and pingReq for compatibility to old and new server */\n    return Promise.all([\n      this.sendRequest({\n        case: 'ping',\n        value: protoInt64.parse(Date.now()),\n      }),\n      this.sendRequest({\n        case: 'pingReq',\n        value: new Ping({\n          timestamp: protoInt64.parse(Date.now()),\n          rtt: protoInt64.parse(this.rtt),\n        }),\n      }),\n    ]);\n  }\n\n  sendUpdateLocalAudioTrack(trackSid: string, features: AudioTrackFeature[]) {\n    return this.sendRequest({\n      case: 'updateAudioTrack',\n      value: new UpdateLocalAudioTrack({ trackSid, features }),\n    });\n  }\n\n  sendLeave() {\n    return this.sendRequest({\n      case: 'leave',\n      value: new LeaveRequest({\n        reason: DisconnectReason.CLIENT_INITIATED,\n        // server doesn't process this field, keeping it here to indicate the intent of a full disconnect\n        action: LeaveRequest_Action.DISCONNECT,\n      }),\n    });\n  }\n\n  async sendRequest(message: SignalMessage, fromQueue: boolean = false) {\n    // capture all requests while reconnecting and put them in a queue\n    // unless the request originates from the queue, then don't enqueue again\n    const canQueue = !fromQueue && !canPassThroughQueue(message);\n    if (canQueue && this.state === SignalConnectionState.RECONNECTING) {\n      this.queuedRequests.push(async () => {\n        await this.sendRequest(message, true);\n      });\n      return;\n    }\n    // make sure previously queued requests are being sent first\n    if (!fromQueue) {\n      await this.requestQueue.flush();\n    }\n    if (this.signalLatency) {\n      await sleep(this.signalLatency);\n    }\n    if (!this.ws || this.ws.readyState !== this.ws.OPEN) {\n      this.log.error(\n        `cannot send signal request before connected, type: ${message?.case}`,\n        this.logContext,\n      );\n      return;\n    }\n    const req = new SignalRequest({ message });\n\n    try {\n      if (this.useJSON) {\n        this.ws.send(req.toJsonString());\n      } else {\n        this.ws.send(req.toBinary());\n      }\n    } catch (e) {\n      this.log.error('error sending signal message', { ...this.logContext, error: e });\n    }\n  }\n\n  private handleSignalResponse(res: SignalResponse) {\n    const msg = res.message;\n    if (msg == undefined) {\n      this.log.debug('received unsupported message', this.logContext);\n      return;\n    }\n\n    let pingHandled = false;\n    if (msg.case === 'answer') {\n      const sd = fromProtoSessionDescription(msg.value);\n      if (this.onAnswer) {\n        this.onAnswer(sd);\n      }\n    } else if (msg.case === 'offer') {\n      const sd = fromProtoSessionDescription(msg.value);\n      if (this.onOffer) {\n        this.onOffer(sd);\n      }\n    } else if (msg.case === 'trickle') {\n      const candidate: RTCIceCandidateInit = JSON.parse(msg.value.candidateInit!);\n      if (this.onTrickle) {\n        this.onTrickle(candidate, msg.value.target);\n      }\n    } else if (msg.case === 'update') {\n      if (this.onParticipantUpdate) {\n        this.onParticipantUpdate(msg.value.participants ?? []);\n      }\n    } else if (msg.case === 'trackPublished') {\n      if (this.onLocalTrackPublished) {\n        this.onLocalTrackPublished(msg.value);\n      }\n    } else if (msg.case === 'speakersChanged') {\n      if (this.onSpeakersChanged) {\n        this.onSpeakersChanged(msg.value.speakers ?? []);\n      }\n    } else if (msg.case === 'leave') {\n      if (this.onLeave) {\n        this.onLeave(msg.value);\n      }\n    } else if (msg.case === 'mute') {\n      if (this.onRemoteMuteChanged) {\n        this.onRemoteMuteChanged(msg.value.sid, msg.value.muted);\n      }\n    } else if (msg.case === 'roomUpdate') {\n      if (this.onRoomUpdate && msg.value.room) {\n        this.onRoomUpdate(msg.value.room);\n      }\n    } else if (msg.case === 'connectionQuality') {\n      if (this.onConnectionQuality) {\n        this.onConnectionQuality(msg.value);\n      }\n    } else if (msg.case === 'streamStateUpdate') {\n      if (this.onStreamStateUpdate) {\n        this.onStreamStateUpdate(msg.value);\n      }\n    } else if (msg.case === 'subscribedQualityUpdate') {\n      if (this.onSubscribedQualityUpdate) {\n        this.onSubscribedQualityUpdate(msg.value);\n      }\n    } else if (msg.case === 'subscriptionPermissionUpdate') {\n      if (this.onSubscriptionPermissionUpdate) {\n        this.onSubscriptionPermissionUpdate(msg.value);\n      }\n    } else if (msg.case === 'refreshToken') {\n      if (this.onTokenRefresh) {\n        this.onTokenRefresh(msg.value);\n      }\n    } else if (msg.case === 'trackUnpublished') {\n      if (this.onLocalTrackUnpublished) {\n        this.onLocalTrackUnpublished(msg.value);\n      }\n    } else if (msg.case === 'subscriptionResponse') {\n      if (this.onSubscriptionError) {\n        this.onSubscriptionError(msg.value);\n      }\n    } else if (msg.case === 'pong') {\n    } else if (msg.case === 'pongResp') {\n      this.rtt = Date.now() - Number.parseInt(msg.value.lastPingTimestamp.toString());\n      this.resetPingTimeout();\n      pingHandled = true;\n    } else if (msg.case === 'requestResponse') {\n      if (this.onRequestResponse) {\n        this.onRequestResponse(msg.value);\n      }\n    } else if (msg.case === 'trackSubscribed') {\n      if (this.onLocalTrackSubscribed) {\n        this.onLocalTrackSubscribed(msg.value.trackSid);\n      }\n    } else {\n      this.log.debug('unsupported message', { ...this.logContext, msgCase: msg.case });\n    }\n\n    if (!pingHandled) {\n      this.resetPingTimeout();\n    }\n  }\n\n  setReconnected() {\n    while (this.queuedRequests.length > 0) {\n      const req = this.queuedRequests.shift();\n      if (req) {\n        this.requestQueue.run(req);\n      }\n    }\n  }\n\n  private async handleOnClose(reason: string) {\n    if (this.state === SignalConnectionState.DISCONNECTED) return;\n    const onCloseCallback = this.onClose;\n    await this.close();\n    this.log.debug(`websocket connection closed: ${reason}`, { ...this.logContext, reason });\n    if (onCloseCallback) {\n      onCloseCallback(reason);\n    }\n  }\n\n  private handleWSError(ev: Event) {\n    this.log.error('websocket error', { ...this.logContext, error: ev });\n  }\n\n  /**\n   * Resets the ping timeout and starts a new timeout.\n   * Call this after receiving a pong message\n   */\n  private resetPingTimeout() {\n    this.clearPingTimeout();\n    if (!this.pingTimeoutDuration) {\n      this.log.warn('ping timeout duration not set', this.logContext);\n      return;\n    }\n    this.pingTimeout = CriticalTimers.setTimeout(() => {\n      this.log.warn(\n        `ping timeout triggered. last pong received at: ${new Date(\n          Date.now() - this.pingTimeoutDuration! * 1000,\n        ).toUTCString()}`,\n        this.logContext,\n      );\n      this.handleOnClose('ping timeout');\n    }, this.pingTimeoutDuration * 1000);\n  }\n\n  /**\n   * Clears ping timeout (does not start a new timeout)\n   */\n  private clearPingTimeout() {\n    if (this.pingTimeout) {\n      CriticalTimers.clearTimeout(this.pingTimeout);\n    }\n  }\n\n  private startPingInterval() {\n    this.clearPingInterval();\n    this.resetPingTimeout();\n    if (!this.pingIntervalDuration) {\n      this.log.warn('ping interval duration not set', this.logContext);\n      return;\n    }\n    this.log.debug('start ping interval', this.logContext);\n    this.pingInterval = CriticalTimers.setInterval(() => {\n      this.sendPing();\n    }, this.pingIntervalDuration * 1000);\n  }\n\n  private clearPingInterval() {\n    this.log.debug('clearing ping interval', this.logContext);\n    this.clearPingTimeout();\n    if (this.pingInterval) {\n      CriticalTimers.clearInterval(this.pingInterval);\n    }\n  }\n}\n\nfunction fromProtoSessionDescription(sd: SessionDescription): RTCSessionDescriptionInit {\n  const rsd: RTCSessionDescriptionInit = {\n    type: 'offer',\n    sdp: sd.sdp,\n  };\n  switch (sd.type) {\n    case 'answer':\n    case 'offer':\n    case 'pranswer':\n    case 'rollback':\n      rsd.type = sd.type;\n      break;\n    default:\n      break;\n  }\n  return rsd;\n}\n\nexport function toProtoSessionDescription(\n  rsd: RTCSessionDescription | RTCSessionDescriptionInit,\n): SessionDescription {\n  const sd = new SessionDescription({\n    sdp: rsd.sdp!,\n    type: rsd.type!,\n  });\n  return sd;\n}\n\nfunction createConnectionParams(token: string, info: ClientInfo, opts: ConnectOpts): string {\n  const params = new URLSearchParams();\n  params.set('access_token', token);\n\n  // opts\n  if (opts.reconnect) {\n    params.set('reconnect', '1');\n    if (opts.sid) {\n      params.set('sid', opts.sid);\n    }\n  }\n\n  params.set('auto_subscribe', opts.autoSubscribe ? '1' : '0');\n\n  // ClientInfo\n  params.set('sdk', isReactNative() ? 'reactnative' : 'js');\n  params.set('version', info.version!);\n  params.set('protocol', info.protocol!.toString());\n  if (info.deviceModel) {\n    params.set('device_model', info.deviceModel);\n  }\n  if (info.os) {\n    params.set('os', info.os);\n  }\n  if (info.osVersion) {\n    params.set('os_version', info.osVersion);\n  }\n  if (info.browser) {\n    params.set('browser', info.browser);\n  }\n  if (info.browserVersion) {\n    params.set('browser_version', info.browserVersion);\n  }\n\n  if (opts.adaptiveStream) {\n    params.set('adaptive_stream', '1');\n  }\n\n  if (opts.reconnectReason) {\n    params.set('reconnect_reason', opts.reconnectReason.toString());\n  }\n\n  // @ts-ignore\n  if (navigator.connection?.type) {\n    // @ts-ignore\n    params.set('network', navigator.connection.type);\n  }\n\n  return `?${params.toString()}`;\n}\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","var parser = require('./parser');\nvar writer = require('./writer');\nvar grammar = require('./grammar');\n\nexports.grammar = grammar;\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","import { EventEmitter } from 'events';\nimport type { MediaDescription, SessionDescription } from 'sdp-transform';\nimport { parse, write } from 'sdp-transform';\nimport { debounce } from 'ts-debounce';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport { NegotiationError, UnexpectedConnectionState } from './errors';\nimport type { LoggerOptions } from './types';\nimport { ddExtensionURI, isSVCCodec } from './utils';\n\n/** @internal */\ninterface TrackBitrateInfo {\n  cid?: string;\n  transceiver?: RTCRtpTransceiver;\n  codec: string;\n  maxbr: number;\n}\n\n/* The svc codec (av1/vp9) would use a very low bitrate at the begining and\nincrease slowly by the bandwidth estimator until it reach the target bitrate. The\nprocess commonly cost more than 10 seconds cause subscriber will get blur video at\nthe first few seconds. So we use a 70% of target bitrate here as the start bitrate to\neliminate this issue.\n*/\nconst startBitrateForSVC = 0.7;\n\nconst debounceInterval = 20;\n\nexport const PCEvents = {\n  NegotiationStarted: 'negotiationStarted',\n  NegotiationComplete: 'negotiationComplete',\n  RTPVideoPayloadTypes: 'rtpVideoPayloadTypes',\n} as const;\n\n/** @internal */\nexport default class PCTransport extends EventEmitter {\n  private _pc: RTCPeerConnection | null;\n\n  private get pc() {\n    if (!this._pc) {\n      this._pc = this.createPC();\n    }\n    return this._pc;\n  }\n\n  private config?: RTCConfiguration;\n\n  private log = log;\n\n  private loggerOptions: LoggerOptions;\n\n  private ddExtID = 0;\n\n  pendingCandidates: RTCIceCandidateInit[] = [];\n\n  restartingIce: boolean = false;\n\n  renegotiate: boolean = false;\n\n  trackBitrates: TrackBitrateInfo[] = [];\n\n  remoteStereoMids: string[] = [];\n\n  remoteNackMids: string[] = [];\n\n  onOffer?: (offer: RTCSessionDescriptionInit) => void;\n\n  onIceCandidate?: (candidate: RTCIceCandidate) => void;\n\n  onIceCandidateError?: (ev: Event) => void;\n\n  onConnectionStateChange?: (state: RTCPeerConnectionState) => void;\n\n  onIceConnectionStateChange?: (state: RTCIceConnectionState) => void;\n\n  onSignalingStatechange?: (state: RTCSignalingState) => void;\n\n  onDataChannel?: (ev: RTCDataChannelEvent) => void;\n\n  onTrack?: (ev: RTCTrackEvent) => void;\n\n  constructor(config?: RTCConfiguration, loggerOptions: LoggerOptions = {}) {\n    super();\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.PCTransport);\n    this.loggerOptions = loggerOptions;\n    this.config = config;\n    this._pc = this.createPC();\n  }\n\n  private createPC() {\n    const pc = new RTCPeerConnection(this.config);\n\n    pc.onicecandidate = (ev) => {\n      if (!ev.candidate) return;\n      this.onIceCandidate?.(ev.candidate);\n    };\n    pc.onicecandidateerror = (ev) => {\n      this.onIceCandidateError?.(ev);\n    };\n\n    pc.oniceconnectionstatechange = () => {\n      this.onIceConnectionStateChange?.(pc.iceConnectionState);\n    };\n\n    pc.onsignalingstatechange = () => {\n      this.onSignalingStatechange?.(pc.signalingState);\n    };\n\n    pc.onconnectionstatechange = () => {\n      this.onConnectionStateChange?.(pc.connectionState);\n    };\n    pc.ondatachannel = (ev) => {\n      this.onDataChannel?.(ev);\n    };\n    pc.ontrack = (ev) => {\n      this.onTrack?.(ev);\n    };\n    return pc;\n  }\n\n  private get logContext() {\n    return {\n      ...this.loggerOptions.loggerContextCb?.(),\n    };\n  }\n\n  get isICEConnected(): boolean {\n    return (\n      this._pc !== null &&\n      (this.pc.iceConnectionState === 'connected' || this.pc.iceConnectionState === 'completed')\n    );\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit): Promise<void> {\n    if (this.pc.remoteDescription && !this.restartingIce) {\n      return this.pc.addIceCandidate(candidate);\n    }\n    this.pendingCandidates.push(candidate);\n  }\n\n  async setRemoteDescription(sd: RTCSessionDescriptionInit): Promise<void> {\n    let mungedSDP: string | undefined = undefined;\n    if (sd.type === 'offer') {\n      let { stereoMids, nackMids } = extractStereoAndNackAudioFromOffer(sd);\n      this.remoteStereoMids = stereoMids;\n      this.remoteNackMids = nackMids;\n    } else if (sd.type === 'answer') {\n      const sdpParsed = parse(sd.sdp ?? '');\n      sdpParsed.media.forEach((media) => {\n        if (media.type === 'audio') {\n          // mung sdp for opus bitrate settings\n          this.trackBitrates.some((trackbr): boolean => {\n            if (!trackbr.transceiver || media.mid != trackbr.transceiver.mid) {\n              return false;\n            }\n\n            let codecPayload = 0;\n            media.rtp.some((rtp): boolean => {\n              if (rtp.codec.toUpperCase() === trackbr.codec.toUpperCase()) {\n                codecPayload = rtp.payload;\n                return true;\n              }\n              return false;\n            });\n\n            if (codecPayload === 0) {\n              return true;\n            }\n\n            let fmtpFound = false;\n            for (const fmtp of media.fmtp) {\n              if (fmtp.payload === codecPayload) {\n                fmtp.config = fmtp.config\n                  .split(';')\n                  .filter((attr) => !attr.includes('maxaveragebitrate'))\n                  .join(';');\n                if (trackbr.maxbr > 0) {\n                  fmtp.config += `;maxaveragebitrate=${trackbr.maxbr * 1000}`;\n                }\n                fmtpFound = true;\n                break;\n              }\n            }\n\n            if (!fmtpFound) {\n              if (trackbr.maxbr > 0) {\n                media.fmtp.push({\n                  payload: codecPayload,\n                  config: `maxaveragebitrate=${trackbr.maxbr * 1000}`,\n                });\n              }\n            }\n\n            return true;\n          });\n        }\n      });\n      mungedSDP = write(sdpParsed);\n    }\n    await this.setMungedSDP(sd, mungedSDP, true);\n\n    this.pendingCandidates.forEach((candidate) => {\n      this.pc.addIceCandidate(candidate);\n    });\n    this.pendingCandidates = [];\n    this.restartingIce = false;\n\n    if (this.renegotiate) {\n      this.renegotiate = false;\n      await this.createAndSendOffer();\n    } else if (sd.type === 'answer') {\n      this.emit(PCEvents.NegotiationComplete);\n      if (sd.sdp) {\n        const sdpParsed = parse(sd.sdp);\n        sdpParsed.media.forEach((media) => {\n          if (media.type === 'video') {\n            this.emit(PCEvents.RTPVideoPayloadTypes, media.rtp);\n          }\n        });\n      }\n    }\n  }\n\n  // debounced negotiate interface\n  negotiate = debounce(async (onError?: (e: Error) => void) => {\n    this.emit(PCEvents.NegotiationStarted);\n    try {\n      await this.createAndSendOffer();\n    } catch (e) {\n      if (onError) {\n        onError(e as Error);\n      } else {\n        throw e;\n      }\n    }\n  }, debounceInterval);\n\n  async createAndSendOffer(options?: RTCOfferOptions) {\n    if (this.onOffer === undefined) {\n      return;\n    }\n\n    if (options?.iceRestart) {\n      this.log.debug('restarting ICE', this.logContext);\n      this.restartingIce = true;\n    }\n\n    if (this._pc && this._pc.signalingState === 'have-local-offer') {\n      // we're waiting for the peer to accept our offer, so we'll just wait\n      // the only exception to this is when ICE restart is needed\n      const currentSD = this._pc.remoteDescription;\n      if (options?.iceRestart && currentSD) {\n        // TODO: handle when ICE restart is needed but we don't have a remote description\n        // the best thing to do is to recreate the peerconnection\n        await this._pc.setRemoteDescription(currentSD);\n      } else {\n        this.renegotiate = true;\n        return;\n      }\n    } else if (!this._pc || this._pc.signalingState === 'closed') {\n      this.log.warn('could not createOffer with closed peer connection', this.logContext);\n      return;\n    }\n\n    // actually negotiate\n    this.log.debug('starting to negotiate', this.logContext);\n    const offer = await this.pc.createOffer(options);\n    this.log.debug('original offer', { sdp: offer.sdp, ...this.logContext });\n\n    const sdpParsed = parse(offer.sdp ?? '');\n    sdpParsed.media.forEach((media) => {\n      ensureIPAddrMatchVersion(media);\n      if (media.type === 'audio') {\n        ensureAudioNackAndStereo(media, [], []);\n      } else if (media.type === 'video') {\n        this.trackBitrates.some((trackbr): boolean => {\n          if (!media.msid || !trackbr.cid || !media.msid.includes(trackbr.cid)) {\n            return false;\n          }\n\n          let codecPayload = 0;\n          media.rtp.some((rtp): boolean => {\n            if (rtp.codec.toUpperCase() === trackbr.codec.toUpperCase()) {\n              codecPayload = rtp.payload;\n              return true;\n            }\n            return false;\n          });\n\n          if (codecPayload === 0) {\n            return true;\n          }\n\n          if (isSVCCodec(trackbr.codec)) {\n            this.ensureVideoDDExtensionForSVC(media, sdpParsed);\n          }\n\n          // TODO: av1 slow starting issue already fixed in chrome 124, clean this after some versions\n          // mung sdp for av1 bitrate setting that can't apply by sendEncoding\n          if (trackbr.codec !== 'av1') {\n            return true;\n          }\n\n          const startBitrate = Math.round(trackbr.maxbr * startBitrateForSVC);\n\n          for (const fmtp of media.fmtp) {\n            if (fmtp.payload === codecPayload) {\n              // if another track's fmtp already is set, we cannot override the bitrate\n              // this has the unfortunate consequence of being forced to use the\n              // initial track's bitrate for all tracks\n              if (!fmtp.config.includes('x-google-start-bitrate')) {\n                fmtp.config += `;x-google-start-bitrate=${startBitrate}`;\n              }\n              break;\n            }\n          }\n          return true;\n        });\n      }\n    });\n\n    await this.setMungedSDP(offer, write(sdpParsed));\n    this.onOffer(offer);\n  }\n\n  async createAndSetAnswer(): Promise<RTCSessionDescriptionInit> {\n    const answer = await this.pc.createAnswer();\n    const sdpParsed = parse(answer.sdp ?? '');\n    sdpParsed.media.forEach((media) => {\n      ensureIPAddrMatchVersion(media);\n      if (media.type === 'audio') {\n        ensureAudioNackAndStereo(media, this.remoteStereoMids, this.remoteNackMids);\n      }\n    });\n    await this.setMungedSDP(answer, write(sdpParsed));\n    return answer;\n  }\n\n  createDataChannel(label: string, dataChannelDict: RTCDataChannelInit) {\n    return this.pc.createDataChannel(label, dataChannelDict);\n  }\n\n  addTransceiver(mediaStreamTrack: MediaStreamTrack, transceiverInit: RTCRtpTransceiverInit) {\n    return this.pc.addTransceiver(mediaStreamTrack, transceiverInit);\n  }\n\n  addTrack(track: MediaStreamTrack) {\n    if (!this._pc) {\n      throw new UnexpectedConnectionState('PC closed, cannot add track');\n    }\n    return this._pc.addTrack(track);\n  }\n\n  setTrackCodecBitrate(info: TrackBitrateInfo) {\n    this.trackBitrates.push(info);\n  }\n\n  setConfiguration(rtcConfig: RTCConfiguration) {\n    if (!this._pc) {\n      throw new UnexpectedConnectionState('PC closed, cannot configure');\n    }\n    return this._pc?.setConfiguration(rtcConfig);\n  }\n\n  canRemoveTrack(): boolean {\n    return !!this._pc?.removeTrack;\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    return this._pc?.removeTrack(sender);\n  }\n\n  getConnectionState() {\n    return this._pc?.connectionState ?? 'closed';\n  }\n\n  getICEConnectionState() {\n    return this._pc?.iceConnectionState ?? 'closed';\n  }\n\n  getSignallingState() {\n    return this._pc?.signalingState ?? 'closed';\n  }\n\n  getTransceivers() {\n    return this._pc?.getTransceivers() ?? [];\n  }\n\n  getSenders() {\n    return this._pc?.getSenders() ?? [];\n  }\n\n  getLocalDescription() {\n    return this._pc?.localDescription;\n  }\n\n  getRemoteDescription() {\n    return this.pc?.remoteDescription;\n  }\n\n  getStats() {\n    return this.pc.getStats();\n  }\n\n  async getConnectedAddress(): Promise<string | undefined> {\n    if (!this._pc) {\n      return;\n    }\n    let selectedCandidatePairId = '';\n    const candidatePairs = new Map<string, RTCIceCandidatePairStats>();\n    // id -> candidate ip\n    const candidates = new Map<string, string>();\n    const stats: RTCStatsReport = await this._pc.getStats();\n    stats.forEach((v) => {\n      switch (v.type) {\n        case 'transport':\n          selectedCandidatePairId = v.selectedCandidatePairId;\n          break;\n        case 'candidate-pair':\n          if (selectedCandidatePairId === '' && v.selected) {\n            selectedCandidatePairId = v.id;\n          }\n          candidatePairs.set(v.id, v);\n          break;\n        case 'remote-candidate':\n          candidates.set(v.id, `${v.address}:${v.port}`);\n          break;\n        default:\n      }\n    });\n\n    if (selectedCandidatePairId === '') {\n      return undefined;\n    }\n    const selectedID = candidatePairs.get(selectedCandidatePairId)?.remoteCandidateId;\n    if (selectedID === undefined) {\n      return undefined;\n    }\n    return candidates.get(selectedID);\n  }\n\n  close = () => {\n    if (!this._pc) {\n      return;\n    }\n    this._pc.close();\n    this._pc.onconnectionstatechange = null;\n    this._pc.oniceconnectionstatechange = null;\n    this._pc.onicegatheringstatechange = null;\n    this._pc.ondatachannel = null;\n    this._pc.onnegotiationneeded = null;\n    this._pc.onsignalingstatechange = null;\n    this._pc.onicecandidate = null;\n    this._pc.ondatachannel = null;\n    this._pc.ontrack = null;\n    this._pc.onconnectionstatechange = null;\n    this._pc.oniceconnectionstatechange = null;\n    this._pc = null;\n  };\n\n  private async setMungedSDP(sd: RTCSessionDescriptionInit, munged?: string, remote?: boolean) {\n    if (munged) {\n      const originalSdp = sd.sdp;\n      sd.sdp = munged;\n      try {\n        this.log.debug(\n          `setting munged ${remote ? 'remote' : 'local'} description`,\n          this.logContext,\n        );\n        if (remote) {\n          await this.pc.setRemoteDescription(sd);\n        } else {\n          await this.pc.setLocalDescription(sd);\n        }\n        return;\n      } catch (e) {\n        this.log.warn(`not able to set ${sd.type}, falling back to unmodified sdp`, {\n          ...this.logContext,\n          error: e,\n          sdp: munged,\n        });\n        sd.sdp = originalSdp;\n      }\n    }\n\n    try {\n      if (remote) {\n        await this.pc.setRemoteDescription(sd);\n      } else {\n        await this.pc.setLocalDescription(sd);\n      }\n    } catch (e) {\n      let msg = 'unknown error';\n      if (e instanceof Error) {\n        msg = e.message;\n      } else if (typeof e === 'string') {\n        msg = e;\n      }\n\n      const fields: any = {\n        error: msg,\n        sdp: sd.sdp,\n      };\n      if (!remote && this.pc.remoteDescription) {\n        fields.remoteSdp = this.pc.remoteDescription;\n      }\n      this.log.error(`unable to set ${sd.type}`, { ...this.logContext, fields });\n      throw new NegotiationError(msg);\n    }\n  }\n\n  private ensureVideoDDExtensionForSVC(\n    media: {\n      type: string;\n      port: number;\n      protocol: string;\n      payloads?: string | undefined;\n    } & MediaDescription,\n    sdp: SessionDescription,\n  ) {\n    const ddFound = media.ext?.some((ext): boolean => {\n      if (ext.uri === ddExtensionURI) {\n        return true;\n      }\n      return false;\n    });\n\n    if (!ddFound) {\n      if (this.ddExtID === 0) {\n        let maxID = 0;\n        sdp.media.forEach((m) => {\n          if (m.type !== 'video') {\n            return;\n          }\n          m.ext?.forEach((ext) => {\n            if (ext.value > maxID) {\n              maxID = ext.value;\n            }\n          });\n        });\n        this.ddExtID = maxID + 1;\n      }\n      media.ext?.push({\n        value: this.ddExtID,\n        uri: ddExtensionURI,\n      });\n    }\n  }\n}\n\nfunction ensureAudioNackAndStereo(\n  media: {\n    type: string;\n    port: number;\n    protocol: string;\n    payloads?: string | undefined;\n  } & MediaDescription,\n  stereoMids: string[],\n  nackMids: string[],\n) {\n  // found opus codec to add nack fb\n  let opusPayload = 0;\n  media.rtp.some((rtp): boolean => {\n    if (rtp.codec === 'opus') {\n      opusPayload = rtp.payload;\n      return true;\n    }\n    return false;\n  });\n\n  // add nack rtcpfb if not exist\n  if (opusPayload > 0) {\n    if (!media.rtcpFb) {\n      media.rtcpFb = [];\n    }\n\n    if (\n      nackMids.includes(media.mid!) &&\n      !media.rtcpFb.some((fb) => fb.payload === opusPayload && fb.type === 'nack')\n    ) {\n      media.rtcpFb.push({\n        payload: opusPayload,\n        type: 'nack',\n      });\n    }\n\n    if (stereoMids.includes(media.mid!)) {\n      media.fmtp.some((fmtp): boolean => {\n        if (fmtp.payload === opusPayload) {\n          if (!fmtp.config.includes('stereo=1')) {\n            fmtp.config += ';stereo=1';\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  }\n}\n\nfunction extractStereoAndNackAudioFromOffer(offer: RTCSessionDescriptionInit): {\n  stereoMids: string[];\n  nackMids: string[];\n} {\n  const stereoMids: string[] = [];\n  const nackMids: string[] = [];\n  const sdpParsed = parse(offer.sdp ?? '');\n  let opusPayload = 0;\n  sdpParsed.media.forEach((media) => {\n    if (media.type === 'audio') {\n      media.rtp.some((rtp): boolean => {\n        if (rtp.codec === 'opus') {\n          opusPayload = rtp.payload;\n          return true;\n        }\n        return false;\n      });\n\n      if (media.rtcpFb?.some((fb) => fb.payload === opusPayload && fb.type === 'nack')) {\n        nackMids.push(media.mid!);\n      }\n\n      media.fmtp.some((fmtp): boolean => {\n        if (fmtp.payload === opusPayload) {\n          if (fmtp.config.includes('sprop-stereo=1')) {\n            stereoMids.push(media.mid!);\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  });\n  return { stereoMids, nackMids };\n}\n\nfunction ensureIPAddrMatchVersion(media: MediaDescription) {\n  // Chrome could generate sdp with c = IN IP4 <ipv6 addr>\n  // in edge case and return error when set sdp.This is not a\n  // sdk error but correct it if the issue detected.\n  if (media.connection) {\n    const isV6 = media.connection.ip.indexOf(':') >= 0;\n    if ((media.connection.version === 4 && isV6) || (media.connection.version === 6 && !isV6)) {\n      // fallback to dummy address\n      media.connection.ip = '0.0.0.0';\n      media.connection.version = 4;\n    }\n  }\n}\n","import type { InternalRoomConnectOptions, InternalRoomOptions } from '../options';\nimport DefaultReconnectPolicy from './DefaultReconnectPolicy';\nimport type {\n  AudioCaptureOptions,\n  TrackPublishDefaults,\n  VideoCaptureOptions,\n} from './track/options';\nimport { AudioPresets, ScreenSharePresets, VideoPresets } from './track/options';\n\nexport const defaultVideoCodec = 'vp8';\n\nexport const publishDefaults: TrackPublishDefaults = {\n  audioPreset: AudioPresets.music,\n  dtx: true,\n  red: true,\n  forceStereo: false,\n  simulcast: true,\n  screenShareEncoding: ScreenSharePresets.h1080fps15.encoding,\n  stopMicTrackOnMute: false,\n  videoCodec: defaultVideoCodec,\n  backupCodec: true,\n} as const;\n\nexport const audioDefaults: AudioCaptureOptions = {\n  deviceId: 'default',\n  autoGainControl: true,\n  echoCancellation: true,\n  noiseSuppression: true,\n  voiceIsolation: true,\n};\n\nexport const videoDefaults: VideoCaptureOptions = {\n  deviceId: 'default',\n  resolution: VideoPresets.h720.resolution,\n};\n\nexport const roomOptionDefaults: InternalRoomOptions = {\n  adaptiveStream: false,\n  dynacast: false,\n  stopLocalTrackOnUnpublish: true,\n  reconnectPolicy: new DefaultReconnectPolicy(),\n  disconnectOnPageLeave: true,\n  webAudioMix: false,\n} as const;\n\nexport const roomConnectOptionDefaults: InternalRoomConnectOptions = {\n  autoSubscribe: true,\n  maxRetries: 1,\n  peerConnectionTimeout: 15_000,\n  websocketTimeout: 15_000,\n} as const;\n","import { Mutex } from '@livekit/mutex';\nimport { SignalTarget } from '@livekit/protocol';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport PCTransport, { PCEvents } from './PCTransport';\nimport { roomConnectOptionDefaults } from './defaults';\nimport { ConnectionError, ConnectionErrorReason } from './errors';\nimport CriticalTimers from './timers';\nimport type { LoggerOptions } from './types';\nimport { sleep } from './utils';\n\nexport enum PCTransportState {\n  NEW,\n  CONNECTING,\n  CONNECTED,\n  FAILED,\n  CLOSING,\n  CLOSED,\n}\n\nexport class PCTransportManager {\n  public publisher: PCTransport;\n\n  public subscriber: PCTransport;\n\n  public peerConnectionTimeout: number = roomConnectOptionDefaults.peerConnectionTimeout;\n\n  public get needsPublisher() {\n    return this.isPublisherConnectionRequired;\n  }\n\n  public get needsSubscriber() {\n    return this.isSubscriberConnectionRequired;\n  }\n\n  public get currentState() {\n    return this.state;\n  }\n\n  public onStateChange?: (\n    state: PCTransportState,\n    pubState: RTCPeerConnectionState,\n    subState: RTCPeerConnectionState,\n  ) => void;\n\n  public onIceCandidate?: (ev: RTCIceCandidate, target: SignalTarget) => void;\n\n  public onDataChannel?: (ev: RTCDataChannelEvent) => void;\n\n  public onTrack?: (ev: RTCTrackEvent) => void;\n\n  public onPublisherOffer?: (offer: RTCSessionDescriptionInit) => void;\n\n  private isPublisherConnectionRequired: boolean;\n\n  private isSubscriberConnectionRequired: boolean;\n\n  private state: PCTransportState;\n\n  private connectionLock: Mutex;\n\n  private remoteOfferLock: Mutex;\n\n  private log = log;\n\n  private loggerOptions: LoggerOptions;\n\n  constructor(\n    rtcConfig: RTCConfiguration,\n    subscriberPrimary: boolean,\n    loggerOptions: LoggerOptions,\n  ) {\n    this.log = getLogger(loggerOptions.loggerName ?? LoggerNames.PCManager);\n    this.loggerOptions = loggerOptions;\n\n    this.isPublisherConnectionRequired = !subscriberPrimary;\n    this.isSubscriberConnectionRequired = subscriberPrimary;\n    this.publisher = new PCTransport(rtcConfig, loggerOptions);\n    this.subscriber = new PCTransport(rtcConfig, loggerOptions);\n\n    this.publisher.onConnectionStateChange = this.updateState;\n    this.subscriber.onConnectionStateChange = this.updateState;\n    this.publisher.onIceConnectionStateChange = this.updateState;\n    this.subscriber.onIceConnectionStateChange = this.updateState;\n    this.publisher.onSignalingStatechange = this.updateState;\n    this.subscriber.onSignalingStatechange = this.updateState;\n    this.publisher.onIceCandidate = (candidate) => {\n      this.onIceCandidate?.(candidate, SignalTarget.PUBLISHER);\n    };\n    this.subscriber.onIceCandidate = (candidate) => {\n      this.onIceCandidate?.(candidate, SignalTarget.SUBSCRIBER);\n    };\n    // in subscriber primary mode, server side opens sub data channels.\n    this.subscriber.onDataChannel = (ev) => {\n      this.onDataChannel?.(ev);\n    };\n    this.subscriber.onTrack = (ev) => {\n      this.onTrack?.(ev);\n    };\n    this.publisher.onOffer = (offer) => {\n      this.onPublisherOffer?.(offer);\n    };\n\n    this.state = PCTransportState.NEW;\n\n    this.connectionLock = new Mutex();\n    this.remoteOfferLock = new Mutex();\n  }\n\n  private get logContext() {\n    return {\n      ...this.loggerOptions.loggerContextCb?.(),\n    };\n  }\n\n  requirePublisher(require = true) {\n    this.isPublisherConnectionRequired = require;\n    this.updateState();\n  }\n\n  requireSubscriber(require = true) {\n    this.isSubscriberConnectionRequired = require;\n    this.updateState();\n  }\n\n  createAndSendPublisherOffer(options?: RTCOfferOptions) {\n    return this.publisher.createAndSendOffer(options);\n  }\n\n  setPublisherAnswer(sd: RTCSessionDescriptionInit) {\n    return this.publisher.setRemoteDescription(sd);\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    return this.publisher.removeTrack(sender);\n  }\n\n  async close() {\n    if (this.publisher && this.publisher.getSignallingState() !== 'closed') {\n      const publisher = this.publisher;\n      for (const sender of publisher.getSenders()) {\n        try {\n          // TODO: react-native-webrtc doesn't have removeTrack yet.\n          if (publisher.canRemoveTrack()) {\n            publisher.removeTrack(sender);\n          }\n        } catch (e) {\n          this.log.warn('could not removeTrack', { ...this.logContext, error: e });\n        }\n      }\n    }\n    await Promise.all([this.publisher.close(), this.subscriber.close()]);\n    this.updateState();\n  }\n\n  async triggerIceRestart() {\n    this.subscriber.restartingIce = true;\n    // only restart publisher if it's needed\n    if (this.needsPublisher) {\n      await this.createAndSendPublisherOffer({ iceRestart: true });\n    }\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit, target: SignalTarget) {\n    if (target === SignalTarget.PUBLISHER) {\n      await this.publisher.addIceCandidate(candidate);\n    } else {\n      await this.subscriber.addIceCandidate(candidate);\n    }\n  }\n\n  async createSubscriberAnswerFromOffer(sd: RTCSessionDescriptionInit) {\n    this.log.debug('received server offer', {\n      ...this.logContext,\n      RTCSdpType: sd.type,\n      sdp: sd.sdp,\n      signalingState: this.subscriber.getSignallingState().toString(),\n    });\n    const unlock = await this.remoteOfferLock.lock();\n    try {\n      await this.subscriber.setRemoteDescription(sd);\n\n      // answer the offer\n      const answer = await this.subscriber.createAndSetAnswer();\n      return answer;\n    } finally {\n      unlock();\n    }\n  }\n\n  updateConfiguration(config: RTCConfiguration, iceRestart?: boolean) {\n    this.publisher.setConfiguration(config);\n    this.subscriber.setConfiguration(config);\n    if (iceRestart) {\n      this.triggerIceRestart();\n    }\n  }\n\n  async ensurePCTransportConnection(abortController?: AbortController, timeout?: number) {\n    const unlock = await this.connectionLock.lock();\n    try {\n      if (\n        this.isPublisherConnectionRequired &&\n        this.publisher.getConnectionState() !== 'connected' &&\n        this.publisher.getConnectionState() !== 'connecting'\n      ) {\n        this.log.debug('negotiation required, start negotiating', this.logContext);\n        this.publisher.negotiate();\n      }\n      await Promise.all(\n        this.requiredTransports?.map((transport) =>\n          this.ensureTransportConnected(transport, abortController, timeout),\n        ),\n      );\n    } finally {\n      unlock();\n    }\n  }\n\n  async negotiate(abortController: AbortController) {\n    return new Promise<void>(async (resolve, reject) => {\n      const negotiationTimeout = setTimeout(() => {\n        reject('negotiation timed out');\n      }, this.peerConnectionTimeout);\n\n      const abortHandler = () => {\n        clearTimeout(negotiationTimeout);\n        reject('negotiation aborted');\n      };\n\n      abortController.signal.addEventListener('abort', abortHandler);\n      this.publisher.once(PCEvents.NegotiationStarted, () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        this.publisher.once(PCEvents.NegotiationComplete, () => {\n          clearTimeout(negotiationTimeout);\n          resolve();\n        });\n      });\n\n      await this.publisher.negotiate((e) => {\n        clearTimeout(negotiationTimeout);\n        reject(e);\n      });\n    });\n  }\n\n  addPublisherTransceiver(track: MediaStreamTrack, transceiverInit: RTCRtpTransceiverInit) {\n    return this.publisher.addTransceiver(track, transceiverInit);\n  }\n\n  addPublisherTrack(track: MediaStreamTrack) {\n    return this.publisher.addTrack(track);\n  }\n\n  createPublisherDataChannel(label: string, dataChannelDict: RTCDataChannelInit) {\n    return this.publisher.createDataChannel(label, dataChannelDict);\n  }\n\n  /**\n   * Returns the first required transport's address if no explicit target is specified\n   */\n  getConnectedAddress(target?: SignalTarget) {\n    if (target === SignalTarget.PUBLISHER) {\n      return this.publisher.getConnectedAddress();\n    } else if (target === SignalTarget.SUBSCRIBER) {\n      return this.publisher.getConnectedAddress();\n    }\n    return this.requiredTransports[0].getConnectedAddress();\n  }\n\n  private get requiredTransports() {\n    const transports: PCTransport[] = [];\n    if (this.isPublisherConnectionRequired) {\n      transports.push(this.publisher);\n    }\n    if (this.isSubscriberConnectionRequired) {\n      transports.push(this.subscriber);\n    }\n    return transports;\n  }\n\n  private updateState = () => {\n    const previousState = this.state;\n\n    const connectionStates = this.requiredTransports.map((tr) => tr.getConnectionState());\n    if (connectionStates.every((st) => st === 'connected')) {\n      this.state = PCTransportState.CONNECTED;\n    } else if (connectionStates.some((st) => st === 'failed')) {\n      this.state = PCTransportState.FAILED;\n    } else if (connectionStates.some((st) => st === 'connecting')) {\n      this.state = PCTransportState.CONNECTING;\n    } else if (connectionStates.every((st) => st === 'closed')) {\n      this.state = PCTransportState.CLOSED;\n    } else if (connectionStates.some((st) => st === 'closed')) {\n      this.state = PCTransportState.CLOSING;\n    } else if (connectionStates.every((st) => st === 'new')) {\n      this.state = PCTransportState.NEW;\n    }\n\n    if (previousState !== this.state) {\n      this.log.debug(\n        `pc state change: from ${PCTransportState[previousState]} to ${\n          PCTransportState[this.state]\n        }`,\n        this.logContext,\n      );\n      this.onStateChange?.(\n        this.state,\n        this.publisher.getConnectionState(),\n        this.subscriber.getConnectionState(),\n      );\n    }\n  };\n\n  private async ensureTransportConnected(\n    pcTransport: PCTransport,\n    abortController?: AbortController,\n    timeout: number = this.peerConnectionTimeout,\n  ) {\n    const connectionState = pcTransport.getConnectionState();\n    if (connectionState === 'connected') {\n      return;\n    }\n\n    return new Promise<void>(async (resolve, reject) => {\n      const abortHandler = () => {\n        this.log.warn('abort transport connection', this.logContext);\n        CriticalTimers.clearTimeout(connectTimeout);\n\n        reject(\n          new ConnectionError(\n            'room connection has been cancelled',\n            ConnectionErrorReason.Cancelled,\n          ),\n        );\n      };\n      if (abortController?.signal.aborted) {\n        abortHandler();\n      }\n      abortController?.signal.addEventListener('abort', abortHandler);\n\n      const connectTimeout = CriticalTimers.setTimeout(() => {\n        abortController?.signal.removeEventListener('abort', abortHandler);\n        reject(\n          new ConnectionError(\n            'could not establish pc connection',\n            ConnectionErrorReason.InternalError,\n          ),\n        );\n      }, timeout);\n\n      while (this.state !== PCTransportState.CONNECTED) {\n        await sleep(50); // FIXME we shouldn't rely on `sleep` in the connection paths, as it invokes `setTimeout` which can be drastically throttled by browser implementations\n        if (abortController?.signal.aborted) {\n          reject(\n            new ConnectionError(\n              'room connection has been cancelled',\n              ConnectionErrorReason.Cancelled,\n            ),\n          );\n          return;\n        }\n      }\n      CriticalTimers.clearTimeout(connectTimeout);\n      abortController?.signal.removeEventListener('abort', abortHandler);\n      resolve();\n    });\n  }\n}\n","export const monitorFrequency = 2000;\n\n// key stats for senders and receivers\ninterface SenderStats {\n  /** number of packets sent */\n  packetsSent?: number;\n\n  /** number of bytes sent */\n  bytesSent?: number;\n\n  /** jitter as perceived by remote */\n  jitter?: number;\n\n  /** packets reported lost by remote */\n  packetsLost?: number;\n\n  /** RTT reported by remote */\n  roundTripTime?: number;\n\n  /** ID of the outbound stream */\n  streamId?: string;\n\n  timestamp: number;\n}\n\nexport interface AudioSenderStats extends SenderStats {\n  type: 'audio';\n}\n\nexport interface VideoSenderStats extends SenderStats {\n  type: 'video';\n\n  firCount: number;\n\n  pliCount: number;\n\n  nackCount: number;\n\n  rid: string;\n\n  frameWidth: number;\n\n  frameHeight: number;\n\n  framesPerSecond: number;\n\n  framesSent: number;\n\n  // bandwidth, cpu, other, none\n  qualityLimitationReason?: string;\n\n  qualityLimitationDurations?: Record<string, number>;\n\n  qualityLimitationResolutionChanges?: number;\n\n  retransmittedPacketsSent?: number;\n\n  targetBitrate: number;\n}\n\ninterface ReceiverStats {\n  jitterBufferDelay?: number;\n\n  /** packets reported lost by remote */\n  packetsLost?: number;\n\n  /** number of packets sent */\n  packetsReceived?: number;\n\n  bytesReceived?: number;\n\n  streamId?: string;\n\n  jitter?: number;\n\n  timestamp: number;\n}\n\nexport interface AudioReceiverStats extends ReceiverStats {\n  type: 'audio';\n\n  concealedSamples?: number;\n\n  concealmentEvents?: number;\n\n  silentConcealedSamples?: number;\n\n  silentConcealmentEvents?: number;\n\n  totalAudioEnergy?: number;\n\n  totalSamplesDuration?: number;\n}\n\nexport interface VideoReceiverStats extends ReceiverStats {\n  type: 'video';\n\n  framesDecoded: number;\n\n  framesDropped: number;\n\n  framesReceived: number;\n\n  frameWidth?: number;\n\n  frameHeight?: number;\n\n  firCount?: number;\n\n  pliCount?: number;\n\n  nackCount?: number;\n\n  decoderImplementation?: string;\n\n  mimeType?: string;\n}\n\nexport function computeBitrate<T extends ReceiverStats | SenderStats>(\n  currentStats: T,\n  prevStats?: T,\n): number {\n  if (!prevStats) {\n    return 0;\n  }\n  let bytesNow: number | undefined;\n  let bytesPrev: number | undefined;\n  if ('bytesReceived' in currentStats) {\n    bytesNow = (currentStats as ReceiverStats).bytesReceived;\n    bytesPrev = (prevStats as ReceiverStats).bytesReceived;\n  } else if ('bytesSent' in currentStats) {\n    bytesNow = (currentStats as SenderStats).bytesSent;\n    bytesPrev = (prevStats as SenderStats).bytesSent;\n  }\n  if (\n    bytesNow === undefined ||\n    bytesPrev === undefined ||\n    currentStats.timestamp === undefined ||\n    prevStats.timestamp === undefined\n  ) {\n    return 0;\n  }\n  return ((bytesNow - bytesPrev) * 8 * 1000) / (currentStats.timestamp - prevStats.timestamp);\n}\n","import { AudioTrackFeature } from '@livekit/protocol';\nimport { TrackEvent } from '../events';\nimport { computeBitrate, monitorFrequency } from '../stats';\nimport type { AudioSenderStats } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { isWeb, unwrapConstraint } from '../utils';\nimport LocalTrack from './LocalTrack';\nimport { Track } from './Track';\nimport type { AudioCaptureOptions } from './options';\nimport type { AudioProcessorOptions, TrackProcessor } from './processor/types';\nimport { constraintsForOptions, detectSilence } from './utils';\n\nexport default class LocalAudioTrack extends LocalTrack<Track.Kind.Audio> {\n  /** @internal */\n  stopOnMute: boolean = false;\n\n  private prevStats?: AudioSenderStats;\n\n  private isKrispNoiseFilterEnabled = false;\n\n  protected processor?: TrackProcessor<Track.Kind.Audio, AudioProcessorOptions> | undefined;\n\n  /**\n   * boolean indicating whether enhanced noise cancellation is currently being used on this track\n   */\n  get enhancedNoiseCancellation() {\n    return this.isKrispNoiseFilterEnabled;\n  }\n\n  /**\n   *\n   * @param mediaTrack\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    constraints?: MediaTrackConstraints,\n    userProvidedTrack = true,\n    audioContext?: AudioContext,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, Track.Kind.Audio, constraints, userProvidedTrack, loggerOptions);\n    this.audioContext = audioContext;\n    this.checkForSilence();\n  }\n\n  async mute(): Promise<typeof this> {\n    const unlock = await this.muteLock.lock();\n    try {\n      if (this.isMuted) {\n        this.log.debug('Track already muted', this.logContext);\n        return this;\n      }\n\n      // disabled special handling as it will cause BT headsets to switch communication modes\n      if (this.source === Track.Source.Microphone && this.stopOnMute && !this.isUserProvided) {\n        this.log.debug('stopping mic track', this.logContext);\n        // also stop the track, so that microphone indicator is turned off\n        this._mediaStreamTrack.stop();\n      }\n      await super.mute();\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  async unmute(): Promise<typeof this> {\n    const unlock = await this.muteLock.lock();\n    try {\n      if (!this.isMuted) {\n        this.log.debug('Track already unmuted', this.logContext);\n        return this;\n      }\n\n      const deviceHasChanged =\n        this._constraints.deviceId &&\n        this._mediaStreamTrack.getSettings().deviceId !==\n          unwrapConstraint(this._constraints.deviceId);\n\n      if (\n        this.source === Track.Source.Microphone &&\n        (this.stopOnMute || this._mediaStreamTrack.readyState === 'ended' || deviceHasChanged) &&\n        !this.isUserProvided\n      ) {\n        this.log.debug('reacquiring mic track', this.logContext);\n        await this.restartTrack();\n      }\n      await super.unmute();\n\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  async restartTrack(options?: AudioCaptureOptions) {\n    let constraints: MediaTrackConstraints | undefined;\n    if (options) {\n      const streamConstraints = constraintsForOptions({ audio: options });\n      if (typeof streamConstraints.audio !== 'boolean') {\n        constraints = streamConstraints.audio;\n      }\n    }\n    await this.restart(constraints);\n  }\n\n  protected async restart(constraints?: MediaTrackConstraints): Promise<typeof this> {\n    const track = await super.restart(constraints);\n    this.checkForSilence();\n    return track;\n  }\n\n  /* @internal */\n  startMonitor() {\n    if (!isWeb()) {\n      return;\n    }\n    if (this.monitorInterval) {\n      return;\n    }\n    this.monitorInterval = setInterval(() => {\n      this.monitorSender();\n    }, monitorFrequency);\n  }\n\n  protected monitorSender = async () => {\n    if (!this.sender) {\n      this._currentBitrate = 0;\n      return;\n    }\n\n    let stats: AudioSenderStats | undefined;\n    try {\n      stats = await this.getSenderStats();\n    } catch (e) {\n      this.log.error('could not get audio sender stats', { ...this.logContext, error: e });\n      return;\n    }\n\n    if (stats && this.prevStats) {\n      this._currentBitrate = computeBitrate(stats, this.prevStats);\n    }\n\n    this.prevStats = stats;\n  };\n\n  private handleKrispNoiseFilterEnable = () => {\n    this.isKrispNoiseFilterEnabled = true;\n    this.log.debug(`Krisp noise filter enabled`, this.logContext);\n    this.emit(\n      TrackEvent.AudioTrackFeatureUpdate,\n      this,\n      AudioTrackFeature.TF_ENHANCED_NOISE_CANCELLATION,\n      true,\n    );\n  };\n\n  private handleKrispNoiseFilterDisable = () => {\n    this.isKrispNoiseFilterEnabled = false;\n    this.log.debug(`Krisp noise filter disabled`, this.logContext);\n    this.emit(\n      TrackEvent.AudioTrackFeatureUpdate,\n      this,\n      AudioTrackFeature.TF_ENHANCED_NOISE_CANCELLATION,\n      false,\n    );\n  };\n\n  async setProcessor(processor: TrackProcessor<Track.Kind.Audio, AudioProcessorOptions>) {\n    const unlock = await this.processorLock.lock();\n    try {\n      if (!this.audioContext) {\n        throw Error(\n          'Audio context needs to be set on LocalAudioTrack in order to enable processors',\n        );\n      }\n      if (this.processor) {\n        await this.stopProcessor();\n      }\n\n      const processorOptions = {\n        kind: this.kind,\n        track: this._mediaStreamTrack,\n        audioContext: this.audioContext,\n      };\n      this.log.debug(`setting up audio processor ${processor.name}`, this.logContext);\n\n      await processor.init(processorOptions);\n      this.processor = processor;\n      if (this.processor.processedTrack) {\n        await this.sender?.replaceTrack(this.processor.processedTrack);\n        this.processor.processedTrack.addEventListener(\n          'enable-lk-krisp-noise-filter',\n          this.handleKrispNoiseFilterEnable,\n        );\n        this.processor.processedTrack.addEventListener(\n          'disable-lk-krisp-noise-filter',\n          this.handleKrispNoiseFilterDisable,\n        );\n      }\n      this.emit(TrackEvent.TrackProcessorUpdate, this.processor);\n    } finally {\n      unlock();\n    }\n  }\n\n  /**\n   * @internal\n   * @experimental\n   */\n  setAudioContext(audioContext: AudioContext | undefined) {\n    this.audioContext = audioContext;\n  }\n\n  async getSenderStats(): Promise<AudioSenderStats | undefined> {\n    if (!this.sender?.getStats) {\n      return undefined;\n    }\n\n    const stats = await this.sender.getStats();\n    let audioStats: AudioSenderStats | undefined;\n    stats.forEach((v) => {\n      if (v.type === 'outbound-rtp') {\n        audioStats = {\n          type: 'audio',\n          streamId: v.id,\n          packetsSent: v.packetsSent,\n          packetsLost: v.packetsLost,\n          bytesSent: v.bytesSent,\n          timestamp: v.timestamp,\n          roundTripTime: v.roundTripTime,\n          jitter: v.jitter,\n        };\n      }\n    });\n\n    return audioStats;\n  }\n\n  async checkForSilence() {\n    const trackIsSilent = await detectSilence(this);\n    if (trackIsSilent) {\n      if (!this.isMuted) {\n        this.log.warn('silence detected on local audio track', this.logContext);\n      }\n      this.emit(TrackEvent.AudioSilenceDetected);\n    }\n    return trackIsSilent;\n  }\n}\n","import log from '../../logger';\nimport { getBrowser } from '../../utils/browserParser';\nimport { TrackInvalidError } from '../errors';\nimport LocalAudioTrack from '../track/LocalAudioTrack';\nimport LocalVideoTrack from '../track/LocalVideoTrack';\nimport { Track } from '../track/Track';\nimport type {\n  BackupVideoCodec,\n  TrackPublishOptions,\n  VideoCodec,\n  VideoEncoding,\n} from '../track/options';\nimport { ScreenSharePresets, VideoPreset, VideoPresets, VideoPresets43 } from '../track/options';\nimport type { LoggerOptions } from '../types';\nimport {\n  compareVersions,\n  getReactNativeOs,\n  isFireFox,\n  isReactNative,\n  isSVCCodec,\n  isSafari,\n  unwrapConstraint,\n} from '../utils';\n\n/** @internal */\nexport function mediaTrackToLocalTrack(\n  mediaStreamTrack: MediaStreamTrack,\n  constraints?: MediaTrackConstraints,\n  loggerOptions?: LoggerOptions,\n): LocalVideoTrack | LocalAudioTrack {\n  switch (mediaStreamTrack.kind) {\n    case 'audio':\n      return new LocalAudioTrack(mediaStreamTrack, constraints, false, undefined, loggerOptions);\n    case 'video':\n      return new LocalVideoTrack(mediaStreamTrack, constraints, false, loggerOptions);\n    default:\n      throw new TrackInvalidError(`unsupported track type: ${mediaStreamTrack.kind}`);\n  }\n}\n\n/* @internal */\nexport const presets169 = Object.values(VideoPresets);\n\n/* @internal */\nexport const presets43 = Object.values(VideoPresets43);\n\n/* @internal */\nexport const presetsScreenShare = Object.values(ScreenSharePresets);\n\n/* @internal */\nexport const defaultSimulcastPresets169 = [VideoPresets.h180, VideoPresets.h360];\n\n/* @internal */\nexport const defaultSimulcastPresets43 = [VideoPresets43.h180, VideoPresets43.h360];\n\n/* @internal */\nexport const computeDefaultScreenShareSimulcastPresets = (fromPreset: VideoPreset) => {\n  const layers = [{ scaleResolutionDownBy: 2, fps: fromPreset.encoding.maxFramerate }];\n  return layers.map(\n    (t) =>\n      new VideoPreset(\n        Math.floor(fromPreset.width / t.scaleResolutionDownBy),\n        Math.floor(fromPreset.height / t.scaleResolutionDownBy),\n        Math.max(\n          150_000,\n          Math.floor(\n            fromPreset.encoding.maxBitrate /\n              (t.scaleResolutionDownBy ** 2 *\n                ((fromPreset.encoding.maxFramerate ?? 30) / (t.fps ?? 30))),\n          ),\n        ),\n        t.fps,\n        fromPreset.encoding.priority,\n      ),\n  );\n};\n\n// /**\n//  *\n//  * @internal\n//  * @experimental\n//  */\n// const computeDefaultMultiCodecSimulcastEncodings = (width: number, height: number) => {\n//   // use vp8 as a default\n//   const vp8 = determineAppropriateEncoding(false, width, height);\n//   const vp9 = { ...vp8, maxBitrate: vp8.maxBitrate * 0.9 };\n//   const h264 = { ...vp8, maxBitrate: vp8.maxBitrate * 1.1 };\n//   const av1 = { ...vp8, maxBitrate: vp8.maxBitrate * 0.7 };\n//   return {\n//     vp8,\n//     vp9,\n//     h264,\n//     av1,\n//   };\n// };\n\nconst videoRids = ['q', 'h', 'f'];\n\n/* @internal */\nexport function computeVideoEncodings(\n  isScreenShare: boolean,\n  width?: number,\n  height?: number,\n  options?: TrackPublishOptions,\n): RTCRtpEncodingParameters[] {\n  let videoEncoding: VideoEncoding | undefined = options?.videoEncoding;\n\n  if (isScreenShare) {\n    videoEncoding = options?.screenShareEncoding;\n  }\n\n  const useSimulcast = options?.simulcast;\n  const scalabilityMode = options?.scalabilityMode;\n  const videoCodec = options?.videoCodec;\n\n  if ((!videoEncoding && !useSimulcast && !scalabilityMode) || !width || !height) {\n    // when we aren't simulcasting or svc, will need to return a single encoding without\n    // capping bandwidth. we always require a encoding for dynacast\n    return [{}];\n  }\n\n  if (!videoEncoding) {\n    // find the right encoding based on width/height\n    videoEncoding = determineAppropriateEncoding(isScreenShare, width, height, videoCodec);\n    log.debug('using video encoding', videoEncoding);\n  }\n\n  const sourceFramerate = videoEncoding.maxFramerate;\n\n  const original = new VideoPreset(\n    width,\n    height,\n    videoEncoding.maxBitrate,\n    videoEncoding.maxFramerate,\n    videoEncoding.priority,\n  );\n\n  if (scalabilityMode && isSVCCodec(videoCodec)) {\n    const sm = new ScalabilityMode(scalabilityMode);\n\n    const encodings: RTCRtpEncodingParameters[] = [];\n\n    if (sm.spatial > 3) {\n      throw new Error(`unsupported scalabilityMode: ${scalabilityMode}`);\n    }\n    // Before M113 in Chrome, defining multiple encodings with an SVC codec indicated\n    // that SVC mode should be used. Safari still works this way.\n    // This is a bit confusing but is due to how libwebrtc interpreted the encodings field\n    // before M113.\n    // Announced here: https://groups.google.com/g/discuss-webrtc/c/-QQ3pxrl-fw?pli=1\n    const browser = getBrowser();\n    if (\n      isSafari() ||\n      // Even tho RN runs M114, it does not produce SVC layers when a single encoding\n      // is provided. So we'll use the legacy SVC specification for now.\n      // TODO: when we upstream libwebrtc, this will need additional verification\n      isReactNative() ||\n      (browser?.name === 'Chrome' && compareVersions(browser?.version, '113') < 0)\n    ) {\n      const bitratesRatio = sm.suffix == 'h' ? 2 : 3;\n      for (let i = 0; i < sm.spatial; i += 1) {\n        // in legacy SVC, scaleResolutionDownBy cannot be set\n        encodings.push({\n          rid: videoRids[2 - i],\n          maxBitrate: videoEncoding.maxBitrate / bitratesRatio ** i,\n          maxFramerate: original.encoding.maxFramerate,\n        });\n      }\n      // legacy SVC, scalabilityMode is set only on the first encoding\n      /* @ts-ignore */\n      encodings[0].scalabilityMode = scalabilityMode;\n    } else {\n      encodings.push({\n        maxBitrate: videoEncoding.maxBitrate,\n        maxFramerate: original.encoding.maxFramerate,\n        /* @ts-ignore */\n        scalabilityMode: scalabilityMode,\n      });\n    }\n\n    if (original.encoding.priority) {\n      encodings[0].priority = original.encoding.priority;\n      encodings[0].networkPriority = original.encoding.priority;\n    }\n\n    log.debug(`using svc encoding`, { encodings });\n    return encodings;\n  }\n\n  if (!useSimulcast) {\n    return [videoEncoding];\n  }\n\n  let presets: Array<VideoPreset> = [];\n  if (isScreenShare) {\n    presets =\n      sortPresets(options?.screenShareSimulcastLayers) ??\n      defaultSimulcastLayers(isScreenShare, original);\n  } else {\n    presets =\n      sortPresets(options?.videoSimulcastLayers) ?? defaultSimulcastLayers(isScreenShare, original);\n  }\n  let midPreset: VideoPreset | undefined;\n  if (presets.length > 0) {\n    const lowPreset = presets[0];\n    if (presets.length > 1) {\n      [, midPreset] = presets;\n    }\n\n    // NOTE:\n    //   1. Ordering of these encodings is important. Chrome seems\n    //      to use the index into encodings to decide which layer\n    //      to disable when CPU constrained.\n    //      So encodings should be ordered in increasing spatial\n    //      resolution order.\n    //   2. livekit-server translates rids into layers. So, all encodings\n    //      should have the base layer `q` and then more added\n    //      based on other conditions.\n    const size = Math.max(width, height);\n    if (size >= 960 && midPreset) {\n      return encodingsFromPresets(width, height, [lowPreset, midPreset, original], sourceFramerate);\n    }\n    if (size >= 480) {\n      return encodingsFromPresets(width, height, [lowPreset, original], sourceFramerate);\n    }\n  }\n  return encodingsFromPresets(width, height, [original]);\n}\n\nexport function computeTrackBackupEncodings(\n  track: LocalVideoTrack,\n  videoCodec: BackupVideoCodec,\n  opts: TrackPublishOptions,\n) {\n  // backupCodec should not be true anymore, default codec is set in LocalParticipant.publish\n  if (\n    !opts.backupCodec ||\n    opts.backupCodec === true ||\n    opts.backupCodec.codec === opts.videoCodec\n  ) {\n    // backup codec publishing is disabled\n    return;\n  }\n  if (videoCodec !== opts.backupCodec.codec) {\n    log.warn('requested a different codec than specified as backup', {\n      serverRequested: videoCodec,\n      backup: opts.backupCodec.codec,\n    });\n  }\n\n  opts.videoCodec = videoCodec;\n  // use backup encoding setting as videoEncoding for backup codec publishing\n  opts.videoEncoding = opts.backupCodec.encoding;\n\n  const settings = track.mediaStreamTrack.getSettings();\n  const width = settings.width ?? track.dimensions?.width;\n  const height = settings.height ?? track.dimensions?.height;\n\n  const encodings = computeVideoEncodings(\n    track.source === Track.Source.ScreenShare,\n    width,\n    height,\n    opts,\n  );\n  return encodings;\n}\n\n/* @internal */\nexport function determineAppropriateEncoding(\n  isScreenShare: boolean,\n  width: number,\n  height: number,\n  codec?: VideoCodec,\n): VideoEncoding {\n  const presets = presetsForResolution(isScreenShare, width, height);\n  let { encoding } = presets[0];\n\n  // handle portrait by swapping dimensions\n  const size = Math.max(width, height);\n\n  for (let i = 0; i < presets.length; i += 1) {\n    const preset = presets[i];\n    encoding = preset.encoding;\n    if (preset.width >= size) {\n      break;\n    }\n  }\n\n  // presets are based on the assumption of vp8 as a codec\n  // for other codecs we adjust the maxBitrate if no specific videoEncoding has been provided\n  // users should override these with ones that are optimized for their use case\n  // NOTE: SVC codec bitrates are inclusive of all scalability layers. while\n  // bitrate for non-SVC codecs does not include other simulcast layers.\n  if (codec) {\n    switch (codec) {\n      case 'av1':\n        encoding = { ...encoding };\n        encoding.maxBitrate = encoding.maxBitrate * 0.7;\n        break;\n      case 'vp9':\n        encoding = { ...encoding };\n        encoding.maxBitrate = encoding.maxBitrate * 0.85;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return encoding;\n}\n\n/* @internal */\nexport function presetsForResolution(\n  isScreenShare: boolean,\n  width: number,\n  height: number,\n): VideoPreset[] {\n  if (isScreenShare) {\n    return presetsScreenShare;\n  }\n  const aspect = width > height ? width / height : height / width;\n  if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n    return presets169;\n  }\n  return presets43;\n}\n\n/* @internal */\nexport function defaultSimulcastLayers(\n  isScreenShare: boolean,\n  original: VideoPreset,\n): VideoPreset[] {\n  if (isScreenShare) {\n    return computeDefaultScreenShareSimulcastPresets(original);\n  }\n  const { width, height } = original;\n  const aspect = width > height ? width / height : height / width;\n  if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n    return defaultSimulcastPresets169;\n  }\n  return defaultSimulcastPresets43;\n}\n\n// presets should be ordered by low, medium, high\nfunction encodingsFromPresets(\n  width: number,\n  height: number,\n  presets: VideoPreset[],\n  sourceFramerate?: number | undefined,\n): RTCRtpEncodingParameters[] {\n  const encodings: RTCRtpEncodingParameters[] = [];\n  presets.forEach((preset, idx) => {\n    if (idx >= videoRids.length) {\n      return;\n    }\n    const size = Math.min(width, height);\n    const rid = videoRids[idx];\n\n    const encoding: RTCRtpEncodingParameters = {\n      rid,\n      scaleResolutionDownBy: Math.max(1, size / Math.min(preset.width, preset.height)),\n      maxBitrate: preset.encoding.maxBitrate,\n    };\n    // ensure that the sourceFramerate is the highest framerate applied across all layers so that the\n    // original encoding doesn't get bumped unintentionally by any of the other layers\n    const maxFramerate =\n      sourceFramerate && preset.encoding.maxFramerate\n        ? Math.min(sourceFramerate, preset.encoding.maxFramerate)\n        : preset.encoding.maxFramerate;\n    if (maxFramerate) {\n      encoding.maxFramerate = maxFramerate;\n    }\n    const canSetPriority = isFireFox() || idx === 0;\n    if (preset.encoding.priority && canSetPriority) {\n      encoding.priority = preset.encoding.priority;\n      encoding.networkPriority = preset.encoding.priority;\n    }\n    encodings.push(encoding);\n  });\n\n  // RN ios simulcast requires all same framerates.\n  if (isReactNative() && getReactNativeOs() === 'ios') {\n    let topFramerate: number | undefined = undefined;\n    encodings.forEach((encoding) => {\n      if (!topFramerate) {\n        topFramerate = encoding.maxFramerate;\n      } else if (encoding.maxFramerate && encoding.maxFramerate > topFramerate) {\n        topFramerate = encoding.maxFramerate;\n      }\n    });\n\n    let notifyOnce = true;\n    encodings.forEach((encoding) => {\n      if (encoding.maxFramerate != topFramerate) {\n        if (notifyOnce) {\n          notifyOnce = false;\n          log.info(\n            `Simulcast on iOS React-Native requires all encodings to share the same framerate.`,\n          );\n        }\n        log.info(`Setting framerate of encoding \\\"${encoding.rid ?? ''}\\\" to ${topFramerate}`);\n        encoding.maxFramerate = topFramerate;\n      }\n    });\n  }\n\n  return encodings;\n}\n\n/** @internal */\nexport function sortPresets(presets: Array<VideoPreset> | undefined) {\n  if (!presets) return;\n  return presets.sort((a, b) => {\n    const { encoding: aEnc } = a;\n    const { encoding: bEnc } = b;\n\n    if (aEnc.maxBitrate > bEnc.maxBitrate) {\n      return 1;\n    }\n    if (aEnc.maxBitrate < bEnc.maxBitrate) return -1;\n    if (aEnc.maxBitrate === bEnc.maxBitrate && aEnc.maxFramerate && bEnc.maxFramerate) {\n      return aEnc.maxFramerate > bEnc.maxFramerate ? 1 : -1;\n    }\n    return 0;\n  });\n}\n\n/** @internal */\nexport class ScalabilityMode {\n  spatial: number;\n\n  temporal: number;\n\n  suffix: undefined | 'h' | '_KEY' | '_KEY_SHIFT';\n\n  constructor(scalabilityMode: string) {\n    const results = scalabilityMode.match(/^L(\\d)T(\\d)(h|_KEY|_KEY_SHIFT){0,1}$/);\n    if (!results) {\n      throw new Error('invalid scalability mode');\n    }\n\n    this.spatial = parseInt(results[1]);\n    this.temporal = parseInt(results[2]);\n    if (results.length > 3) {\n      switch (results[3]) {\n        case 'h':\n        case '_KEY':\n        case '_KEY_SHIFT':\n          this.suffix = results[3];\n      }\n    }\n  }\n\n  toString(): string {\n    return `L${this.spatial}T${this.temporal}${this.suffix ?? ''}`;\n  }\n}\n\nexport function getDefaultDegradationPreference(track: LocalVideoTrack): RTCDegradationPreference {\n  // a few of reasons we have different default paths:\n  // 1. without this, Chrome seems to aggressively resize the SVC video stating `quality-limitation: bandwidth` even when BW isn't an issue\n  // 2. since we are overriding contentHint to motion (to workaround L1T3 publishing), it overrides the default degradationPreference to `balanced`\n  if (\n    track.source === Track.Source.ScreenShare ||\n    (track.constraints.height && unwrapConstraint(track.constraints.height) >= 1080)\n  ) {\n    return 'maintain-resolution';\n  } else {\n    return 'balanced';\n  }\n}\n","import { Mutex } from '@livekit/mutex';\nimport {\n  VideoQuality as ProtoVideoQuality,\n  SubscribedCodec,\n  SubscribedQuality,\n  VideoLayer,\n} from '@livekit/protocol';\nimport type { SignalClient } from '../../api/SignalClient';\nimport type { StructuredLogger } from '../../logger';\nimport { ScalabilityMode } from '../participant/publishUtils';\nimport type { VideoSenderStats } from '../stats';\nimport { computeBitrate, monitorFrequency } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { isFireFox, isMobile, isWeb } from '../utils';\nimport LocalTrack from './LocalTrack';\nimport { Track, VideoQuality } from './Track';\nimport type { VideoCaptureOptions, VideoCodec } from './options';\nimport type { TrackProcessor } from './processor/types';\nimport { constraintsForOptions } from './utils';\n\nexport class SimulcastTrackInfo {\n  codec: VideoCodec;\n\n  mediaStreamTrack: MediaStreamTrack;\n\n  sender?: RTCRtpSender;\n\n  encodings?: RTCRtpEncodingParameters[];\n\n  constructor(codec: VideoCodec, mediaStreamTrack: MediaStreamTrack) {\n    this.codec = codec;\n    this.mediaStreamTrack = mediaStreamTrack;\n  }\n}\n\nconst refreshSubscribedCodecAfterNewCodec = 5000;\n\nexport default class LocalVideoTrack extends LocalTrack<Track.Kind.Video> {\n  /* @internal */\n  signalClient?: SignalClient;\n\n  private prevStats?: Map<string, VideoSenderStats>;\n\n  private encodings?: RTCRtpEncodingParameters[];\n\n  /* @internal */\n  simulcastCodecs: Map<VideoCodec, SimulcastTrackInfo> = new Map<VideoCodec, SimulcastTrackInfo>();\n\n  private subscribedCodecs?: SubscribedCodec[];\n\n  // prevents concurrent manipulations to track sender\n  // if multiple get/setParameter are called concurrently, certain timing of events\n  // could lead to the browser throwing an exception in `setParameter`, due to\n  // a missing `getParameter` call.\n  private senderLock: Mutex;\n\n  private degradationPreference: RTCDegradationPreference = 'balanced';\n\n  get sender(): RTCRtpSender | undefined {\n    return this._sender;\n  }\n\n  set sender(sender: RTCRtpSender | undefined) {\n    this._sender = sender;\n    if (this.degradationPreference) {\n      this.setDegradationPreference(this.degradationPreference);\n    }\n  }\n\n  /**\n   *\n   * @param mediaTrack\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    constraints?: MediaTrackConstraints,\n    userProvidedTrack = true,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, Track.Kind.Video, constraints, userProvidedTrack, loggerOptions);\n    this.senderLock = new Mutex();\n  }\n\n  get isSimulcast(): boolean {\n    if (this.sender && this.sender.getParameters().encodings.length > 1) {\n      return true;\n    }\n    return false;\n  }\n\n  /* @internal */\n  startMonitor(signalClient: SignalClient) {\n    this.signalClient = signalClient;\n    if (!isWeb()) {\n      return;\n    }\n    // save original encodings\n    // TODO : merge simulcast tracks stats\n    const params = this.sender?.getParameters();\n    if (params) {\n      this.encodings = params.encodings;\n    }\n\n    if (this.monitorInterval) {\n      return;\n    }\n    this.monitorInterval = setInterval(() => {\n      this.monitorSender();\n    }, monitorFrequency);\n  }\n\n  stop() {\n    this._mediaStreamTrack.getConstraints();\n    this.simulcastCodecs.forEach((trackInfo) => {\n      trackInfo.mediaStreamTrack.stop();\n    });\n    super.stop();\n  }\n\n  async pauseUpstream() {\n    await super.pauseUpstream();\n    for await (const sc of this.simulcastCodecs.values()) {\n      await sc.sender?.replaceTrack(null);\n    }\n  }\n\n  async resumeUpstream() {\n    await super.resumeUpstream();\n    for await (const sc of this.simulcastCodecs.values()) {\n      await sc.sender?.replaceTrack(sc.mediaStreamTrack);\n    }\n  }\n\n  async mute(): Promise<typeof this> {\n    const unlock = await this.muteLock.lock();\n    try {\n      if (this.isMuted) {\n        this.log.debug('Track already muted', this.logContext);\n        return this;\n      }\n\n      if (this.source === Track.Source.Camera && !this.isUserProvided) {\n        this.log.debug('stopping camera track', this.logContext);\n        // also stop the track, so that camera indicator is turned off\n        this._mediaStreamTrack.stop();\n      }\n      await super.mute();\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  async unmute(): Promise<typeof this> {\n    const unlock = await this.muteLock.lock();\n    try {\n      if (!this.isMuted) {\n        this.log.debug('Track already unmuted', this.logContext);\n        return this;\n      }\n\n      if (this.source === Track.Source.Camera && !this.isUserProvided) {\n        this.log.debug('reacquiring camera track', this.logContext);\n        await this.restartTrack();\n      }\n      await super.unmute();\n      return this;\n    } finally {\n      unlock();\n    }\n  }\n\n  protected setTrackMuted(muted: boolean) {\n    super.setTrackMuted(muted);\n    for (const sc of this.simulcastCodecs.values()) {\n      sc.mediaStreamTrack.enabled = !muted;\n    }\n  }\n\n  async getSenderStats(): Promise<VideoSenderStats[]> {\n    if (!this.sender?.getStats) {\n      return [];\n    }\n\n    const items: VideoSenderStats[] = [];\n\n    const stats = await this.sender.getStats();\n    stats.forEach((v) => {\n      if (v.type === 'outbound-rtp') {\n        const vs: VideoSenderStats = {\n          type: 'video',\n          streamId: v.id,\n          frameHeight: v.frameHeight,\n          frameWidth: v.frameWidth,\n          framesPerSecond: v.framesPerSecond,\n          framesSent: v.framesSent,\n          firCount: v.firCount,\n          pliCount: v.pliCount,\n          nackCount: v.nackCount,\n          packetsSent: v.packetsSent,\n          bytesSent: v.bytesSent,\n          qualityLimitationReason: v.qualityLimitationReason,\n          qualityLimitationDurations: v.qualityLimitationDurations,\n          qualityLimitationResolutionChanges: v.qualityLimitationResolutionChanges,\n          rid: v.rid ?? v.id,\n          retransmittedPacketsSent: v.retransmittedPacketsSent,\n          targetBitrate: v.targetBitrate,\n          timestamp: v.timestamp,\n        };\n\n        // locate the appropriate remote-inbound-rtp item\n        const r = stats.get(v.remoteId);\n        if (r) {\n          vs.jitter = r.jitter;\n          vs.packetsLost = r.packetsLost;\n          vs.roundTripTime = r.roundTripTime;\n        }\n\n        items.push(vs);\n      }\n    });\n\n    // make sure highest res layer is always first\n    items.sort((a, b) => (b.frameWidth ?? 0) - (a.frameWidth ?? 0));\n    return items;\n  }\n\n  setPublishingQuality(maxQuality: VideoQuality) {\n    const qualities: SubscribedQuality[] = [];\n    for (let q = VideoQuality.LOW; q <= VideoQuality.HIGH; q += 1) {\n      qualities.push(\n        new SubscribedQuality({\n          quality: q,\n          enabled: q <= maxQuality,\n        }),\n      );\n    }\n    this.log.debug(`setting publishing quality. max quality ${maxQuality}`, this.logContext);\n    this.setPublishingLayers(qualities);\n  }\n\n  async restartTrack(options?: VideoCaptureOptions) {\n    let constraints: MediaTrackConstraints | undefined;\n    if (options) {\n      const streamConstraints = constraintsForOptions({ video: options });\n      if (typeof streamConstraints.video !== 'boolean') {\n        constraints = streamConstraints.video;\n      }\n    }\n    await this.restart(constraints);\n\n    for await (const sc of this.simulcastCodecs.values()) {\n      if (sc.sender) {\n        sc.mediaStreamTrack = this.mediaStreamTrack.clone();\n        await sc.sender.replaceTrack(sc.mediaStreamTrack);\n      }\n    }\n  }\n\n  async setProcessor(\n    processor: TrackProcessor<Track.Kind.Video>,\n    showProcessedStreamLocally = true,\n  ) {\n    await super.setProcessor(processor, showProcessedStreamLocally);\n\n    if (this.processor?.processedTrack) {\n      for await (const sc of this.simulcastCodecs.values()) {\n        await sc.sender?.replaceTrack(this.processor.processedTrack);\n      }\n    }\n  }\n\n  async setDegradationPreference(preference: RTCDegradationPreference) {\n    this.degradationPreference = preference;\n    if (this.sender) {\n      try {\n        this.log.debug(`setting degradationPreference to ${preference}`, this.logContext);\n        const params = this.sender.getParameters();\n        params.degradationPreference = preference;\n        this.sender.setParameters(params);\n      } catch (e: any) {\n        this.log.warn(`failed to set degradationPreference`, { error: e, ...this.logContext });\n      }\n    }\n  }\n\n  addSimulcastTrack(\n    codec: VideoCodec,\n    encodings?: RTCRtpEncodingParameters[],\n  ): SimulcastTrackInfo | undefined {\n    if (this.simulcastCodecs.has(codec)) {\n      this.log.error(`${codec} already added, skipping adding simulcast codec`, this.logContext);\n      return;\n    }\n    const simulcastCodecInfo: SimulcastTrackInfo = {\n      codec,\n      mediaStreamTrack: this.mediaStreamTrack.clone(),\n      sender: undefined,\n      encodings,\n    };\n    this.simulcastCodecs.set(codec, simulcastCodecInfo);\n    return simulcastCodecInfo;\n  }\n\n  setSimulcastTrackSender(codec: VideoCodec, sender: RTCRtpSender) {\n    const simulcastCodecInfo = this.simulcastCodecs.get(codec);\n    if (!simulcastCodecInfo) {\n      return;\n    }\n    simulcastCodecInfo.sender = sender;\n\n    // browser will reenable disabled codec/layers after new codec has been published,\n    // so refresh subscribedCodecs after publish a new codec\n    setTimeout(() => {\n      if (this.subscribedCodecs) {\n        this.setPublishingCodecs(this.subscribedCodecs);\n      }\n    }, refreshSubscribedCodecAfterNewCodec);\n  }\n\n  /**\n   * @internal\n   * Sets codecs that should be publishing, returns new codecs that have not yet\n   * been published\n   */\n  async setPublishingCodecs(codecs: SubscribedCodec[]): Promise<VideoCodec[]> {\n    this.log.debug('setting publishing codecs', {\n      ...this.logContext,\n      codecs,\n      currentCodec: this.codec,\n    });\n    // only enable simulcast codec for preference codec setted\n    if (!this.codec && codecs.length > 0) {\n      await this.setPublishingLayers(codecs[0].qualities);\n      return [];\n    }\n\n    this.subscribedCodecs = codecs;\n\n    const newCodecs: VideoCodec[] = [];\n    for await (const codec of codecs) {\n      if (!this.codec || this.codec === codec.codec) {\n        await this.setPublishingLayers(codec.qualities);\n      } else {\n        const simulcastCodecInfo = this.simulcastCodecs.get(codec.codec as VideoCodec);\n        this.log.debug(`try setPublishingCodec for ${codec.codec}`, {\n          ...this.logContext,\n          simulcastCodecInfo,\n        });\n        if (!simulcastCodecInfo || !simulcastCodecInfo.sender) {\n          for (const q of codec.qualities) {\n            if (q.enabled) {\n              newCodecs.push(codec.codec as VideoCodec);\n              break;\n            }\n          }\n        } else if (simulcastCodecInfo.encodings) {\n          this.log.debug(`try setPublishingLayersForSender ${codec.codec}`, this.logContext);\n          await setPublishingLayersForSender(\n            simulcastCodecInfo.sender,\n            simulcastCodecInfo.encodings!,\n            codec.qualities,\n            this.senderLock,\n            this.log,\n            this.logContext,\n          );\n        }\n      }\n    }\n    return newCodecs;\n  }\n\n  /**\n   * @internal\n   * Sets layers that should be publishing\n   */\n  async setPublishingLayers(qualities: SubscribedQuality[]) {\n    this.log.debug('setting publishing layers', { ...this.logContext, qualities });\n    if (!this.sender || !this.encodings) {\n      return;\n    }\n\n    await setPublishingLayersForSender(\n      this.sender,\n      this.encodings,\n      qualities,\n      this.senderLock,\n      this.log,\n      this.logContext,\n    );\n  }\n\n  protected monitorSender = async () => {\n    if (!this.sender) {\n      this._currentBitrate = 0;\n      return;\n    }\n\n    let stats: VideoSenderStats[] | undefined;\n    try {\n      stats = await this.getSenderStats();\n    } catch (e) {\n      this.log.error('could not get audio sender stats', { ...this.logContext, error: e });\n      return;\n    }\n    const statsMap = new Map<string, VideoSenderStats>(stats.map((s) => [s.rid, s]));\n\n    if (this.prevStats) {\n      let totalBitrate = 0;\n      statsMap.forEach((s, key) => {\n        const prev = this.prevStats?.get(key);\n        totalBitrate += computeBitrate(s, prev);\n      });\n      this._currentBitrate = totalBitrate;\n    }\n\n    this.prevStats = statsMap;\n  };\n\n  protected async handleAppVisibilityChanged() {\n    await super.handleAppVisibilityChanged();\n    if (!isMobile()) return;\n    if (this.isInBackground && this.source === Track.Source.Camera) {\n      this._mediaStreamTrack.enabled = false;\n    }\n  }\n}\n\nasync function setPublishingLayersForSender(\n  sender: RTCRtpSender,\n  senderEncodings: RTCRtpEncodingParameters[],\n  qualities: SubscribedQuality[],\n  senderLock: Mutex,\n  log: StructuredLogger,\n  logContext: Record<string, unknown>,\n) {\n  const unlock = await senderLock.lock();\n  log.debug('setPublishingLayersForSender', { ...logContext, sender, qualities, senderEncodings });\n  try {\n    const params = sender.getParameters();\n    const { encodings } = params;\n    if (!encodings) {\n      return;\n    }\n\n    if (encodings.length !== senderEncodings.length) {\n      log.warn('cannot set publishing layers, encodings mismatch', {\n        ...logContext,\n        encodings,\n        senderEncodings,\n      });\n      return;\n    }\n\n    let hasChanged = false;\n\n    /* disable closable spatial layer as it has video blur / frozen issue with current server / client\n    1. chrome 113: when switching to up layer with scalability Mode change, it will generate a\n          low resolution frame and recover very quickly, but noticable\n    2. livekit sfu: additional pli request cause video frozen for a few frames, also noticable */\n    const closableSpatial = false;\n    /* @ts-ignore */\n    if (closableSpatial && encodings[0].scalabilityMode) {\n      // svc dynacast encodings\n      const encoding = encodings[0];\n      /* @ts-ignore */\n      // const mode = new ScalabilityMode(encoding.scalabilityMode);\n      let maxQuality = ProtoVideoQuality.OFF;\n      qualities.forEach((q) => {\n        if (q.enabled && (maxQuality === ProtoVideoQuality.OFF || q.quality > maxQuality)) {\n          maxQuality = q.quality;\n        }\n      });\n\n      if (maxQuality === ProtoVideoQuality.OFF) {\n        if (encoding.active) {\n          encoding.active = false;\n          hasChanged = true;\n        }\n      } else if (!encoding.active /* || mode.spatial !== maxQuality + 1*/) {\n        hasChanged = true;\n        encoding.active = true;\n        /*\n        @ts-ignore\n        const originalMode = new ScalabilityMode(senderEncodings[0].scalabilityMode)\n        mode.spatial = maxQuality + 1;\n        mode.suffix = originalMode.suffix;\n        if (mode.spatial === 1) {\n          // no suffix for L1Tx\n          mode.suffix = undefined;\n        }\n        @ts-ignore\n        encoding.scalabilityMode = mode.toString();\n        encoding.scaleResolutionDownBy = 2 ** (2 - maxQuality);\n      */\n      }\n    } else {\n      // simulcast dynacast encodings\n      encodings.forEach((encoding, idx) => {\n        let rid = encoding.rid ?? '';\n        if (rid === '') {\n          rid = 'q';\n        }\n        const quality = videoQualityForRid(rid);\n        const subscribedQuality = qualities.find((q) => q.quality === quality);\n        if (!subscribedQuality) {\n          return;\n        }\n        if (encoding.active !== subscribedQuality.enabled) {\n          hasChanged = true;\n          encoding.active = subscribedQuality.enabled;\n          log.debug(\n            `setting layer ${subscribedQuality.quality} to ${\n              encoding.active ? 'enabled' : 'disabled'\n            }`,\n            logContext,\n          );\n\n          // FireFox does not support setting encoding.active to false, so we\n          // have a workaround of lowering its bitrate and resolution to the min.\n          if (isFireFox()) {\n            if (subscribedQuality.enabled) {\n              encoding.scaleResolutionDownBy = senderEncodings[idx].scaleResolutionDownBy;\n              encoding.maxBitrate = senderEncodings[idx].maxBitrate;\n              /* @ts-ignore */\n              encoding.maxFrameRate = senderEncodings[idx].maxFrameRate;\n            } else {\n              encoding.scaleResolutionDownBy = 4;\n              encoding.maxBitrate = 10;\n              /* @ts-ignore */\n              encoding.maxFrameRate = 2;\n            }\n          }\n        }\n      });\n    }\n\n    if (hasChanged) {\n      params.encodings = encodings;\n      log.debug(`setting encodings`, { ...logContext, encodings: params.encodings });\n      await sender.setParameters(params);\n    }\n  } finally {\n    unlock();\n  }\n}\n\nexport function videoQualityForRid(rid: string): VideoQuality {\n  switch (rid) {\n    case 'f':\n      return VideoQuality.HIGH;\n    case 'h':\n      return VideoQuality.MEDIUM;\n    case 'q':\n      return VideoQuality.LOW;\n    default:\n      return VideoQuality.HIGH;\n  }\n}\n\nexport function videoLayersFromEncodings(\n  width: number,\n  height: number,\n  encodings?: RTCRtpEncodingParameters[],\n  svc?: boolean,\n): VideoLayer[] {\n  // default to a single layer, HQ\n  if (!encodings) {\n    return [\n      new VideoLayer({\n        quality: VideoQuality.HIGH,\n        width,\n        height,\n        bitrate: 0,\n        ssrc: 0,\n      }),\n    ];\n  }\n\n  if (svc) {\n    // svc layers\n    /* @ts-ignore */\n    const encodingSM = encodings[0].scalabilityMode as string;\n    const sm = new ScalabilityMode(encodingSM);\n    const layers = [];\n    const resRatio = sm.suffix == 'h' ? 1.5 : 2;\n    const bitratesRatio = sm.suffix == 'h' ? 2 : 3;\n    for (let i = 0; i < sm.spatial; i += 1) {\n      layers.push(\n        new VideoLayer({\n          quality: Math.min(VideoQuality.HIGH, sm.spatial - 1) - i,\n          width: Math.ceil(width / resRatio ** i),\n          height: Math.ceil(height / resRatio ** i),\n          bitrate: encodings[0].maxBitrate\n            ? Math.ceil(encodings[0].maxBitrate / bitratesRatio ** i)\n            : 0,\n          ssrc: 0,\n        }),\n      );\n    }\n    return layers;\n  }\n\n  return encodings.map((encoding) => {\n    const scale = encoding.scaleResolutionDownBy ?? 1;\n    let quality = videoQualityForRid(encoding.rid ?? '');\n    return new VideoLayer({\n      quality,\n      width: Math.ceil(width / scale),\n      height: Math.ceil(height / scale),\n      bitrate: encoding.maxBitrate ?? 0,\n      ssrc: 0,\n    });\n  });\n}\n","import { Mutex } from '@livekit/mutex';\nimport {\n  type AddTrackRequest,\n  ClientConfigSetting,\n  ClientConfiguration,\n  type ConnectionQualityUpdate,\n  DataChannelInfo,\n  DataPacket,\n  DataPacket_Kind,\n  DisconnectReason,\n  type JoinResponse,\n  type LeaveRequest,\n  LeaveRequest_Action,\n  ParticipantInfo,\n  ReconnectReason,\n  type ReconnectResponse,\n  RequestResponse,\n  Room as RoomModel,\n  SignalTarget,\n  SpeakerInfo,\n  type StreamStateUpdate,\n  SubscribedQualityUpdate,\n  type SubscriptionPermissionUpdate,\n  type SubscriptionResponse,\n  SyncState,\n  TrackInfo,\n  type TrackPublishedResponse,\n  TrackUnpublishedResponse,\n  Transcription,\n  UpdateSubscription,\n  type UserPacket,\n} from '@livekit/protocol';\nimport { EventEmitter } from 'events';\nimport type { MediaAttributes } from 'sdp-transform';\nimport type TypedEventEmitter from 'typed-emitter';\nimport type { SignalOptions } from '../api/SignalClient';\nimport {\n  SignalClient,\n  SignalConnectionState,\n  toProtoSessionDescription,\n} from '../api/SignalClient';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport type { InternalRoomOptions } from '../options';\nimport PCTransport, { PCEvents } from './PCTransport';\nimport { PCTransportManager, PCTransportState } from './PCTransportManager';\nimport type { ReconnectContext, ReconnectPolicy } from './ReconnectPolicy';\nimport type { RegionUrlProvider } from './RegionUrlProvider';\nimport { roomConnectOptionDefaults } from './defaults';\nimport {\n  ConnectionError,\n  ConnectionErrorReason,\n  NegotiationError,\n  TrackInvalidError,\n  UnexpectedConnectionState,\n} from './errors';\nimport { EngineEvent } from './events';\nimport CriticalTimers from './timers';\nimport type LocalTrack from './track/LocalTrack';\nimport type LocalTrackPublication from './track/LocalTrackPublication';\nimport LocalVideoTrack from './track/LocalVideoTrack';\nimport type { SimulcastTrackInfo } from './track/LocalVideoTrack';\nimport type RemoteTrackPublication from './track/RemoteTrackPublication';\nimport type { Track } from './track/Track';\nimport type { TrackPublishOptions, VideoCodec } from './track/options';\nimport { getTrackPublicationInfo } from './track/utils';\nimport type { LoggerOptions } from './types';\nimport { isVideoCodec, isWeb, sleep, supportsAddTrack, supportsTransceiver } from './utils';\n\nconst lossyDataChannel = '_lossy';\nconst reliableDataChannel = '_reliable';\nconst minReconnectWait = 2 * 1000;\nconst leaveReconnect = 'leave-reconnect';\n\nenum PCState {\n  New,\n  Connected,\n  Disconnected,\n  Reconnecting,\n  Closed,\n}\n\n/** @internal */\nexport default class RTCEngine extends (EventEmitter as new () => TypedEventEmitter<EngineEventCallbacks>) {\n  client: SignalClient;\n\n  rtcConfig: RTCConfiguration = {};\n\n  peerConnectionTimeout: number = roomConnectOptionDefaults.peerConnectionTimeout;\n\n  fullReconnectOnNext: boolean = false;\n\n  pcManager?: PCTransportManager;\n\n  /**\n   * @internal\n   */\n  latestJoinResponse?: JoinResponse;\n\n  get isClosed() {\n    return this._isClosed;\n  }\n\n  get pendingReconnect() {\n    return !!this.reconnectTimeout;\n  }\n\n  private lossyDC?: RTCDataChannel;\n\n  // @ts-ignore noUnusedLocals\n  private lossyDCSub?: RTCDataChannel;\n\n  private reliableDC?: RTCDataChannel;\n\n  private dcBufferStatus: Map<DataPacket_Kind, boolean>;\n\n  // @ts-ignore noUnusedLocals\n  private reliableDCSub?: RTCDataChannel;\n\n  private subscriberPrimary: boolean = false;\n\n  private pcState: PCState = PCState.New;\n\n  private _isClosed: boolean = true;\n\n  private pendingTrackResolvers: {\n    [key: string]: { resolve: (info: TrackInfo) => void; reject: () => void };\n  } = {};\n\n  // keep join info around for reconnect, this could be a region url\n  private url?: string;\n\n  private token?: string;\n\n  private signalOpts?: SignalOptions;\n\n  private reconnectAttempts: number = 0;\n\n  private reconnectStart: number = 0;\n\n  private clientConfiguration?: ClientConfiguration;\n\n  private attemptingReconnect: boolean = false;\n\n  private reconnectPolicy: ReconnectPolicy;\n\n  private reconnectTimeout?: ReturnType<typeof setTimeout>;\n\n  private participantSid?: string;\n\n  /** keeps track of how often an initial join connection has been tried */\n  private joinAttempts: number = 0;\n\n  /** specifies how often an initial join connection is allowed to retry */\n  private maxJoinAttempts: number = 1;\n\n  private closingLock: Mutex;\n\n  private dataProcessLock: Mutex;\n\n  private shouldFailNext: boolean = false;\n\n  private regionUrlProvider?: RegionUrlProvider;\n\n  private log = log;\n\n  private loggerOptions: LoggerOptions;\n\n  private publisherConnectionPromise: Promise<void> | undefined;\n\n  constructor(private options: InternalRoomOptions) {\n    super();\n    this.log = getLogger(options.loggerName ?? LoggerNames.Engine);\n    this.loggerOptions = {\n      loggerName: options.loggerName,\n      loggerContextCb: () => this.logContext,\n    };\n    this.client = new SignalClient(undefined, this.loggerOptions);\n    this.client.signalLatency = this.options.expSignalLatency;\n    this.reconnectPolicy = this.options.reconnectPolicy;\n    this.registerOnLineListener();\n    this.closingLock = new Mutex();\n    this.dataProcessLock = new Mutex();\n    this.dcBufferStatus = new Map([\n      [DataPacket_Kind.LOSSY, true],\n      [DataPacket_Kind.RELIABLE, true],\n    ]);\n\n    this.client.onParticipantUpdate = (updates) =>\n      this.emit(EngineEvent.ParticipantUpdate, updates);\n    this.client.onConnectionQuality = (update) =>\n      this.emit(EngineEvent.ConnectionQualityUpdate, update);\n    this.client.onRoomUpdate = (update) => this.emit(EngineEvent.RoomUpdate, update);\n    this.client.onSubscriptionError = (resp) => this.emit(EngineEvent.SubscriptionError, resp);\n    this.client.onSubscriptionPermissionUpdate = (update) =>\n      this.emit(EngineEvent.SubscriptionPermissionUpdate, update);\n    this.client.onSpeakersChanged = (update) => this.emit(EngineEvent.SpeakersChanged, update);\n    this.client.onStreamStateUpdate = (update) => this.emit(EngineEvent.StreamStateChanged, update);\n    this.client.onRequestResponse = (response) =>\n      this.emit(EngineEvent.SignalRequestResponse, response);\n  }\n\n  /** @internal */\n  get logContext() {\n    return {\n      room: this.latestJoinResponse?.room?.name,\n      roomID: this.latestJoinResponse?.room?.sid,\n      participant: this.latestJoinResponse?.participant?.identity,\n      pID: this.latestJoinResponse?.participant?.sid,\n    };\n  }\n\n  async join(\n    url: string,\n    token: string,\n    opts: SignalOptions,\n    abortSignal?: AbortSignal,\n  ): Promise<JoinResponse> {\n    this.url = url;\n    this.token = token;\n    this.signalOpts = opts;\n    this.maxJoinAttempts = opts.maxRetries;\n    try {\n      this.joinAttempts += 1;\n\n      this.setupSignalClientCallbacks();\n      const joinResponse = await this.client.join(url, token, opts, abortSignal);\n      this._isClosed = false;\n      this.latestJoinResponse = joinResponse;\n\n      this.subscriberPrimary = joinResponse.subscriberPrimary;\n      if (!this.pcManager) {\n        await this.configure(joinResponse);\n      }\n\n      // create offer\n      if (!this.subscriberPrimary || joinResponse.fastPublish) {\n        this.negotiate();\n      }\n\n      this.clientConfiguration = joinResponse.clientConfiguration;\n      return joinResponse;\n    } catch (e) {\n      if (e instanceof ConnectionError) {\n        if (e.reason === ConnectionErrorReason.ServerUnreachable) {\n          this.log.warn(\n            `Couldn't connect to server, attempt ${this.joinAttempts} of ${this.maxJoinAttempts}`,\n            this.logContext,\n          );\n          if (this.joinAttempts < this.maxJoinAttempts) {\n            return this.join(url, token, opts, abortSignal);\n          }\n        }\n      }\n      throw e;\n    }\n  }\n\n  async close() {\n    const unlock = await this.closingLock.lock();\n    if (this.isClosed) {\n      unlock();\n      return;\n    }\n    try {\n      this._isClosed = true;\n      this.joinAttempts = 0;\n      this.emit(EngineEvent.Closing);\n      this.removeAllListeners();\n      this.deregisterOnLineListener();\n      this.clearPendingReconnect();\n      await this.cleanupPeerConnections();\n      await this.cleanupClient();\n    } finally {\n      unlock();\n    }\n  }\n\n  async cleanupPeerConnections() {\n    await this.pcManager?.close();\n    this.pcManager = undefined;\n\n    const dcCleanup = (dc: RTCDataChannel | undefined) => {\n      if (!dc) return;\n      dc.close();\n      dc.onbufferedamountlow = null;\n      dc.onclose = null;\n      dc.onclosing = null;\n      dc.onerror = null;\n      dc.onmessage = null;\n      dc.onopen = null;\n    };\n    dcCleanup(this.lossyDC);\n    dcCleanup(this.lossyDCSub);\n    dcCleanup(this.reliableDC);\n    dcCleanup(this.reliableDCSub);\n\n    this.lossyDC = undefined;\n    this.lossyDCSub = undefined;\n    this.reliableDC = undefined;\n    this.reliableDCSub = undefined;\n  }\n\n  async cleanupClient() {\n    await this.client.close();\n    this.client.resetCallbacks();\n  }\n\n  addTrack(req: AddTrackRequest): Promise<TrackInfo> {\n    if (this.pendingTrackResolvers[req.cid]) {\n      throw new TrackInvalidError('a track with the same ID has already been published');\n    }\n    return new Promise<TrackInfo>((resolve, reject) => {\n      const publicationTimeout = setTimeout(() => {\n        delete this.pendingTrackResolvers[req.cid];\n        reject(\n          new ConnectionError(\n            'publication of local track timed out, no response from server',\n            ConnectionErrorReason.InternalError,\n          ),\n        );\n      }, 10_000);\n      this.pendingTrackResolvers[req.cid] = {\n        resolve: (info: TrackInfo) => {\n          clearTimeout(publicationTimeout);\n          resolve(info);\n        },\n        reject: () => {\n          clearTimeout(publicationTimeout);\n          reject(new Error('Cancelled publication by calling unpublish'));\n        },\n      };\n      this.client.sendAddTrack(req);\n    });\n  }\n\n  /**\n   * Removes sender from PeerConnection, returning true if it was removed successfully\n   * and a negotiation is necessary\n   * @param sender\n   * @returns\n   */\n  removeTrack(sender: RTCRtpSender): boolean {\n    if (sender.track && this.pendingTrackResolvers[sender.track.id]) {\n      const { reject } = this.pendingTrackResolvers[sender.track.id];\n      if (reject) {\n        reject();\n      }\n      delete this.pendingTrackResolvers[sender.track.id];\n    }\n    try {\n      this.pcManager!.removeTrack(sender);\n      return true;\n    } catch (e: unknown) {\n      this.log.warn('failed to remove track', { ...this.logContext, error: e });\n    }\n    return false;\n  }\n\n  updateMuteStatus(trackSid: string, muted: boolean) {\n    this.client.sendMuteTrack(trackSid, muted);\n  }\n\n  get dataSubscriberReadyState(): string | undefined {\n    return this.reliableDCSub?.readyState;\n  }\n\n  async getConnectedServerAddress(): Promise<string | undefined> {\n    return this.pcManager?.getConnectedAddress();\n  }\n\n  /* @internal */\n  setRegionUrlProvider(provider: RegionUrlProvider) {\n    this.regionUrlProvider = provider;\n  }\n\n  private async configure(joinResponse: JoinResponse) {\n    // already configured\n    if (this.pcManager && this.pcManager.currentState !== PCTransportState.NEW) {\n      return;\n    }\n\n    this.participantSid = joinResponse.participant?.sid;\n\n    const rtcConfig = this.makeRTCConfiguration(joinResponse);\n\n    this.pcManager = new PCTransportManager(\n      rtcConfig,\n      joinResponse.subscriberPrimary,\n      this.loggerOptions,\n    );\n\n    this.emit(EngineEvent.TransportsCreated, this.pcManager.publisher, this.pcManager.subscriber);\n\n    this.pcManager.onIceCandidate = (candidate, target) => {\n      this.client.sendIceCandidate(candidate, target);\n    };\n\n    this.pcManager.onPublisherOffer = (offer) => {\n      this.client.sendOffer(offer);\n    };\n\n    this.pcManager.onDataChannel = this.handleDataChannel;\n    this.pcManager.onStateChange = async (connectionState, publisherState, subscriberState) => {\n      this.log.debug(`primary PC state changed ${connectionState}`, this.logContext);\n\n      if (['closed', 'disconnected', 'failed'].includes(publisherState)) {\n        // reset publisher connection promise\n        this.publisherConnectionPromise = undefined;\n      }\n      if (connectionState === PCTransportState.CONNECTED) {\n        const shouldEmit = this.pcState === PCState.New;\n        this.pcState = PCState.Connected;\n        if (shouldEmit) {\n          this.emit(EngineEvent.Connected, joinResponse);\n        }\n      } else if (connectionState === PCTransportState.FAILED) {\n        // on Safari, PeerConnection will switch to 'disconnected' during renegotiation\n        if (this.pcState === PCState.Connected) {\n          this.pcState = PCState.Disconnected;\n\n          this.handleDisconnect(\n            'peerconnection failed',\n            subscriberState === 'failed'\n              ? ReconnectReason.RR_SUBSCRIBER_FAILED\n              : ReconnectReason.RR_PUBLISHER_FAILED,\n          );\n        }\n      }\n\n      // detect cases where both signal client and peer connection are severed and assume that user has lost network connection\n      const isSignalSevered =\n        this.client.isDisconnected ||\n        this.client.currentState === SignalConnectionState.RECONNECTING;\n      const isPCSevered = [\n        PCTransportState.FAILED,\n        PCTransportState.CLOSING,\n        PCTransportState.CLOSED,\n      ].includes(connectionState);\n      if (isSignalSevered && isPCSevered && !this._isClosed) {\n        this.emit(EngineEvent.Offline);\n      }\n    };\n    this.pcManager.onTrack = (ev: RTCTrackEvent) => {\n      this.emit(EngineEvent.MediaTrackAdded, ev.track, ev.streams[0], ev.receiver);\n    };\n\n    if (!supportOptionalDatachannel(joinResponse.serverInfo?.protocol)) {\n      this.createDataChannels();\n    }\n  }\n\n  private setupSignalClientCallbacks() {\n    // configure signaling client\n    this.client.onAnswer = async (sd) => {\n      if (!this.pcManager) {\n        return;\n      }\n      this.log.debug('received server answer', { ...this.logContext, RTCSdpType: sd.type });\n      await this.pcManager.setPublisherAnswer(sd);\n    };\n\n    // add candidate on trickle\n    this.client.onTrickle = (candidate, target) => {\n      if (!this.pcManager) {\n        return;\n      }\n      this.log.trace('got ICE candidate from peer', { ...this.logContext, candidate, target });\n      this.pcManager.addIceCandidate(candidate, target);\n    };\n\n    // when server creates an offer for the client\n    this.client.onOffer = async (sd) => {\n      if (!this.pcManager) {\n        return;\n      }\n      const answer = await this.pcManager.createSubscriberAnswerFromOffer(sd);\n      this.client.sendAnswer(answer);\n    };\n\n    this.client.onLocalTrackPublished = (res: TrackPublishedResponse) => {\n      this.log.debug('received trackPublishedResponse', {\n        ...this.logContext,\n        cid: res.cid,\n        track: res.track?.sid,\n      });\n      if (!this.pendingTrackResolvers[res.cid]) {\n        this.log.error(`missing track resolver for ${res.cid}`, {\n          ...this.logContext,\n          cid: res.cid,\n        });\n        return;\n      }\n      const { resolve } = this.pendingTrackResolvers[res.cid];\n      delete this.pendingTrackResolvers[res.cid];\n      resolve(res.track!);\n    };\n\n    this.client.onLocalTrackUnpublished = (response: TrackUnpublishedResponse) => {\n      this.emit(EngineEvent.LocalTrackUnpublished, response);\n    };\n\n    this.client.onLocalTrackSubscribed = (trackSid: string) => {\n      this.emit(EngineEvent.LocalTrackSubscribed, trackSid);\n    };\n\n    this.client.onTokenRefresh = (token: string) => {\n      this.token = token;\n    };\n\n    this.client.onRemoteMuteChanged = (trackSid: string, muted: boolean) => {\n      this.emit(EngineEvent.RemoteMute, trackSid, muted);\n    };\n\n    this.client.onSubscribedQualityUpdate = (update: SubscribedQualityUpdate) => {\n      this.emit(EngineEvent.SubscribedQualityUpdate, update);\n    };\n\n    this.client.onClose = () => {\n      this.handleDisconnect('signal', ReconnectReason.RR_SIGNAL_DISCONNECTED);\n    };\n\n    this.client.onLeave = (leave: LeaveRequest) => {\n      this.log.debug('client leave request', { ...this.logContext, reason: leave?.reason });\n      if (leave.regions && this.regionUrlProvider) {\n        this.log.debug('updating regions', this.logContext);\n        this.regionUrlProvider.setServerReportedRegions(leave.regions);\n      }\n      switch (leave.action) {\n        case LeaveRequest_Action.DISCONNECT:\n          this.emit(EngineEvent.Disconnected, leave?.reason);\n          this.close();\n          break;\n        case LeaveRequest_Action.RECONNECT:\n          this.fullReconnectOnNext = true;\n          // reconnect immediately instead of waiting for next attempt\n          this.handleDisconnect(leaveReconnect);\n          break;\n        case LeaveRequest_Action.RESUME:\n          // reconnect immediately instead of waiting for next attempt\n          this.handleDisconnect(leaveReconnect);\n        default:\n          break;\n      }\n    };\n  }\n\n  private makeRTCConfiguration(serverResponse: JoinResponse | ReconnectResponse): RTCConfiguration {\n    const rtcConfig = { ...this.rtcConfig };\n\n    if (this.signalOpts?.e2eeEnabled) {\n      this.log.debug('E2EE - setting up transports with insertable streams', this.logContext);\n      //  this makes sure that no data is sent before the transforms are ready\n      // @ts-ignore\n      rtcConfig.encodedInsertableStreams = true;\n    }\n\n    // update ICE servers before creating PeerConnection\n    if (serverResponse.iceServers && !rtcConfig.iceServers) {\n      const rtcIceServers: RTCIceServer[] = [];\n      serverResponse.iceServers.forEach((iceServer) => {\n        const rtcIceServer: RTCIceServer = {\n          urls: iceServer.urls,\n        };\n        if (iceServer.username) rtcIceServer.username = iceServer.username;\n        if (iceServer.credential) {\n          rtcIceServer.credential = iceServer.credential;\n        }\n        rtcIceServers.push(rtcIceServer);\n      });\n      rtcConfig.iceServers = rtcIceServers;\n    }\n\n    if (\n      serverResponse.clientConfiguration &&\n      serverResponse.clientConfiguration.forceRelay === ClientConfigSetting.ENABLED\n    ) {\n      rtcConfig.iceTransportPolicy = 'relay';\n    }\n\n    // @ts-ignore\n    rtcConfig.sdpSemantics = 'unified-plan';\n    // @ts-ignore\n    rtcConfig.continualGatheringPolicy = 'gather_continually';\n\n    return rtcConfig;\n  }\n\n  private createDataChannels() {\n    if (!this.pcManager) {\n      return;\n    }\n\n    // clear old data channel callbacks if recreate\n    if (this.lossyDC) {\n      this.lossyDC.onmessage = null;\n      this.lossyDC.onerror = null;\n    }\n    if (this.reliableDC) {\n      this.reliableDC.onmessage = null;\n      this.reliableDC.onerror = null;\n    }\n\n    // create data channels\n    this.lossyDC = this.pcManager.createPublisherDataChannel(lossyDataChannel, {\n      // will drop older packets that arrive\n      ordered: true,\n      maxRetransmits: 0,\n    });\n    this.reliableDC = this.pcManager.createPublisherDataChannel(reliableDataChannel, {\n      ordered: true,\n    });\n\n    // also handle messages over the pub channel, for backwards compatibility\n    this.lossyDC.onmessage = this.handleDataMessage;\n    this.reliableDC.onmessage = this.handleDataMessage;\n\n    // handle datachannel errors\n    this.lossyDC.onerror = this.handleDataError;\n    this.reliableDC.onerror = this.handleDataError;\n\n    // set up dc buffer threshold, set to 64kB (otherwise 0 by default)\n    this.lossyDC.bufferedAmountLowThreshold = 65535;\n    this.reliableDC.bufferedAmountLowThreshold = 65535;\n\n    // handle buffer amount low events\n    this.lossyDC.onbufferedamountlow = this.handleBufferedAmountLow;\n    this.reliableDC.onbufferedamountlow = this.handleBufferedAmountLow;\n  }\n\n  private handleDataChannel = async ({ channel }: RTCDataChannelEvent) => {\n    if (!channel) {\n      return;\n    }\n    if (channel.label === reliableDataChannel) {\n      this.reliableDCSub = channel;\n    } else if (channel.label === lossyDataChannel) {\n      this.lossyDCSub = channel;\n    } else {\n      return;\n    }\n    this.log.debug(`on data channel ${channel.id}, ${channel.label}`, this.logContext);\n    channel.onmessage = this.handleDataMessage;\n  };\n\n  private handleDataMessage = async (message: MessageEvent) => {\n    // make sure to respect incoming data message order by processing message events one after the other\n    const unlock = await this.dataProcessLock.lock();\n    try {\n      // decode\n      let buffer: ArrayBuffer | undefined;\n      if (message.data instanceof ArrayBuffer) {\n        buffer = message.data;\n      } else if (message.data instanceof Blob) {\n        buffer = await message.data.arrayBuffer();\n      } else {\n        this.log.error('unsupported data type', { ...this.logContext, data: message.data });\n        return;\n      }\n      const dp = DataPacket.fromBinary(new Uint8Array(buffer));\n      if (dp.value?.case === 'speaker') {\n        // dispatch speaker updates\n        this.emit(EngineEvent.ActiveSpeakersUpdate, dp.value.value.speakers);\n      } else {\n        if (dp.value?.case === 'user') {\n          // compatibility\n          applyUserDataCompat(dp, dp.value.value);\n        }\n        this.emit(EngineEvent.DataPacketReceived, dp);\n      }\n    } finally {\n      unlock();\n    }\n  };\n\n  private handleDataError = (event: Event) => {\n    const channel = event.currentTarget as RTCDataChannel;\n    const channelKind = channel.maxRetransmits === 0 ? 'lossy' : 'reliable';\n\n    if (event instanceof ErrorEvent && event.error) {\n      const { error } = event.error;\n      this.log.error(`DataChannel error on ${channelKind}: ${event.message}`, {\n        ...this.logContext,\n        error,\n      });\n    } else {\n      this.log.error(`Unknown DataChannel error on ${channelKind}`, { ...this.logContext, event });\n    }\n  };\n\n  private handleBufferedAmountLow = (event: Event) => {\n    const channel = event.currentTarget as RTCDataChannel;\n    const channelKind =\n      channel.maxRetransmits === 0 ? DataPacket_Kind.LOSSY : DataPacket_Kind.RELIABLE;\n\n    this.updateAndEmitDCBufferStatus(channelKind);\n  };\n\n  async createSender(\n    track: LocalTrack,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    if (supportsTransceiver()) {\n      const sender = await this.createTransceiverRTCRtpSender(track, opts, encodings);\n      return sender;\n    }\n    if (supportsAddTrack()) {\n      this.log.warn('using add-track fallback', this.logContext);\n      const sender = await this.createRTCRtpSender(track.mediaStreamTrack);\n      return sender;\n    }\n    throw new UnexpectedConnectionState('Required webRTC APIs not supported on this device');\n  }\n\n  async createSimulcastSender(\n    track: LocalVideoTrack,\n    simulcastTrack: SimulcastTrackInfo,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    // store RTCRtpSender\n    if (supportsTransceiver()) {\n      return this.createSimulcastTransceiverSender(track, simulcastTrack, opts, encodings);\n    }\n    if (supportsAddTrack()) {\n      this.log.debug('using add-track fallback', this.logContext);\n      return this.createRTCRtpSender(track.mediaStreamTrack);\n    }\n\n    throw new UnexpectedConnectionState('Cannot stream on this device');\n  }\n\n  private async createTransceiverRTCRtpSender(\n    track: LocalTrack,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher is closed');\n    }\n\n    const streams: MediaStream[] = [];\n\n    if (track.mediaStream) {\n      streams.push(track.mediaStream);\n    }\n\n    if (track instanceof LocalVideoTrack) {\n      track.codec = opts.videoCodec;\n    }\n\n    const transceiverInit: RTCRtpTransceiverInit = { direction: 'sendonly', streams };\n    if (encodings) {\n      transceiverInit.sendEncodings = encodings;\n    }\n    // addTransceiver for react-native is async. web is synchronous, but await won't effect it.\n    const transceiver = await this.pcManager.addPublisherTransceiver(\n      track.mediaStreamTrack,\n      transceiverInit,\n    );\n\n    return transceiver.sender;\n  }\n\n  private async createSimulcastTransceiverSender(\n    track: LocalVideoTrack,\n    simulcastTrack: SimulcastTrackInfo,\n    opts: TrackPublishOptions,\n    encodings?: RTCRtpEncodingParameters[],\n  ) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher is closed');\n    }\n    const transceiverInit: RTCRtpTransceiverInit = { direction: 'sendonly' };\n    if (encodings) {\n      transceiverInit.sendEncodings = encodings;\n    }\n    // addTransceiver for react-native is async. web is synchronous, but await won't effect it.\n    const transceiver = await this.pcManager.addPublisherTransceiver(\n      simulcastTrack.mediaStreamTrack,\n      transceiverInit,\n    );\n    if (!opts.videoCodec) {\n      return;\n    }\n    track.setSimulcastTrackSender(opts.videoCodec, transceiver.sender);\n    return transceiver.sender;\n  }\n\n  private async createRTCRtpSender(track: MediaStreamTrack) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher is closed');\n    }\n    return this.pcManager.addPublisherTrack(track);\n  }\n\n  // websocket reconnect behavior. if websocket is interrupted, and the PeerConnection\n  // continues to work, we can reconnect to websocket to continue the session\n  // after a number of retries, we'll close and give up permanently\n  private handleDisconnect = (connection: string, disconnectReason?: ReconnectReason) => {\n    if (this._isClosed) {\n      return;\n    }\n\n    this.log.warn(`${connection} disconnected`, this.logContext);\n    if (this.reconnectAttempts === 0) {\n      // only reset start time on the first try\n      this.reconnectStart = Date.now();\n    }\n\n    const disconnect = (duration: number) => {\n      this.log.warn(\n        `could not recover connection after ${this.reconnectAttempts} attempts, ${duration}ms. giving up`,\n        this.logContext,\n      );\n      this.emit(EngineEvent.Disconnected);\n      this.close();\n    };\n\n    const duration = Date.now() - this.reconnectStart;\n    let delay = this.getNextRetryDelay({\n      elapsedMs: duration,\n      retryCount: this.reconnectAttempts,\n    });\n\n    if (delay === null) {\n      disconnect(duration);\n      return;\n    }\n    if (connection === leaveReconnect) {\n      delay = 0;\n    }\n\n    this.log.debug(`reconnecting in ${delay}ms`, this.logContext);\n\n    this.clearReconnectTimeout();\n    if (this.token && this.regionUrlProvider) {\n      // token may have been refreshed, we do not want to recreate the regionUrlProvider\n      // since the current engine may have inherited a regional url\n      this.regionUrlProvider.updateToken(this.token);\n    }\n    this.reconnectTimeout = CriticalTimers.setTimeout(\n      () =>\n        this.attemptReconnect(disconnectReason).finally(() => (this.reconnectTimeout = undefined)),\n      delay,\n    );\n  };\n\n  private async attemptReconnect(reason?: ReconnectReason) {\n    if (this._isClosed) {\n      return;\n    }\n    // guard for attempting reconnection multiple times while one attempt is still not finished\n    if (this.attemptingReconnect) {\n      log.warn('already attempting reconnect, returning early', this.logContext);\n      return;\n    }\n    if (\n      this.clientConfiguration?.resumeConnection === ClientConfigSetting.DISABLED ||\n      // signaling state could change to closed due to hardware sleep\n      // those connections cannot be resumed\n      (this.pcManager?.currentState ?? PCTransportState.NEW) === PCTransportState.NEW\n    ) {\n      this.fullReconnectOnNext = true;\n    }\n\n    try {\n      this.attemptingReconnect = true;\n      if (this.fullReconnectOnNext) {\n        await this.restartConnection();\n      } else {\n        await this.resumeConnection(reason);\n      }\n      this.clearPendingReconnect();\n      this.fullReconnectOnNext = false;\n    } catch (e) {\n      this.reconnectAttempts += 1;\n      let recoverable = true;\n      if (e instanceof UnexpectedConnectionState) {\n        this.log.debug('received unrecoverable error', { ...this.logContext, error: e });\n        // unrecoverable\n        recoverable = false;\n      } else if (!(e instanceof SignalReconnectError)) {\n        // cannot resume\n        this.fullReconnectOnNext = true;\n      }\n\n      if (recoverable) {\n        this.handleDisconnect('reconnect', ReconnectReason.RR_UNKNOWN);\n      } else {\n        this.log.info(\n          `could not recover connection after ${this.reconnectAttempts} attempts, ${\n            Date.now() - this.reconnectStart\n          }ms. giving up`,\n          this.logContext,\n        );\n        this.emit(EngineEvent.Disconnected);\n        await this.close();\n      }\n    } finally {\n      this.attemptingReconnect = false;\n    }\n  }\n\n  private getNextRetryDelay(context: ReconnectContext) {\n    try {\n      return this.reconnectPolicy.nextRetryDelayInMs(context);\n    } catch (e) {\n      this.log.warn('encountered error in reconnect policy', { ...this.logContext, error: e });\n    }\n\n    // error in user code with provided reconnect policy, stop reconnecting\n    return null;\n  }\n\n  private async restartConnection(regionUrl?: string) {\n    try {\n      if (!this.url || !this.token) {\n        // permanent failure, don't attempt reconnection\n        throw new UnexpectedConnectionState('could not reconnect, url or token not saved');\n      }\n\n      this.log.info(`reconnecting, attempt: ${this.reconnectAttempts}`, this.logContext);\n      this.emit(EngineEvent.Restarting);\n\n      if (!this.client.isDisconnected) {\n        await this.client.sendLeave();\n      }\n      await this.cleanupPeerConnections();\n      await this.cleanupClient();\n\n      let joinResponse: JoinResponse;\n      try {\n        if (!this.signalOpts) {\n          this.log.warn(\n            'attempted connection restart, without signal options present',\n            this.logContext,\n          );\n          throw new SignalReconnectError();\n        }\n        // in case a regionUrl is passed, the region URL takes precedence\n        joinResponse = await this.join(regionUrl ?? this.url, this.token, this.signalOpts);\n      } catch (e) {\n        if (e instanceof ConnectionError && e.reason === ConnectionErrorReason.NotAllowed) {\n          throw new UnexpectedConnectionState('could not reconnect, token might be expired');\n        }\n        throw new SignalReconnectError();\n      }\n\n      if (this.shouldFailNext) {\n        this.shouldFailNext = false;\n        throw new Error('simulated failure');\n      }\n\n      this.client.setReconnected();\n      this.emit(EngineEvent.SignalRestarted, joinResponse);\n\n      await this.waitForPCReconnected();\n\n      // re-check signal connection state before setting engine as resumed\n      if (this.client.currentState !== SignalConnectionState.CONNECTED) {\n        throw new SignalReconnectError('Signal connection got severed during reconnect');\n      }\n\n      this.regionUrlProvider?.resetAttempts();\n      // reconnect success\n      this.emit(EngineEvent.Restarted);\n    } catch (error) {\n      const nextRegionUrl = await this.regionUrlProvider?.getNextBestRegionUrl();\n      if (nextRegionUrl) {\n        await this.restartConnection(nextRegionUrl);\n        return;\n      } else {\n        // no more regions to try (or we're not on cloud)\n        this.regionUrlProvider?.resetAttempts();\n        throw error;\n      }\n    }\n  }\n\n  private async resumeConnection(reason?: ReconnectReason): Promise<void> {\n    if (!this.url || !this.token) {\n      // permanent failure, don't attempt reconnection\n      throw new UnexpectedConnectionState('could not reconnect, url or token not saved');\n    }\n    // trigger publisher reconnect\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('publisher and subscriber connections unset');\n    }\n\n    this.log.info(`resuming signal connection, attempt ${this.reconnectAttempts}`, this.logContext);\n    this.emit(EngineEvent.Resuming);\n    let res: ReconnectResponse | undefined;\n    try {\n      this.setupSignalClientCallbacks();\n      res = await this.client.reconnect(this.url, this.token, this.participantSid, reason);\n    } catch (error) {\n      let message = '';\n      if (error instanceof Error) {\n        message = error.message;\n        this.log.error(error.message, { ...this.logContext, error });\n      }\n      if (error instanceof ConnectionError && error.reason === ConnectionErrorReason.NotAllowed) {\n        throw new UnexpectedConnectionState('could not reconnect, token might be expired');\n      }\n      if (error instanceof ConnectionError && error.reason === ConnectionErrorReason.LeaveRequest) {\n        throw error;\n      }\n      throw new SignalReconnectError(message);\n    }\n    this.emit(EngineEvent.SignalResumed);\n\n    if (res) {\n      const rtcConfig = this.makeRTCConfiguration(res);\n      this.pcManager.updateConfiguration(rtcConfig);\n    } else {\n      this.log.warn('Did not receive reconnect response', this.logContext);\n    }\n\n    if (this.shouldFailNext) {\n      this.shouldFailNext = false;\n      throw new Error('simulated failure');\n    }\n\n    await this.pcManager.triggerIceRestart();\n\n    await this.waitForPCReconnected();\n\n    // re-check signal connection state before setting engine as resumed\n    if (this.client.currentState !== SignalConnectionState.CONNECTED) {\n      throw new SignalReconnectError('Signal connection got severed during reconnect');\n    }\n\n    this.client.setReconnected();\n\n    // recreate publish datachannel if it's id is null\n    // (for safari https://bugs.webkit.org/show_bug.cgi?id=184688)\n    if (this.reliableDC?.readyState === 'open' && this.reliableDC.id === null) {\n      this.createDataChannels();\n    }\n\n    // resume success\n    this.emit(EngineEvent.Resumed);\n  }\n\n  async waitForPCInitialConnection(timeout?: number, abortController?: AbortController) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('PC manager is closed');\n    }\n    await this.pcManager.ensurePCTransportConnection(abortController, timeout);\n  }\n\n  private async waitForPCReconnected() {\n    this.pcState = PCState.Reconnecting;\n\n    this.log.debug('waiting for peer connection to reconnect', this.logContext);\n    try {\n      await sleep(minReconnectWait); // FIXME setTimeout again not ideal for a connection critical path\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('PC manager is closed');\n      }\n      await this.pcManager.ensurePCTransportConnection(undefined, this.peerConnectionTimeout);\n      this.pcState = PCState.Connected;\n    } catch (e: any) {\n      // TODO do we need a `failed` state here for the PC?\n      this.pcState = PCState.Disconnected;\n      throw new ConnectionError(\n        `could not establish PC connection, ${e.message}`,\n        ConnectionErrorReason.InternalError,\n      );\n    }\n  }\n\n  waitForRestarted = () => {\n    return new Promise<void>((resolve, reject) => {\n      if (this.pcState === PCState.Connected) {\n        resolve();\n      }\n      const onRestarted = () => {\n        this.off(EngineEvent.Disconnected, onDisconnected);\n        resolve();\n      };\n      const onDisconnected = () => {\n        this.off(EngineEvent.Restarted, onRestarted);\n        reject();\n      };\n      this.once(EngineEvent.Restarted, onRestarted);\n      this.once(EngineEvent.Disconnected, onDisconnected);\n    });\n  };\n\n  /* @internal */\n  async sendDataPacket(packet: DataPacket, kind: DataPacket_Kind) {\n    const msg = packet.toBinary();\n\n    // make sure we do have a data connection\n    await this.ensurePublisherConnected(kind);\n\n    const dc = this.dataChannelForKind(kind);\n    if (dc) {\n      dc.send(msg);\n    }\n\n    this.updateAndEmitDCBufferStatus(kind);\n  }\n\n  private updateAndEmitDCBufferStatus = (kind: DataPacket_Kind) => {\n    const status = this.isBufferStatusLow(kind);\n    if (typeof status !== 'undefined' && status !== this.dcBufferStatus.get(kind)) {\n      this.dcBufferStatus.set(kind, status);\n      this.emit(EngineEvent.DCBufferStatusChanged, status, kind);\n    }\n  };\n\n  private isBufferStatusLow = (kind: DataPacket_Kind): boolean | undefined => {\n    const dc = this.dataChannelForKind(kind);\n    if (dc) {\n      return dc.bufferedAmount <= dc.bufferedAmountLowThreshold;\n    }\n  };\n\n  /**\n   * @internal\n   */\n  async ensureDataTransportConnected(\n    kind: DataPacket_Kind,\n    subscriber: boolean = this.subscriberPrimary,\n  ) {\n    if (!this.pcManager) {\n      throw new UnexpectedConnectionState('PC manager is closed');\n    }\n    const transport = subscriber ? this.pcManager.subscriber : this.pcManager.publisher;\n    const transportName = subscriber ? 'Subscriber' : 'Publisher';\n    if (!transport) {\n      throw new ConnectionError(\n        `${transportName} connection not set`,\n        ConnectionErrorReason.InternalError,\n      );\n    }\n\n    let needNegotiation = false;\n    if (!subscriber && !this.dataChannelForKind(kind, subscriber)) {\n      this.createDataChannels();\n      needNegotiation = true;\n    }\n\n    if (\n      !needNegotiation &&\n      !subscriber &&\n      !this.pcManager.publisher.isICEConnected &&\n      this.pcManager.publisher.getICEConnectionState() !== 'checking'\n    ) {\n      needNegotiation = true;\n    }\n    if (needNegotiation) {\n      // start negotiation\n      this.negotiate();\n    }\n\n    const targetChannel = this.dataChannelForKind(kind, subscriber);\n    if (targetChannel?.readyState === 'open') {\n      return;\n    }\n\n    // wait until ICE connected\n    const endTime = new Date().getTime() + this.peerConnectionTimeout;\n    while (new Date().getTime() < endTime) {\n      if (\n        transport.isICEConnected &&\n        this.dataChannelForKind(kind, subscriber)?.readyState === 'open'\n      ) {\n        return;\n      }\n      await sleep(50);\n    }\n\n    throw new ConnectionError(\n      `could not establish ${transportName} connection, state: ${transport.getICEConnectionState()}`,\n      ConnectionErrorReason.InternalError,\n    );\n  }\n\n  private async ensurePublisherConnected(kind: DataPacket_Kind) {\n    if (!this.publisherConnectionPromise) {\n      this.publisherConnectionPromise = this.ensureDataTransportConnected(kind, false);\n    }\n    await this.publisherConnectionPromise;\n  }\n\n  /* @internal */\n  verifyTransport(): boolean {\n    if (!this.pcManager) {\n      return false;\n    }\n    // primary connection\n    if (this.pcManager.currentState !== PCTransportState.CONNECTED) {\n      return false;\n    }\n\n    // ensure signal is connected\n    if (!this.client.ws || this.client.ws.readyState === WebSocket.CLOSED) {\n      return false;\n    }\n    return true;\n  }\n\n  /** @internal */\n  async negotiate(): Promise<void> {\n    // observe signal state\n    return new Promise<void>(async (resolve, reject) => {\n      if (!this.pcManager) {\n        reject(new NegotiationError('PC manager is closed'));\n        return;\n      }\n\n      this.pcManager.requirePublisher();\n      // don't negotiate without any transceivers or data channel, it will generate sdp without ice frag then negotiate failed\n      if (\n        this.pcManager.publisher.getTransceivers().length == 0 &&\n        !this.lossyDC &&\n        !this.reliableDC\n      ) {\n        this.createDataChannels();\n      }\n\n      const abortController = new AbortController();\n\n      const handleClosed = () => {\n        abortController.abort();\n        this.log.debug('engine disconnected while negotiation was ongoing', this.logContext);\n        resolve();\n        return;\n      };\n\n      if (this.isClosed) {\n        reject('cannot negotiate on closed engine');\n      }\n      this.on(EngineEvent.Closing, handleClosed);\n\n      this.pcManager.publisher.once(\n        PCEvents.RTPVideoPayloadTypes,\n        (rtpTypes: MediaAttributes['rtp']) => {\n          const rtpMap = new Map<number, VideoCodec>();\n          rtpTypes.forEach((rtp) => {\n            const codec = rtp.codec.toLowerCase();\n            if (isVideoCodec(codec)) {\n              rtpMap.set(rtp.payload, codec);\n            }\n          });\n          this.emit(EngineEvent.RTPVideoMapUpdate, rtpMap);\n        },\n      );\n\n      try {\n        await this.pcManager.negotiate(abortController);\n        resolve();\n      } catch (e: any) {\n        if (e instanceof NegotiationError) {\n          this.fullReconnectOnNext = true;\n        }\n        this.handleDisconnect('negotiation', ReconnectReason.RR_UNKNOWN);\n        reject(e);\n      } finally {\n        this.off(EngineEvent.Closing, handleClosed);\n      }\n    });\n  }\n\n  dataChannelForKind(kind: DataPacket_Kind, sub?: boolean): RTCDataChannel | undefined {\n    if (!sub) {\n      if (kind === DataPacket_Kind.LOSSY) {\n        return this.lossyDC;\n      }\n      if (kind === DataPacket_Kind.RELIABLE) {\n        return this.reliableDC;\n      }\n    } else {\n      if (kind === DataPacket_Kind.LOSSY) {\n        return this.lossyDCSub;\n      }\n      if (kind === DataPacket_Kind.RELIABLE) {\n        return this.reliableDCSub;\n      }\n    }\n  }\n\n  /** @internal */\n  sendSyncState(remoteTracks: RemoteTrackPublication[], localTracks: LocalTrackPublication[]) {\n    if (!this.pcManager) {\n      this.log.warn('sync state cannot be sent without peer connection setup', this.logContext);\n      return;\n    }\n    const previousAnswer = this.pcManager.subscriber.getLocalDescription();\n    const previousOffer = this.pcManager.subscriber.getRemoteDescription();\n\n    /* 1. autosubscribe on, so subscribed tracks = all tracks - unsub tracks,\n          in this case, we send unsub tracks, so server add all tracks to this\n          subscribe pc and unsub special tracks from it.\n       2. autosubscribe off, we send subscribed tracks.\n    */\n    const autoSubscribe = this.signalOpts?.autoSubscribe ?? true;\n    const trackSids = new Array<string>();\n    const trackSidsDisabled = new Array<string>();\n\n    remoteTracks.forEach((track) => {\n      if (track.isDesired !== autoSubscribe) {\n        trackSids.push(track.trackSid);\n      }\n      if (!track.isEnabled) {\n        trackSidsDisabled.push(track.trackSid);\n      }\n    });\n\n    this.client.sendSyncState(\n      new SyncState({\n        answer: previousAnswer\n          ? toProtoSessionDescription({\n              sdp: previousAnswer.sdp,\n              type: previousAnswer.type,\n            })\n          : undefined,\n        offer: previousOffer\n          ? toProtoSessionDescription({\n              sdp: previousOffer.sdp,\n              type: previousOffer.type,\n            })\n          : undefined,\n        subscription: new UpdateSubscription({\n          trackSids,\n          subscribe: !autoSubscribe,\n          participantTracks: [],\n        }),\n        publishTracks: getTrackPublicationInfo(localTracks),\n        dataChannels: this.dataChannelsInfo(),\n        trackSidsDisabled,\n      }),\n    );\n  }\n\n  /* @internal */\n  failNext() {\n    // debugging method to fail the next reconnect/resume attempt\n    this.shouldFailNext = true;\n  }\n\n  private dataChannelsInfo(): DataChannelInfo[] {\n    const infos: DataChannelInfo[] = [];\n    const getInfo = (dc: RTCDataChannel | undefined, target: SignalTarget) => {\n      if (dc?.id !== undefined && dc.id !== null) {\n        infos.push(\n          new DataChannelInfo({\n            label: dc.label,\n            id: dc.id,\n            target,\n          }),\n        );\n      }\n    };\n    getInfo(this.dataChannelForKind(DataPacket_Kind.LOSSY), SignalTarget.PUBLISHER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.RELIABLE), SignalTarget.PUBLISHER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.LOSSY, true), SignalTarget.SUBSCRIBER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.RELIABLE, true), SignalTarget.SUBSCRIBER);\n    return infos;\n  }\n\n  private clearReconnectTimeout() {\n    if (this.reconnectTimeout) {\n      CriticalTimers.clearTimeout(this.reconnectTimeout);\n    }\n  }\n\n  private clearPendingReconnect() {\n    this.clearReconnectTimeout();\n    this.reconnectAttempts = 0;\n  }\n\n  private handleBrowserOnLine = () => {\n    // in case the engine is currently reconnecting, attempt a reconnect immediately after the browser state has changed to 'onLine'\n    if (this.client.currentState === SignalConnectionState.RECONNECTING) {\n      this.clearReconnectTimeout();\n      this.attemptReconnect(ReconnectReason.RR_SIGNAL_DISCONNECTED);\n    }\n  };\n\n  private registerOnLineListener() {\n    if (isWeb()) {\n      window.addEventListener('online', this.handleBrowserOnLine);\n    }\n  }\n\n  private deregisterOnLineListener() {\n    if (isWeb()) {\n      window.removeEventListener('online', this.handleBrowserOnLine);\n    }\n  }\n}\n\nclass SignalReconnectError extends Error {}\n\nexport type EngineEventCallbacks = {\n  connected: (joinResp: JoinResponse) => void;\n  disconnected: (reason?: DisconnectReason) => void;\n  resuming: () => void;\n  resumed: () => void;\n  restarting: () => void;\n  restarted: () => void;\n  signalResumed: () => void;\n  signalRestarted: (joinResp: JoinResponse) => void;\n  closing: () => void;\n  mediaTrackAdded: (\n    track: MediaStreamTrack,\n    streams: MediaStream,\n    receiver: RTCRtpReceiver,\n  ) => void;\n  activeSpeakersUpdate: (speakers: Array<SpeakerInfo>) => void;\n  dataPacketReceived: (packet: DataPacket) => void;\n  transcriptionReceived: (transcription: Transcription) => void;\n  transportsCreated: (publisher: PCTransport, subscriber: PCTransport) => void;\n  /** @internal */\n  trackSenderAdded: (track: Track, sender: RTCRtpSender) => void;\n  rtpVideoMapUpdate: (rtpMap: Map<number, VideoCodec>) => void;\n  dcBufferStatusChanged: (isLow: boolean, kind: DataPacket_Kind) => void;\n  participantUpdate: (infos: ParticipantInfo[]) => void;\n  roomUpdate: (room: RoomModel) => void;\n  connectionQualityUpdate: (update: ConnectionQualityUpdate) => void;\n  speakersChanged: (speakerUpdates: SpeakerInfo[]) => void;\n  streamStateChanged: (update: StreamStateUpdate) => void;\n  subscriptionError: (resp: SubscriptionResponse) => void;\n  subscriptionPermissionUpdate: (update: SubscriptionPermissionUpdate) => void;\n  subscribedQualityUpdate: (update: SubscribedQualityUpdate) => void;\n  localTrackUnpublished: (unpublishedResponse: TrackUnpublishedResponse) => void;\n  localTrackSubscribed: (trackSid: string) => void;\n  remoteMute: (trackSid: string, muted: boolean) => void;\n  offline: () => void;\n  signalRequestResponse: (response: RequestResponse) => void;\n};\n\nfunction supportOptionalDatachannel(protocol: number | undefined): boolean {\n  return protocol !== undefined && protocol > 13;\n}\n\nfunction applyUserDataCompat(newObj: DataPacket, oldObj: UserPacket) {\n  const participantIdentity = newObj.participantIdentity\n    ? newObj.participantIdentity\n    : oldObj.participantIdentity;\n  newObj.participantIdentity = participantIdentity;\n  oldObj.participantIdentity = participantIdentity;\n\n  const destinationIdentities =\n    newObj.destinationIdentities.length !== 0\n      ? newObj.destinationIdentities\n      : oldObj.destinationIdentities;\n  newObj.destinationIdentities = destinationIdentities;\n  oldObj.destinationIdentities = destinationIdentities;\n}\n","import type { RegionInfo, RegionSettings } from '@livekit/protocol';\nimport log from '../logger';\nimport { ConnectionError, ConnectionErrorReason } from './errors';\nimport { isCloud } from './utils';\n\nexport class RegionUrlProvider {\n  private serverUrl: URL;\n\n  private token: string;\n\n  private regionSettings: RegionSettings | undefined;\n\n  private lastUpdateAt: number = 0;\n\n  private settingsCacheTime = 3_000;\n\n  private attemptedRegions: RegionInfo[] = [];\n\n  constructor(url: string, token: string) {\n    this.serverUrl = new URL(url);\n    this.token = token;\n  }\n\n  updateToken(token: string) {\n    this.token = token;\n  }\n\n  isCloud() {\n    return isCloud(this.serverUrl);\n  }\n\n  getServerUrl() {\n    return this.serverUrl;\n  }\n\n  async getNextBestRegionUrl(abortSignal?: AbortSignal) {\n    if (!this.isCloud()) {\n      throw Error('region availability is only supported for LiveKit Cloud domains');\n    }\n    if (!this.regionSettings || Date.now() - this.lastUpdateAt > this.settingsCacheTime) {\n      this.regionSettings = await this.fetchRegionSettings(abortSignal);\n    }\n    const regionsLeft = this.regionSettings.regions.filter(\n      (region) => !this.attemptedRegions.find((attempted) => attempted.url === region.url),\n    );\n    if (regionsLeft.length > 0) {\n      const nextRegion = regionsLeft[0];\n      this.attemptedRegions.push(nextRegion);\n      log.debug(`next region: ${nextRegion.region}`);\n      return nextRegion.url;\n    } else {\n      return null;\n    }\n  }\n\n  resetAttempts() {\n    this.attemptedRegions = [];\n  }\n\n  /* @internal */\n  async fetchRegionSettings(signal?: AbortSignal) {\n    const regionSettingsResponse = await fetch(`${getCloudConfigUrl(this.serverUrl)}/regions`, {\n      headers: { authorization: `Bearer ${this.token}` },\n      signal,\n    });\n    if (regionSettingsResponse.ok) {\n      const regionSettings = (await regionSettingsResponse.json()) as RegionSettings;\n      this.lastUpdateAt = Date.now();\n      return regionSettings;\n    } else {\n      throw new ConnectionError(\n        `Could not fetch region settings: ${regionSettingsResponse.statusText}`,\n        regionSettingsResponse.status === 401\n          ? ConnectionErrorReason.NotAllowed\n          : ConnectionErrorReason.InternalError,\n        regionSettingsResponse.status,\n      );\n    }\n  }\n\n  setServerReportedRegions(regions: RegionSettings) {\n    this.regionSettings = regions;\n    this.lastUpdateAt = Date.now();\n  }\n}\n\nfunction getCloudConfigUrl(serverUrl: URL) {\n  return `${serverUrl.protocol.replace('ws', 'http')}//${serverUrl.host}/settings`;\n}\n","// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { RpcError as RpcError_Proto } from '@livekit/protocol';\n\n/** Parameters for initiating an RPC call */\nexport interface PerformRpcParams {\n  /** The `identity` of the destination participant */\n  destinationIdentity: string;\n  /** The method name to call */\n  method: string;\n  /** The method payload */\n  payload: string;\n  /** Timeout for receiving a response after initial connection (milliseconds). Default: 10000 */\n  responseTimeout?: number;\n}\n\n/**\n * Data passed to method handler for incoming RPC invocations\n */\nexport interface RpcInvocationData {\n  /**\n   * The unique request ID. Will match at both sides of the call, useful for debugging or logging.\n   */\n  requestId: string;\n\n  /**\n   * The unique participant identity of the caller.\n   */\n  callerIdentity: string;\n\n  /**\n   * The payload of the request. User-definable format, typically JSON.\n   */\n  payload: string;\n\n  /**\n   * The maximum time the caller will wait for a response.\n   */\n  responseTimeout: number;\n}\n\n/**\n * Specialized error handling for RPC methods.\n *\n * Instances of this type, when thrown in a method handler, will have their `message`\n * serialized and sent across the wire. The sender will receive an equivalent error on the other side.\n *\n * Built-in types are included but developers may use any string, with a max length of 256 bytes.\n */\n\nexport class RpcError extends Error {\n  static MAX_MESSAGE_BYTES = 256;\n\n  static MAX_DATA_BYTES = 15360; // 15 KB\n\n  code: number;\n\n  data?: string;\n\n  /**\n   * Creates an error object with the given code and message, plus an optional data payload.\n   *\n   * If thrown in an RPC method handler, the error will be sent back to the caller.\n   *\n   * Error codes 1001-1999 are reserved for built-in errors (see RpcError.ErrorCode for their meanings).\n   */\n  constructor(code: number, message: string, data?: string) {\n    super(message);\n    this.code = code;\n    this.message = truncateBytes(message, RpcError.MAX_MESSAGE_BYTES);\n    this.data = data ? truncateBytes(data, RpcError.MAX_DATA_BYTES) : undefined;\n  }\n\n  /**\n   * @internal\n   */\n  static fromProto(proto: RpcError_Proto) {\n    return new RpcError(proto.code, proto.message, proto.data);\n  }\n\n  /**\n   * @internal\n   */\n  toProto() {\n    return new RpcError_Proto({\n      code: this.code as number,\n      message: this.message,\n      data: this.data,\n    });\n  }\n\n  static ErrorCode = {\n    APPLICATION_ERROR: 1500,\n    CONNECTION_TIMEOUT: 1501,\n    RESPONSE_TIMEOUT: 1502,\n    RECIPIENT_DISCONNECTED: 1503,\n    RESPONSE_PAYLOAD_TOO_LARGE: 1504,\n    SEND_FAILED: 1505,\n\n    UNSUPPORTED_METHOD: 1400,\n    RECIPIENT_NOT_FOUND: 1401,\n    REQUEST_PAYLOAD_TOO_LARGE: 1402,\n    UNSUPPORTED_SERVER: 1403,\n    UNSUPPORTED_VERSION: 1404,\n  } as const;\n\n  /**\n   * @internal\n   */\n  static ErrorMessage: Record<keyof typeof RpcError.ErrorCode, string> = {\n    APPLICATION_ERROR: 'Application error in method handler',\n    CONNECTION_TIMEOUT: 'Connection timeout',\n    RESPONSE_TIMEOUT: 'Response timeout',\n    RECIPIENT_DISCONNECTED: 'Recipient disconnected',\n    RESPONSE_PAYLOAD_TOO_LARGE: 'Response payload too large',\n    SEND_FAILED: 'Failed to send',\n\n    UNSUPPORTED_METHOD: 'Method not supported at destination',\n    RECIPIENT_NOT_FOUND: 'Recipient not found',\n    REQUEST_PAYLOAD_TOO_LARGE: 'Request payload too large',\n    UNSUPPORTED_SERVER: 'RPC not supported by server',\n    UNSUPPORTED_VERSION: 'Unsupported RPC version',\n  } as const;\n\n  /**\n   * Creates an error object from the code, with an auto-populated message.\n   *\n   * @internal\n   */\n  static builtIn(key: keyof typeof RpcError.ErrorCode, data?: string): RpcError {\n    return new RpcError(RpcError.ErrorCode[key], RpcError.ErrorMessage[key], data);\n  }\n}\n\n/*\n * Maximum payload size for RPC requests and responses. If a payload exceeds this size,\n * the RPC call will fail with a REQUEST_PAYLOAD_TOO_LARGE(1402) or RESPONSE_PAYLOAD_TOO_LARGE(1504) error.\n */\nexport const MAX_PAYLOAD_BYTES = 15360; // 15 KB\n\n/**\n * @internal\n */\nexport function byteLength(str: string): number {\n  const encoder = new TextEncoder();\n  return encoder.encode(str).length;\n}\n\n/**\n * @internal\n */\nexport function truncateBytes(str: string, maxBytes: number): string {\n  if (byteLength(str) <= maxBytes) {\n    return str;\n  }\n\n  let low = 0;\n  let high = str.length;\n  const encoder = new TextEncoder();\n\n  while (low < high) {\n    const mid = Math.floor((low + high + 1) / 2);\n    if (encoder.encode(str.slice(0, mid)).length <= maxBytes) {\n      low = mid;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  return str.slice(0, low);\n}\n","import { TrackEvent } from '../events';\nimport { monitorFrequency } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { Track } from './Track';\nimport { supportsSynchronizationSources } from './utils';\n\nexport default abstract class RemoteTrack<\n  TrackKind extends Track.Kind = Track.Kind,\n> extends Track<TrackKind> {\n  /** @internal */\n  receiver: RTCRtpReceiver | undefined;\n\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    sid: string,\n    kind: TrackKind,\n    receiver: RTCRtpReceiver,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, kind, loggerOptions);\n\n    this.sid = sid;\n    this.receiver = receiver;\n  }\n\n  /** @internal */\n  setMuted(muted: boolean) {\n    if (this.isMuted !== muted) {\n      this.isMuted = muted;\n      this._mediaStreamTrack.enabled = !muted;\n      this.emit(muted ? TrackEvent.Muted : TrackEvent.Unmuted, this);\n    }\n  }\n\n  /** @internal */\n  setMediaStream(stream: MediaStream) {\n    // this is needed to determine when the track is finished\n    this.mediaStream = stream;\n    const onRemoveTrack = (event: MediaStreamTrackEvent) => {\n      if (event.track === this._mediaStreamTrack) {\n        stream.removeEventListener('removetrack', onRemoveTrack);\n        if (this.receiver && 'playoutDelayHint' in this.receiver) {\n          this.receiver.playoutDelayHint = undefined;\n        }\n        this.receiver = undefined;\n        this._currentBitrate = 0;\n        this.emit(TrackEvent.Ended, this);\n      }\n    };\n    stream.addEventListener('removetrack', onRemoveTrack);\n  }\n\n  start() {\n    this.startMonitor();\n    // use `enabled` of track to enable re-use of transceiver\n    super.enable();\n  }\n\n  stop() {\n    this.stopMonitor();\n    // use `enabled` of track to enable re-use of transceiver\n    super.disable();\n  }\n\n  /**\n   * Gets the RTCStatsReport for the RemoteTrack's underlying RTCRtpReceiver\n   * See https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport\n   *\n   * @returns Promise<RTCStatsReport> | undefined\n   */\n  async getRTCStatsReport(): Promise<RTCStatsReport | undefined> {\n    if (!this.receiver?.getStats) {\n      return;\n    }\n    const statsReport = await this.receiver.getStats();\n    return statsReport;\n  }\n\n  /**\n   * Allows to set a playout delay (in seconds) for this track.\n   * A higher value allows for more buffering of the track in the browser\n   * and will result in a delay of media being played back of `delayInSeconds`\n   */\n  setPlayoutDelay(delayInSeconds: number): void {\n    if (this.receiver) {\n      if ('playoutDelayHint' in this.receiver) {\n        this.receiver.playoutDelayHint = delayInSeconds;\n      } else {\n        this.log.warn('Playout delay not supported in this browser');\n      }\n    } else {\n      this.log.warn('Cannot set playout delay, track already ended');\n    }\n  }\n\n  /**\n   * Returns the current playout delay (in seconds) of this track.\n   */\n  getPlayoutDelay(): number {\n    if (this.receiver) {\n      if ('playoutDelayHint' in this.receiver) {\n        return this.receiver.playoutDelayHint as number;\n      } else {\n        this.log.warn('Playout delay not supported in this browser');\n      }\n    } else {\n      this.log.warn('Cannot get playout delay, track already ended');\n    }\n    return 0;\n  }\n\n  /* @internal */\n  startMonitor() {\n    if (!this.monitorInterval) {\n      this.monitorInterval = setInterval(() => this.monitorReceiver(), monitorFrequency);\n    }\n    if (supportsSynchronizationSources()) {\n      this.registerTimeSyncUpdate();\n    }\n  }\n\n  protected abstract monitorReceiver(): void;\n\n  registerTimeSyncUpdate() {\n    const loop = () => {\n      this.timeSyncHandle = requestAnimationFrame(() => loop());\n      const sources = this.receiver?.getSynchronizationSources()[0];\n      if (sources) {\n        const { timestamp, rtpTimestamp } = sources;\n        if (rtpTimestamp && this.rtpTimestamp !== rtpTimestamp) {\n          this.emit(TrackEvent.TimeSyncUpdate, { timestamp, rtpTimestamp });\n          this.rtpTimestamp = rtpTimestamp;\n        }\n      }\n    };\n    loop();\n  }\n}\n","import { TrackEvent } from '../events';\nimport type { AudioReceiverStats } from '../stats';\nimport { computeBitrate } from '../stats';\nimport type { LoggerOptions } from '../types';\nimport { isReactNative, supportsSetSinkId } from '../utils';\nimport RemoteTrack from './RemoteTrack';\nimport { Track } from './Track';\nimport type { AudioOutputOptions } from './options';\n\nexport default class RemoteAudioTrack extends RemoteTrack<Track.Kind.Audio> {\n  private prevStats?: AudioReceiverStats;\n\n  private elementVolume: number | undefined;\n\n  private audioContext?: AudioContext;\n\n  private gainNode?: GainNode;\n\n  private sourceNode?: MediaStreamAudioSourceNode;\n\n  private webAudioPluginNodes: AudioNode[];\n\n  private sinkId?: string;\n\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    sid: string,\n    receiver: RTCRtpReceiver,\n    audioContext?: AudioContext,\n    audioOutput?: AudioOutputOptions,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, sid, Track.Kind.Audio, receiver, loggerOptions);\n    this.audioContext = audioContext;\n    this.webAudioPluginNodes = [];\n    if (audioOutput) {\n      this.sinkId = audioOutput.deviceId;\n    }\n  }\n\n  /**\n   * sets the volume for all attached audio elements\n   */\n  setVolume(volume: number) {\n    for (const el of this.attachedElements) {\n      if (this.audioContext) {\n        this.gainNode?.gain.setTargetAtTime(volume, 0, 0.1);\n      } else {\n        el.volume = volume;\n      }\n    }\n    if (isReactNative()) {\n      // @ts-ignore\n      this._mediaStreamTrack._setVolume(volume);\n    }\n    this.elementVolume = volume;\n  }\n\n  /**\n   * gets the volume of attached audio elements (loudest)\n   */\n  getVolume(): number {\n    if (this.elementVolume) {\n      return this.elementVolume;\n    }\n    if (isReactNative()) {\n      // RN volume value defaults to 1.0 if hasn't been changed.\n      return 1.0;\n    }\n    let highestVolume = 0;\n    this.attachedElements.forEach((element) => {\n      if (element.volume > highestVolume) {\n        highestVolume = element.volume;\n      }\n    });\n    return highestVolume;\n  }\n\n  /**\n   * calls setSinkId on all attached elements, if supported\n   * @param deviceId audio output device\n   */\n  async setSinkId(deviceId: string) {\n    this.sinkId = deviceId;\n    await Promise.all(\n      this.attachedElements.map((elm) => {\n        if (!supportsSetSinkId(elm)) {\n          return;\n        }\n        /* @ts-ignore */\n        return elm.setSinkId(deviceId) as Promise<void>;\n      }),\n    );\n  }\n\n  attach(): HTMLMediaElement;\n  attach(element: HTMLMediaElement): HTMLMediaElement;\n  attach(element?: HTMLMediaElement): HTMLMediaElement {\n    const needsNewWebAudioConnection = this.attachedElements.length === 0;\n    if (!element) {\n      element = super.attach();\n    } else {\n      super.attach(element);\n    }\n\n    if (this.sinkId && supportsSetSinkId(element)) {\n      /* @ts-ignore */\n      element.setSinkId(this.sinkId);\n    }\n    if (this.audioContext && needsNewWebAudioConnection) {\n      this.log.debug('using audio context mapping', this.logContext);\n      this.connectWebAudio(this.audioContext, element);\n      element.volume = 0;\n      element.muted = true;\n    }\n\n    if (this.elementVolume) {\n      // make sure volume setting is being applied to the newly attached element\n      this.setVolume(this.elementVolume);\n    }\n\n    return element;\n  }\n\n  /**\n   * Detaches from all attached elements\n   */\n  detach(): HTMLMediaElement[];\n\n  /**\n   * Detach from a single element\n   * @param element\n   */\n  detach(element: HTMLMediaElement): HTMLMediaElement;\n  detach(element?: HTMLMediaElement): HTMLMediaElement | HTMLMediaElement[] {\n    let detached: HTMLMediaElement | HTMLMediaElement[];\n    if (!element) {\n      detached = super.detach();\n      this.disconnectWebAudio();\n    } else {\n      detached = super.detach(element);\n      // if there are still any attached elements after detaching, connect webaudio to the first element that's left\n      // disconnect webaudio otherwise\n      if (this.audioContext) {\n        if (this.attachedElements.length > 0) {\n          this.connectWebAudio(this.audioContext, this.attachedElements[0]);\n        } else {\n          this.disconnectWebAudio();\n        }\n      }\n    }\n    return detached;\n  }\n\n  /**\n   * @internal\n   * @experimental\n   */\n  setAudioContext(audioContext: AudioContext | undefined) {\n    this.audioContext = audioContext;\n    if (audioContext && this.attachedElements.length > 0) {\n      this.connectWebAudio(audioContext, this.attachedElements[0]);\n    } else if (!audioContext) {\n      this.disconnectWebAudio();\n    }\n  }\n\n  /**\n   * @internal\n   * @experimental\n   * @param {AudioNode[]} nodes - An array of WebAudio nodes. These nodes should not be connected to each other when passed, as the sdk will take care of connecting them in the order of the array.\n   */\n  setWebAudioPlugins(nodes: AudioNode[]) {\n    this.webAudioPluginNodes = nodes;\n    if (this.attachedElements.length > 0 && this.audioContext) {\n      this.connectWebAudio(this.audioContext, this.attachedElements[0]);\n    }\n  }\n\n  private connectWebAudio(context: AudioContext, element: HTMLMediaElement) {\n    this.disconnectWebAudio();\n    // @ts-ignore attached elements always have a srcObject set\n    this.sourceNode = context.createMediaStreamSource(element.srcObject);\n    let lastNode: AudioNode = this.sourceNode;\n    this.webAudioPluginNodes.forEach((node) => {\n      lastNode.connect(node);\n      lastNode = node;\n    });\n    this.gainNode = context.createGain();\n    lastNode.connect(this.gainNode);\n    this.gainNode.connect(context.destination);\n\n    if (this.elementVolume) {\n      this.gainNode.gain.setTargetAtTime(this.elementVolume, 0, 0.1);\n    }\n\n    // try to resume the context if it isn't running already\n    if (context.state !== 'running') {\n      context\n        .resume()\n        .then(() => {\n          if (context.state !== 'running') {\n            this.emit(\n              TrackEvent.AudioPlaybackFailed,\n              new Error(\"Audio Context couldn't be started automatically\"),\n            );\n          }\n        })\n        .catch((e) => {\n          this.emit(TrackEvent.AudioPlaybackFailed, e);\n        });\n    }\n  }\n\n  private disconnectWebAudio() {\n    this.gainNode?.disconnect();\n    this.sourceNode?.disconnect();\n    this.gainNode = undefined;\n    this.sourceNode = undefined;\n  }\n\n  protected monitorReceiver = async () => {\n    if (!this.receiver) {\n      this._currentBitrate = 0;\n      return;\n    }\n    const stats = await this.getReceiverStats();\n\n    if (stats && this.prevStats && this.receiver) {\n      this._currentBitrate = computeBitrate(stats, this.prevStats);\n    }\n\n    this.prevStats = stats;\n  };\n\n  async getReceiverStats(): Promise<AudioReceiverStats | undefined> {\n    if (!this.receiver || !this.receiver.getStats) {\n      return;\n    }\n\n    const stats = await this.receiver.getStats();\n    let receiverStats: AudioReceiverStats | undefined;\n    stats.forEach((v) => {\n      if (v.type === 'inbound-rtp') {\n        receiverStats = {\n          type: 'audio',\n          timestamp: v.timestamp,\n          jitter: v.jitter,\n          bytesReceived: v.bytesReceived,\n          concealedSamples: v.concealedSamples,\n          concealmentEvents: v.concealmentEvents,\n          silentConcealedSamples: v.silentConcealedSamples,\n          silentConcealmentEvents: v.silentConcealmentEvents,\n          totalAudioEnergy: v.totalAudioEnergy,\n          totalSamplesDuration: v.totalSamplesDuration,\n        };\n      }\n    });\n    return receiverStats;\n  }\n}\n","import { debounce } from 'ts-debounce';\nimport { TrackEvent } from '../events';\nimport type { VideoReceiverStats } from '../stats';\nimport { computeBitrate } from '../stats';\nimport CriticalTimers from '../timers';\nimport type { LoggerOptions } from '../types';\nimport type { ObservableMediaElement } from '../utils';\nimport { getDevicePixelRatio, getIntersectionObserver, getResizeObserver, isWeb } from '../utils';\nimport RemoteTrack from './RemoteTrack';\nimport { Track, attachToElement, detachTrack } from './Track';\nimport type { AdaptiveStreamSettings } from './types';\n\nconst REACTION_DELAY = 100;\n\nexport default class RemoteVideoTrack extends RemoteTrack<Track.Kind.Video> {\n  private prevStats?: VideoReceiverStats;\n\n  private elementInfos: ElementInfo[] = [];\n\n  private adaptiveStreamSettings?: AdaptiveStreamSettings;\n\n  private lastVisible?: boolean;\n\n  private lastDimensions?: Track.Dimensions;\n\n  constructor(\n    mediaTrack: MediaStreamTrack,\n    sid: string,\n    receiver: RTCRtpReceiver,\n    adaptiveStreamSettings?: AdaptiveStreamSettings,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(mediaTrack, sid, Track.Kind.Video, receiver, loggerOptions);\n    this.adaptiveStreamSettings = adaptiveStreamSettings;\n  }\n\n  get isAdaptiveStream(): boolean {\n    return this.adaptiveStreamSettings !== undefined;\n  }\n\n  /**\n   * Note: When using adaptiveStream, you need to use remoteVideoTrack.attach() to add the track to a HTMLVideoElement, otherwise your video tracks might never start\n   */\n  get mediaStreamTrack() {\n    return this._mediaStreamTrack;\n  }\n\n  /** @internal */\n  setMuted(muted: boolean) {\n    super.setMuted(muted);\n\n    this.attachedElements.forEach((element) => {\n      // detach or attach\n      if (muted) {\n        detachTrack(this._mediaStreamTrack, element);\n      } else {\n        attachToElement(this._mediaStreamTrack, element);\n      }\n    });\n  }\n\n  attach(): HTMLMediaElement;\n  attach(element: HTMLMediaElement): HTMLMediaElement;\n  attach(element?: HTMLMediaElement): HTMLMediaElement {\n    if (!element) {\n      element = super.attach();\n    } else {\n      super.attach(element);\n    }\n\n    // It's possible attach is called multiple times on an element. When that's\n    // the case, we'd want to avoid adding duplicate elementInfos\n    if (\n      this.adaptiveStreamSettings &&\n      this.elementInfos.find((info) => info.element === element) === undefined\n    ) {\n      const elementInfo = new HTMLElementInfo(element);\n      this.observeElementInfo(elementInfo);\n    }\n    return element;\n  }\n\n  /**\n   * Observe an ElementInfo for changes when adaptive streaming.\n   * @param elementInfo\n   * @internal\n   */\n  observeElementInfo(elementInfo: ElementInfo) {\n    if (\n      this.adaptiveStreamSettings &&\n      this.elementInfos.find((info) => info === elementInfo) === undefined\n    ) {\n      elementInfo.handleResize = () => {\n        this.debouncedHandleResize();\n      };\n      elementInfo.handleVisibilityChanged = () => {\n        this.updateVisibility();\n      };\n      this.elementInfos.push(elementInfo);\n      elementInfo.observe();\n      // trigger the first resize update cycle\n      // if the tab is backgrounded, the initial resize event does not fire until\n      // the tab comes into focus for the first time.\n      this.debouncedHandleResize();\n      this.updateVisibility();\n    } else {\n      this.log.warn('visibility resize observer not triggered', this.logContext);\n    }\n  }\n\n  /**\n   * Stop observing an ElementInfo for changes.\n   * @param elementInfo\n   * @internal\n   */\n  stopObservingElementInfo(elementInfo: ElementInfo) {\n    if (!this.isAdaptiveStream) {\n      this.log.warn('stopObservingElementInfo ignored', this.logContext);\n      return;\n    }\n    const stopElementInfos = this.elementInfos.filter((info) => info === elementInfo);\n    for (const info of stopElementInfos) {\n      info.stopObserving();\n    }\n    this.elementInfos = this.elementInfos.filter((info) => info !== elementInfo);\n    this.updateVisibility();\n    this.debouncedHandleResize();\n  }\n\n  detach(): HTMLMediaElement[];\n  detach(element: HTMLMediaElement): HTMLMediaElement;\n  detach(element?: HTMLMediaElement): HTMLMediaElement | HTMLMediaElement[] {\n    let detachedElements: HTMLMediaElement[] = [];\n    if (element) {\n      this.stopObservingElement(element);\n      return super.detach(element);\n    }\n    detachedElements = super.detach();\n\n    for (const e of detachedElements) {\n      this.stopObservingElement(e);\n    }\n\n    return detachedElements;\n  }\n\n  /** @internal */\n  getDecoderImplementation(): string | undefined {\n    return this.prevStats?.decoderImplementation;\n  }\n\n  protected monitorReceiver = async () => {\n    if (!this.receiver) {\n      this._currentBitrate = 0;\n      return;\n    }\n    const stats = await this.getReceiverStats();\n\n    if (stats && this.prevStats && this.receiver) {\n      this._currentBitrate = computeBitrate(stats, this.prevStats);\n    }\n\n    this.prevStats = stats;\n  };\n\n  async getReceiverStats(): Promise<VideoReceiverStats | undefined> {\n    if (!this.receiver || !this.receiver.getStats) {\n      return;\n    }\n\n    const stats = await this.receiver.getStats();\n    let receiverStats: VideoReceiverStats | undefined;\n    let codecID = '';\n    let codecs = new Map<string, any>();\n    stats.forEach((v) => {\n      if (v.type === 'inbound-rtp') {\n        codecID = v.codecId;\n        receiverStats = {\n          type: 'video',\n          framesDecoded: v.framesDecoded,\n          framesDropped: v.framesDropped,\n          framesReceived: v.framesReceived,\n          packetsReceived: v.packetsReceived,\n          packetsLost: v.packetsLost,\n          frameWidth: v.frameWidth,\n          frameHeight: v.frameHeight,\n          pliCount: v.pliCount,\n          firCount: v.firCount,\n          nackCount: v.nackCount,\n          jitter: v.jitter,\n          timestamp: v.timestamp,\n          bytesReceived: v.bytesReceived,\n          decoderImplementation: v.decoderImplementation,\n        };\n      } else if (v.type === 'codec') {\n        codecs.set(v.id, v);\n      }\n    });\n    if (receiverStats && codecID !== '' && codecs.get(codecID)) {\n      receiverStats.mimeType = codecs.get(codecID).mimeType;\n    }\n    return receiverStats;\n  }\n\n  private stopObservingElement(element: HTMLMediaElement) {\n    const stopElementInfos = this.elementInfos.filter((info) => info.element === element);\n    for (const info of stopElementInfos) {\n      this.stopObservingElementInfo(info);\n    }\n  }\n\n  protected async handleAppVisibilityChanged() {\n    await super.handleAppVisibilityChanged();\n    if (!this.isAdaptiveStream) return;\n    this.updateVisibility();\n  }\n\n  private readonly debouncedHandleResize = debounce(() => {\n    this.updateDimensions();\n  }, REACTION_DELAY);\n\n  private updateVisibility() {\n    const lastVisibilityChange = this.elementInfos.reduce(\n      (prev, info) => Math.max(prev, info.visibilityChangedAt || 0),\n      0,\n    );\n\n    const backgroundPause =\n      (this.adaptiveStreamSettings?.pauseVideoInBackground ?? true) // default to true\n        ? this.isInBackground\n        : false;\n    const isPiPMode = this.elementInfos.some((info) => info.pictureInPicture);\n    const isVisible =\n      (this.elementInfos.some((info) => info.visible) && !backgroundPause) || isPiPMode;\n\n    if (this.lastVisible === isVisible) {\n      return;\n    }\n\n    if (!isVisible && Date.now() - lastVisibilityChange < REACTION_DELAY) {\n      // delay hidden events\n      CriticalTimers.setTimeout(() => {\n        this.updateVisibility();\n      }, REACTION_DELAY);\n      return;\n    }\n\n    this.lastVisible = isVisible;\n    this.emit(TrackEvent.VisibilityChanged, isVisible, this);\n  }\n\n  private updateDimensions() {\n    let maxWidth = 0;\n    let maxHeight = 0;\n    const pixelDensity = this.getPixelDensity();\n    for (const info of this.elementInfos) {\n      const currentElementWidth = info.width() * pixelDensity;\n      const currentElementHeight = info.height() * pixelDensity;\n      if (currentElementWidth + currentElementHeight > maxWidth + maxHeight) {\n        maxWidth = currentElementWidth;\n        maxHeight = currentElementHeight;\n      }\n    }\n\n    if (this.lastDimensions?.width === maxWidth && this.lastDimensions?.height === maxHeight) {\n      return;\n    }\n\n    this.lastDimensions = {\n      width: maxWidth,\n      height: maxHeight,\n    };\n\n    this.emit(TrackEvent.VideoDimensionsChanged, this.lastDimensions, this);\n  }\n\n  private getPixelDensity(): number {\n    const pixelDensity = this.adaptiveStreamSettings?.pixelDensity;\n    if (pixelDensity === 'screen') {\n      return getDevicePixelRatio();\n    } else if (!pixelDensity) {\n      // when unset, we'll pick a sane default here.\n      // for higher pixel density devices (mobile phones, etc), we'll use 2\n      // otherwise it defaults to 1\n      const devicePixelRatio = getDevicePixelRatio();\n      if (devicePixelRatio > 2) {\n        return 2;\n      } else {\n        return 1;\n      }\n    }\n    return pixelDensity;\n  }\n}\n\nexport interface ElementInfo {\n  element: object;\n  width(): number;\n  height(): number;\n  visible: boolean;\n  pictureInPicture: boolean;\n  visibilityChangedAt: number | undefined;\n\n  handleResize?: () => void;\n  handleVisibilityChanged?: () => void;\n  observe(): void;\n  stopObserving(): void;\n}\n\nclass HTMLElementInfo implements ElementInfo {\n  element: HTMLMediaElement;\n\n  get visible(): boolean {\n    return this.isPiP || this.isIntersecting;\n  }\n\n  get pictureInPicture(): boolean {\n    return this.isPiP;\n  }\n\n  visibilityChangedAt: number | undefined;\n\n  handleResize?: () => void;\n\n  handleVisibilityChanged?: () => void;\n\n  private isPiP: boolean;\n\n  private isIntersecting: boolean;\n\n  constructor(element: HTMLMediaElement, visible?: boolean) {\n    this.element = element;\n    this.isIntersecting = visible ?? isElementInViewport(element);\n    this.isPiP = isWeb() && isElementInPiP(element);\n    this.visibilityChangedAt = 0;\n  }\n\n  width(): number {\n    return this.element.clientWidth;\n  }\n\n  height(): number {\n    return this.element.clientHeight;\n  }\n\n  observe() {\n    // make sure we update the current visible state once we start to observe\n    this.isIntersecting = isElementInViewport(this.element);\n    this.isPiP = isElementInPiP(this.element);\n\n    (this.element as ObservableMediaElement).handleResize = () => {\n      this.handleResize?.();\n    };\n    (this.element as ObservableMediaElement).handleVisibilityChanged = this.onVisibilityChanged;\n\n    getIntersectionObserver().observe(this.element);\n    getResizeObserver().observe(this.element);\n    (this.element as HTMLVideoElement).addEventListener('enterpictureinpicture', this.onEnterPiP);\n    (this.element as HTMLVideoElement).addEventListener('leavepictureinpicture', this.onLeavePiP);\n    window.documentPictureInPicture?.addEventListener('enter', this.onEnterPiP);\n    window.documentPictureInPicture?.window?.addEventListener('pagehide', this.onLeavePiP);\n  }\n\n  private onVisibilityChanged = (entry: IntersectionObserverEntry) => {\n    const { target, isIntersecting } = entry;\n    if (target === this.element) {\n      this.isIntersecting = isIntersecting;\n      this.isPiP = isElementInPiP(this.element);\n      this.visibilityChangedAt = Date.now();\n      this.handleVisibilityChanged?.();\n    }\n  };\n\n  private onEnterPiP = () => {\n    window.documentPictureInPicture?.window?.addEventListener('pagehide', this.onLeavePiP);\n    this.isPiP = isElementInPiP(this.element);\n    this.handleVisibilityChanged?.();\n  };\n\n  private onLeavePiP = () => {\n    this.isPiP = isElementInPiP(this.element);\n    this.handleVisibilityChanged?.();\n  };\n\n  stopObserving() {\n    getIntersectionObserver()?.unobserve(this.element);\n    getResizeObserver()?.unobserve(this.element);\n    (this.element as HTMLVideoElement).removeEventListener(\n      'enterpictureinpicture',\n      this.onEnterPiP,\n    );\n    (this.element as HTMLVideoElement).removeEventListener(\n      'leavepictureinpicture',\n      this.onLeavePiP,\n    );\n    window.documentPictureInPicture?.removeEventListener('enter', this.onEnterPiP);\n    window.documentPictureInPicture?.window?.removeEventListener('pagehide', this.onLeavePiP);\n  }\n}\n\nfunction isElementInPiP(el: HTMLElement) {\n  // Simple video PiP\n  if (document.pictureInPictureElement === el) return true;\n  // Document PiP\n  if (window.documentPictureInPicture?.window)\n    return isElementInViewport(el, window.documentPictureInPicture?.window);\n  return false;\n}\n\n// does not account for occlusion by other elements or opacity property\nfunction isElementInViewport(el: HTMLElement, win?: Window) {\n  const viewportWindow = win || window;\n  let top = el.offsetTop;\n  let left = el.offsetLeft;\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  const { hidden } = el;\n  const { display } = getComputedStyle(el);\n\n  while (el.offsetParent) {\n    el = el.offsetParent as HTMLElement;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n\n  return (\n    top < viewportWindow.pageYOffset + viewportWindow.innerHeight &&\n    left < viewportWindow.pageXOffset + viewportWindow.innerWidth &&\n    top + height > viewportWindow.pageYOffset &&\n    left + width > viewportWindow.pageXOffset &&\n    !hidden &&\n    display !== 'none'\n  );\n}\n","import { Encryption_Type } from '@livekit/protocol';\nimport type {\n  SubscriptionError,\n  TrackInfo,\n  UpdateSubscription,\n  UpdateTrackSettings,\n} from '@livekit/protocol';\nimport { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport log, { LoggerNames, getLogger } from '../../logger';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions, TranscriptionSegment } from '../types';\nimport LocalAudioTrack from './LocalAudioTrack';\nimport LocalVideoTrack from './LocalVideoTrack';\nimport RemoteAudioTrack from './RemoteAudioTrack';\nimport type RemoteTrack from './RemoteTrack';\nimport RemoteVideoTrack from './RemoteVideoTrack';\nimport { Track } from './Track';\nimport { getLogContextFromTrack } from './utils';\n\nexport class TrackPublication extends (EventEmitter as new () => TypedEventEmitter<PublicationEventCallbacks>) {\n  kind: Track.Kind;\n\n  trackName: string;\n\n  trackSid: Track.SID;\n\n  track?: Track;\n\n  source: Track.Source;\n\n  /** MimeType of the published track */\n  mimeType?: string;\n\n  /** dimension of the original published stream, video-only */\n  dimensions?: Track.Dimensions;\n\n  /** true if track was simulcasted to server, video-only */\n  simulcasted?: boolean;\n\n  /** @internal */\n  trackInfo?: TrackInfo;\n\n  protected metadataMuted: boolean = false;\n\n  protected encryption: Encryption_Type = Encryption_Type.NONE;\n\n  protected log = log;\n\n  private loggerContextCb?: LoggerOptions['loggerContextCb'];\n\n  constructor(kind: Track.Kind, id: string, name: string, loggerOptions?: LoggerOptions) {\n    super();\n    this.log = getLogger(loggerOptions?.loggerName ?? LoggerNames.Publication);\n    this.loggerContextCb = this.loggerContextCb;\n    this.setMaxListeners(100);\n    this.kind = kind;\n    this.trackSid = id;\n    this.trackName = name;\n    this.source = Track.Source.Unknown;\n  }\n\n  /** @internal */\n  setTrack(track?: Track) {\n    if (this.track) {\n      this.track.off(TrackEvent.Muted, this.handleMuted);\n      this.track.off(TrackEvent.Unmuted, this.handleUnmuted);\n    }\n\n    this.track = track;\n\n    if (track) {\n      // forward events\n      track.on(TrackEvent.Muted, this.handleMuted);\n      track.on(TrackEvent.Unmuted, this.handleUnmuted);\n    }\n  }\n\n  protected get logContext() {\n    return {\n      ...this.loggerContextCb?.(),\n      ...getLogContextFromTrack(this),\n    };\n  }\n\n  get isMuted(): boolean {\n    return this.metadataMuted;\n  }\n\n  get isEnabled(): boolean {\n    return true;\n  }\n\n  get isSubscribed(): boolean {\n    return this.track !== undefined;\n  }\n\n  get isEncrypted(): boolean {\n    return this.encryption !== Encryption_Type.NONE;\n  }\n\n  /**\n   * an [AudioTrack] if this publication holds an audio track\n   */\n  get audioTrack(): LocalAudioTrack | RemoteAudioTrack | undefined {\n    if (this.track instanceof LocalAudioTrack || this.track instanceof RemoteAudioTrack) {\n      return this.track;\n    }\n  }\n\n  /**\n   * an [VideoTrack] if this publication holds a video track\n   */\n  get videoTrack(): LocalVideoTrack | RemoteVideoTrack | undefined {\n    if (this.track instanceof LocalVideoTrack || this.track instanceof RemoteVideoTrack) {\n      return this.track;\n    }\n  }\n\n  handleMuted = () => {\n    this.emit(TrackEvent.Muted);\n  };\n\n  handleUnmuted = () => {\n    this.emit(TrackEvent.Unmuted);\n  };\n\n  /** @internal */\n  updateInfo(info: TrackInfo) {\n    this.trackSid = info.sid;\n    this.trackName = info.name;\n    this.source = Track.sourceFromProto(info.source);\n    this.mimeType = info.mimeType;\n    if (this.kind === Track.Kind.Video && info.width > 0) {\n      this.dimensions = {\n        width: info.width,\n        height: info.height,\n      };\n      this.simulcasted = info.simulcast;\n    }\n    this.encryption = info.encryption;\n    this.trackInfo = info;\n    this.log.debug('update publication info', { ...this.logContext, info });\n  }\n}\n\nexport namespace TrackPublication {\n  export enum SubscriptionStatus {\n    Desired = 'desired',\n    Subscribed = 'subscribed',\n    Unsubscribed = 'unsubscribed',\n  }\n\n  export enum PermissionStatus {\n    Allowed = 'allowed',\n    NotAllowed = 'not_allowed',\n  }\n}\n\nexport type PublicationEventCallbacks = {\n  muted: () => void;\n  unmuted: () => void;\n  ended: (track?: Track) => void;\n  updateSettings: (settings: UpdateTrackSettings) => void;\n  subscriptionPermissionChanged: (\n    status: TrackPublication.PermissionStatus,\n    prevStatus: TrackPublication.PermissionStatus,\n  ) => void;\n  updateSubscription: (sub: UpdateSubscription) => void;\n  subscribed: (track: RemoteTrack) => void;\n  unsubscribed: (track: RemoteTrack) => void;\n  subscriptionStatusChanged: (\n    status: TrackPublication.SubscriptionStatus,\n    prevStatus: TrackPublication.SubscriptionStatus,\n  ) => void;\n  subscriptionFailed: (error: SubscriptionError) => void;\n  transcriptionReceived: (transcription: TranscriptionSegment[]) => void;\n  timeSyncUpdate: (timestamp: number) => void;\n};\n","import { AudioTrackFeature, TrackInfo } from '@livekit/protocol';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport LocalAudioTrack from './LocalAudioTrack';\nimport type LocalTrack from './LocalTrack';\nimport type LocalVideoTrack from './LocalVideoTrack';\nimport type { Track } from './Track';\nimport { TrackPublication } from './TrackPublication';\nimport type { TrackPublishOptions } from './options';\n\nexport default class LocalTrackPublication extends TrackPublication {\n  track?: LocalTrack = undefined;\n\n  options?: TrackPublishOptions;\n\n  get isUpstreamPaused() {\n    return this.track?.isUpstreamPaused;\n  }\n\n  constructor(kind: Track.Kind, ti: TrackInfo, track?: LocalTrack, loggerOptions?: LoggerOptions) {\n    super(kind, ti.sid, ti.name, loggerOptions);\n\n    this.updateInfo(ti);\n    this.setTrack(track);\n  }\n\n  setTrack(track?: Track) {\n    if (this.track) {\n      this.track.off(TrackEvent.Ended, this.handleTrackEnded);\n    }\n\n    super.setTrack(track);\n\n    if (track) {\n      track.on(TrackEvent.Ended, this.handleTrackEnded);\n    }\n  }\n\n  get isMuted(): boolean {\n    if (this.track) {\n      return this.track.isMuted;\n    }\n    return super.isMuted;\n  }\n\n  get audioTrack(): LocalAudioTrack | undefined {\n    return super.audioTrack as LocalAudioTrack | undefined;\n  }\n\n  get videoTrack(): LocalVideoTrack | undefined {\n    return super.videoTrack as LocalVideoTrack | undefined;\n  }\n\n  /**\n   * Mute the track associated with this publication\n   */\n  async mute() {\n    return this.track?.mute();\n  }\n\n  /**\n   * Unmute track associated with this publication\n   */\n  async unmute() {\n    return this.track?.unmute();\n  }\n\n  /**\n   * Pauses the media stream track associated with this publication from being sent to the server\n   * and signals \"muted\" event to other participants\n   * Useful if you want to pause the stream without pausing the local media stream track\n   */\n  async pauseUpstream() {\n    await this.track?.pauseUpstream();\n  }\n\n  /**\n   * Resumes sending the media stream track associated with this publication to the server after a call to [[pauseUpstream()]]\n   * and signals \"unmuted\" event to other participants (unless the track is explicitly muted)\n   */\n  async resumeUpstream() {\n    await this.track?.resumeUpstream();\n  }\n\n  getTrackFeatures() {\n    if (this.track instanceof LocalAudioTrack) {\n      const settings = this.track!.getSourceTrackSettings();\n      const features: Set<AudioTrackFeature> = new Set();\n      if (settings.autoGainControl) {\n        features.add(AudioTrackFeature.TF_AUTO_GAIN_CONTROL);\n      }\n      if (settings.echoCancellation) {\n        features.add(AudioTrackFeature.TF_ECHO_CANCELLATION);\n      }\n      if (settings.noiseSuppression) {\n        features.add(AudioTrackFeature.TF_NOISE_SUPPRESSION);\n      }\n      if (settings.channelCount && settings.channelCount > 1) {\n        features.add(AudioTrackFeature.TF_STEREO);\n      }\n      if (!this.options?.dtx) {\n        features.add(AudioTrackFeature.TF_NO_DTX);\n      }\n      if (this.track.enhancedNoiseCancellation) {\n        features.add(AudioTrackFeature.TF_ENHANCED_NOISE_CANCELLATION);\n      }\n      return Array.from(features.values());\n    } else return [];\n  }\n\n  handleTrackEnded = () => {\n    this.emit(TrackEvent.Ended);\n  };\n}\n","import {\n  DataPacket_Kind,\n  ParticipantInfo,\n  ParticipantInfo_Kind as ParticipantKind,\n  ParticipantPermission,\n  ConnectionQuality as ProtoQuality,\n  type SipDTMF,\n  SubscriptionError,\n} from '@livekit/protocol';\nimport { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport log, { LoggerNames, type StructuredLogger, getLogger } from '../../logger';\nimport { ParticipantEvent, TrackEvent } from '../events';\nimport LocalAudioTrack from '../track/LocalAudioTrack';\nimport type LocalTrackPublication from '../track/LocalTrackPublication';\nimport RemoteAudioTrack from '../track/RemoteAudioTrack';\nimport type RemoteTrack from '../track/RemoteTrack';\nimport type RemoteTrackPublication from '../track/RemoteTrackPublication';\nimport { Track } from '../track/Track';\nimport type { TrackPublication } from '../track/TrackPublication';\nimport { diffAttributes } from '../track/utils';\nimport type { ChatMessage, LoggerOptions, TranscriptionSegment } from '../types';\n\nexport enum ConnectionQuality {\n  Excellent = 'excellent',\n  Good = 'good',\n  Poor = 'poor',\n  /**\n   * Indicates that a participant has temporarily (or permanently) lost connection to LiveKit.\n   * For permanent disconnection a `ParticipantDisconnected` event will be emitted after a timeout\n   */\n  Lost = 'lost',\n  Unknown = 'unknown',\n}\n\nfunction qualityFromProto(q: ProtoQuality): ConnectionQuality {\n  switch (q) {\n    case ProtoQuality.EXCELLENT:\n      return ConnectionQuality.Excellent;\n    case ProtoQuality.GOOD:\n      return ConnectionQuality.Good;\n    case ProtoQuality.POOR:\n      return ConnectionQuality.Poor;\n    case ProtoQuality.LOST:\n      return ConnectionQuality.Lost;\n    default:\n      return ConnectionQuality.Unknown;\n  }\n}\n\nexport { ParticipantKind };\n\nexport default class Participant extends (EventEmitter as new () => TypedEmitter<ParticipantEventCallbacks>) {\n  protected participantInfo?: ParticipantInfo;\n\n  audioTrackPublications: Map<string, TrackPublication>;\n\n  videoTrackPublications: Map<string, TrackPublication>;\n\n  /** map of track sid => all published tracks */\n  trackPublications: Map<string, TrackPublication>;\n\n  /** audio level between 0-1.0, 1 being loudest, 0 being softest */\n  audioLevel: number = 0;\n\n  /** if participant is currently speaking */\n  isSpeaking: boolean = false;\n\n  /** server assigned unique id */\n  sid: string;\n\n  /** client assigned identity, encoded in JWT token */\n  identity: string;\n\n  /** client assigned display name, encoded in JWT token */\n  name?: string;\n\n  /** client metadata, opaque to livekit */\n  metadata?: string;\n\n  private _attributes: Record<string, string>;\n\n  lastSpokeAt?: Date | undefined;\n\n  permissions?: ParticipantPermission;\n\n  protected _kind: ParticipantKind;\n\n  private _connectionQuality: ConnectionQuality = ConnectionQuality.Unknown;\n\n  protected audioContext?: AudioContext;\n\n  protected log: StructuredLogger = log;\n\n  protected loggerOptions?: LoggerOptions;\n\n  protected get logContext() {\n    return {\n      ...this.loggerOptions?.loggerContextCb?.(),\n    };\n  }\n\n  get isEncrypted() {\n    return (\n      this.trackPublications.size > 0 &&\n      Array.from(this.trackPublications.values()).every((tr) => tr.isEncrypted)\n    );\n  }\n\n  get isAgent() {\n    return this.permissions?.agent || this.kind === ParticipantKind.AGENT;\n  }\n\n  get kind() {\n    return this._kind;\n  }\n\n  /** participant attributes, similar to metadata, but as a key/value map */\n  get attributes(): Readonly<Record<string, string>> {\n    return Object.freeze({ ...this._attributes });\n  }\n\n  /** @internal */\n  constructor(\n    sid: string,\n    identity: string,\n    name?: string,\n    metadata?: string,\n    attributes?: Record<string, string>,\n    loggerOptions?: LoggerOptions,\n    kind: ParticipantKind = ParticipantKind.STANDARD,\n  ) {\n    super();\n\n    this.log = getLogger(loggerOptions?.loggerName ?? LoggerNames.Participant);\n    this.loggerOptions = loggerOptions;\n\n    this.setMaxListeners(100);\n    this.sid = sid;\n    this.identity = identity;\n    this.name = name;\n    this.metadata = metadata;\n    this.audioTrackPublications = new Map();\n    this.videoTrackPublications = new Map();\n    this.trackPublications = new Map();\n    this._kind = kind;\n    this._attributes = attributes ?? {};\n  }\n\n  getTrackPublications(): TrackPublication[] {\n    return Array.from(this.trackPublications.values());\n  }\n\n  /**\n   * Finds the first track that matches the source filter, for example, getting\n   * the user's camera track with getTrackBySource(Track.Source.Camera).\n   */\n  getTrackPublication(source: Track.Source): TrackPublication | undefined {\n    for (const [, pub] of this.trackPublications) {\n      if (pub.source === source) {\n        return pub;\n      }\n    }\n  }\n\n  /**\n   * Finds the first track that matches the track's name.\n   */\n  getTrackPublicationByName(name: string): TrackPublication | undefined {\n    for (const [, pub] of this.trackPublications) {\n      if (pub.trackName === name) {\n        return pub;\n      }\n    }\n  }\n\n  get connectionQuality(): ConnectionQuality {\n    return this._connectionQuality;\n  }\n\n  get isCameraEnabled(): boolean {\n    const track = this.getTrackPublication(Track.Source.Camera);\n    return !(track?.isMuted ?? true);\n  }\n\n  get isMicrophoneEnabled(): boolean {\n    const track = this.getTrackPublication(Track.Source.Microphone);\n    return !(track?.isMuted ?? true);\n  }\n\n  get isScreenShareEnabled(): boolean {\n    const track = this.getTrackPublication(Track.Source.ScreenShare);\n    return !!track;\n  }\n\n  get isLocal(): boolean {\n    return false;\n  }\n\n  /** when participant joined the room */\n  get joinedAt(): Date | undefined {\n    if (this.participantInfo) {\n      return new Date(Number.parseInt(this.participantInfo.joinedAt.toString()) * 1000);\n    }\n    return new Date();\n  }\n\n  /** @internal */\n  updateInfo(info: ParticipantInfo): boolean {\n    // it's possible the update could be applied out of order due to await\n    // during reconnect sequences. when that happens, it's possible for server\n    // to have sent more recent version of participant info while JS is waiting\n    // to process the existing payload.\n    // when the participant sid remains the same, and we already have a later version\n    // of the payload, they can be safely skipped\n    if (\n      this.participantInfo &&\n      this.participantInfo.sid === info.sid &&\n      this.participantInfo.version > info.version\n    ) {\n      return false;\n    }\n    this.identity = info.identity;\n    this.sid = info.sid;\n    this._setName(info.name);\n    this._setMetadata(info.metadata);\n    this._setAttributes(info.attributes);\n    if (info.permission) {\n      this.setPermissions(info.permission);\n    }\n    // set this last so setMetadata can detect changes\n    this.participantInfo = info;\n    this.log.trace('update participant info', { ...this.logContext, info });\n    return true;\n  }\n\n  /**\n   * Updates metadata from server\n   **/\n  private _setMetadata(md: string) {\n    const changed = this.metadata !== md;\n    const prevMetadata = this.metadata;\n    this.metadata = md;\n\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantMetadataChanged, prevMetadata);\n    }\n  }\n\n  private _setName(name: string) {\n    const changed = this.name !== name;\n    this.name = name;\n\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantNameChanged, name);\n    }\n  }\n\n  /**\n   * Updates metadata from server\n   **/\n  private _setAttributes(attributes: Record<string, string>) {\n    const diff = diffAttributes(this.attributes, attributes);\n    this._attributes = attributes;\n\n    if (Object.keys(diff).length > 0) {\n      this.emit(ParticipantEvent.AttributesChanged, diff);\n    }\n  }\n\n  /** @internal */\n  setPermissions(permissions: ParticipantPermission): boolean {\n    const prevPermissions = this.permissions;\n    const changed =\n      permissions.canPublish !== this.permissions?.canPublish ||\n      permissions.canSubscribe !== this.permissions?.canSubscribe ||\n      permissions.canPublishData !== this.permissions?.canPublishData ||\n      permissions.hidden !== this.permissions?.hidden ||\n      permissions.recorder !== this.permissions?.recorder ||\n      permissions.canPublishSources.length !== this.permissions.canPublishSources.length ||\n      permissions.canPublishSources.some(\n        (value, index) => value !== this.permissions?.canPublishSources[index],\n      ) ||\n      permissions.canSubscribeMetrics !== this.permissions?.canSubscribeMetrics;\n    this.permissions = permissions;\n\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions);\n    }\n    return changed;\n  }\n\n  /** @internal */\n  setIsSpeaking(speaking: boolean) {\n    if (speaking === this.isSpeaking) {\n      return;\n    }\n    this.isSpeaking = speaking;\n    if (speaking) {\n      this.lastSpokeAt = new Date();\n    }\n    this.emit(ParticipantEvent.IsSpeakingChanged, speaking);\n  }\n\n  /** @internal */\n  setConnectionQuality(q: ProtoQuality) {\n    const prevQuality = this._connectionQuality;\n    this._connectionQuality = qualityFromProto(q);\n    if (prevQuality !== this._connectionQuality) {\n      this.emit(ParticipantEvent.ConnectionQualityChanged, this._connectionQuality);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  setAudioContext(ctx: AudioContext | undefined) {\n    this.audioContext = ctx;\n    this.audioTrackPublications.forEach(\n      (track) =>\n        (track.track instanceof RemoteAudioTrack || track.track instanceof LocalAudioTrack) &&\n        track.track.setAudioContext(ctx),\n    );\n  }\n\n  protected addTrackPublication(publication: TrackPublication) {\n    // forward publication driven events\n    publication.on(TrackEvent.Muted, () => {\n      this.emit(ParticipantEvent.TrackMuted, publication);\n    });\n\n    publication.on(TrackEvent.Unmuted, () => {\n      this.emit(ParticipantEvent.TrackUnmuted, publication);\n    });\n\n    const pub = publication;\n    if (pub.track) {\n      pub.track.sid = publication.trackSid;\n    }\n\n    this.trackPublications.set(publication.trackSid, publication);\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTrackPublications.set(publication.trackSid, publication);\n        break;\n      case Track.Kind.Video:\n        this.videoTrackPublications.set(publication.trackSid, publication);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport type ParticipantEventCallbacks = {\n  trackPublished: (publication: RemoteTrackPublication) => void;\n  trackSubscribed: (track: RemoteTrack, publication: RemoteTrackPublication) => void;\n  trackSubscriptionFailed: (trackSid: string, reason?: SubscriptionError) => void;\n  trackUnpublished: (publication: RemoteTrackPublication) => void;\n  trackUnsubscribed: (track: RemoteTrack, publication: RemoteTrackPublication) => void;\n  trackMuted: (publication: TrackPublication) => void;\n  trackUnmuted: (publication: TrackPublication) => void;\n  localTrackPublished: (publication: LocalTrackPublication) => void;\n  localTrackUnpublished: (publication: LocalTrackPublication) => void;\n  participantMetadataChanged: (prevMetadata: string | undefined, participant?: any) => void;\n  participantNameChanged: (name: string) => void;\n  dataReceived: (payload: Uint8Array, kind: DataPacket_Kind) => void;\n  sipDTMFReceived: (dtmf: SipDTMF) => void;\n  transcriptionReceived: (\n    transcription: TranscriptionSegment[],\n    publication?: TrackPublication,\n  ) => void;\n  isSpeakingChanged: (speaking: boolean) => void;\n  connectionQualityChanged: (connectionQuality: ConnectionQuality) => void;\n  trackStreamStateChanged: (\n    publication: RemoteTrackPublication,\n    streamState: Track.StreamState,\n  ) => void;\n  trackSubscriptionPermissionChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.PermissionStatus,\n  ) => void;\n  mediaDevicesError: (error: Error) => void;\n  audioStreamAcquired: () => void;\n  participantPermissionsChanged: (prevPermissions?: ParticipantPermission) => void;\n  trackSubscriptionStatusChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.SubscriptionStatus,\n  ) => void;\n  attributesChanged: (changedAttributes: Record<string, string>) => void;\n  localTrackSubscribed: (trackPublication: LocalTrackPublication) => void;\n  chatMessage: (msg: ChatMessage) => void;\n};\n","import { TrackPermission } from '@livekit/protocol';\n\nexport interface ParticipantTrackPermission {\n  /**\n   * The participant identity this permission applies to.\n   * You can either provide this or `participantSid`\n   */\n  participantIdentity?: string;\n\n  /**\n   * The participant server id this permission applies to.\n   * You can either provide this or `participantIdentity`\n   */\n  participantSid?: string;\n\n  /**\n   * Grant permission to all all tracks. Takes precedence over allowedTrackSids.\n   * false if unset.\n   */\n  allowAll?: boolean;\n\n  /**\n   * The list of track ids that the target participant can subscribe to.\n   * When unset, it'll allow all tracks to be subscribed by the participant.\n   * When empty, this participant is disallowed from subscribing to any tracks.\n   */\n  allowedTrackSids?: string[];\n}\n\nexport function trackPermissionToProto(perms: ParticipantTrackPermission): TrackPermission {\n  if (!perms.participantSid && !perms.participantIdentity) {\n    throw new Error(\n      'Invalid track permission, must provide at least one of participantIdentity and participantSid',\n    );\n  }\n  return new TrackPermission({\n    participantIdentity: perms.participantIdentity ?? '',\n    participantSid: perms.participantSid ?? '',\n    allTracks: perms.allowAll ?? false,\n    trackSids: perms.allowedTrackSids || [],\n  });\n}\n","import {\n  AddTrackRequest,\n  ChatMessage as ChatMessageModel,\n  Codec,\n  DataPacket,\n  DataPacket_Kind,\n  Encryption_Type,\n  ParticipantInfo,\n  ParticipantPermission,\n  RequestResponse,\n  RequestResponse_Reason,\n  RpcAck,\n  RpcRequest,\n  RpcResponse,\n  SimulcastCodec,\n  SipDTMF,\n  SubscribedQualityUpdate,\n  TrackInfo,\n  TrackUnpublishedResponse,\n  UserPacket,\n  protoInt64,\n} from '@livekit/protocol';\nimport type { InternalRoomOptions } from '../../options';\nimport { PCTransportState } from '../PCTransportManager';\nimport type RTCEngine from '../RTCEngine';\nimport { defaultVideoCodec } from '../defaults';\nimport {\n  DeviceUnsupportedError,\n  LivekitError,\n  SignalRequestError,\n  TrackInvalidError,\n  UnexpectedConnectionState,\n} from '../errors';\nimport { EngineEvent, ParticipantEvent, TrackEvent } from '../events';\nimport {\n  MAX_PAYLOAD_BYTES,\n  type PerformRpcParams,\n  RpcError,\n  type RpcInvocationData,\n  byteLength,\n} from '../rpc';\nimport LocalAudioTrack from '../track/LocalAudioTrack';\nimport LocalTrack from '../track/LocalTrack';\nimport LocalTrackPublication from '../track/LocalTrackPublication';\nimport LocalVideoTrack, { videoLayersFromEncodings } from '../track/LocalVideoTrack';\nimport { Track } from '../track/Track';\nimport type {\n  AudioCaptureOptions,\n  BackupVideoCodec,\n  CreateLocalTracksOptions,\n  ScreenShareCaptureOptions,\n  TrackPublishOptions,\n  VideoCaptureOptions,\n} from '../track/options';\nimport { ScreenSharePresets, VideoPresets, isBackupCodec } from '../track/options';\nimport {\n  constraintsForOptions,\n  extractProcessorsFromOptions,\n  getLogContextFromTrack,\n  mergeDefaultOptions,\n  mimeTypeToVideoCodecString,\n  screenCaptureToDisplayMediaStreamOptions,\n} from '../track/utils';\nimport type { ChatMessage, DataPublishOptions } from '../types';\nimport {\n  Future,\n  compareVersions,\n  isE2EESimulcastSupported,\n  isFireFox,\n  isSVCCodec,\n  isSafari17,\n  isWeb,\n  sleep,\n  supportsAV1,\n  supportsVP9,\n} from '../utils';\nimport Participant from './Participant';\nimport type { ParticipantTrackPermission } from './ParticipantTrackPermission';\nimport { trackPermissionToProto } from './ParticipantTrackPermission';\nimport {\n  computeTrackBackupEncodings,\n  computeVideoEncodings,\n  getDefaultDegradationPreference,\n  mediaTrackToLocalTrack,\n} from './publishUtils';\n\nexport default class LocalParticipant extends Participant {\n  audioTrackPublications: Map<string, LocalTrackPublication>;\n\n  videoTrackPublications: Map<string, LocalTrackPublication>;\n\n  /** map of track sid => all published tracks */\n  trackPublications: Map<string, LocalTrackPublication>;\n\n  /** @internal */\n  engine: RTCEngine;\n\n  /** @internal */\n  activeDeviceMap: Map<MediaDeviceKind, string>;\n\n  private pendingPublishing = new Set<Track.Source>();\n\n  private pendingPublishPromises = new Map<LocalTrack, Promise<LocalTrackPublication>>();\n\n  private republishPromise: Promise<void> | undefined;\n\n  private cameraError: Error | undefined;\n\n  private microphoneError: Error | undefined;\n\n  private participantTrackPermissions: Array<ParticipantTrackPermission> = [];\n\n  private allParticipantsAllowedToSubscribe: boolean = true;\n\n  // keep a pointer to room options\n  private roomOptions: InternalRoomOptions;\n\n  private encryptionType: Encryption_Type = Encryption_Type.NONE;\n\n  private reconnectFuture?: Future<void>;\n\n  private pendingSignalRequests: Map<\n    number,\n    {\n      resolve: (arg: any) => void;\n      reject: (reason: LivekitError) => void;\n      values: Partial<Record<keyof LocalParticipant, any>>;\n    }\n  >;\n\n  private enabledPublishVideoCodecs: Codec[] = [];\n\n  private rpcHandlers: Map<string, (data: RpcInvocationData) => Promise<string>> = new Map();\n\n  private pendingAcks = new Map<string, { resolve: () => void; participantIdentity: string }>();\n\n  private pendingResponses = new Map<\n    string,\n    {\n      resolve: (payload: string | null, error: RpcError | null) => void;\n      participantIdentity: string;\n    }\n  >();\n\n  /** @internal */\n  constructor(sid: string, identity: string, engine: RTCEngine, options: InternalRoomOptions) {\n    super(sid, identity, undefined, undefined, undefined, {\n      loggerName: options.loggerName,\n      loggerContextCb: () => this.engine.logContext,\n    });\n    this.audioTrackPublications = new Map();\n    this.videoTrackPublications = new Map();\n    this.trackPublications = new Map();\n    this.engine = engine;\n    this.roomOptions = options;\n    this.setupEngine(engine);\n    this.activeDeviceMap = new Map([\n      ['audioinput', 'default'],\n      ['videoinput', 'default'],\n      ['audiooutput', 'default'],\n    ]);\n    this.pendingSignalRequests = new Map();\n  }\n\n  get lastCameraError(): Error | undefined {\n    return this.cameraError;\n  }\n\n  get lastMicrophoneError(): Error | undefined {\n    return this.microphoneError;\n  }\n\n  get isE2EEEnabled(): boolean {\n    return this.encryptionType !== Encryption_Type.NONE;\n  }\n\n  getTrackPublication(source: Track.Source): LocalTrackPublication | undefined {\n    const track = super.getTrackPublication(source);\n    if (track) {\n      return track as LocalTrackPublication;\n    }\n  }\n\n  getTrackPublicationByName(name: string): LocalTrackPublication | undefined {\n    const track = super.getTrackPublicationByName(name);\n    if (track) {\n      return track as LocalTrackPublication;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  setupEngine(engine: RTCEngine) {\n    this.engine = engine;\n    this.engine.on(EngineEvent.RemoteMute, (trackSid: string, muted: boolean) => {\n      const pub = this.trackPublications.get(trackSid);\n      if (!pub || !pub.track) {\n        return;\n      }\n      if (muted) {\n        pub.mute();\n      } else {\n        pub.unmute();\n      }\n    });\n\n    this.engine\n      .on(EngineEvent.Connected, this.handleReconnected)\n      .on(EngineEvent.SignalRestarted, this.handleReconnected)\n      .on(EngineEvent.SignalResumed, this.handleReconnected)\n      .on(EngineEvent.Restarting, this.handleReconnecting)\n      .on(EngineEvent.Resuming, this.handleReconnecting)\n      .on(EngineEvent.LocalTrackUnpublished, this.handleLocalTrackUnpublished)\n      .on(EngineEvent.SubscribedQualityUpdate, this.handleSubscribedQualityUpdate)\n      .on(EngineEvent.Disconnected, this.handleDisconnected)\n      .on(EngineEvent.SignalRequestResponse, this.handleSignalRequestResponse)\n      .on(EngineEvent.DataPacketReceived, this.handleDataPacket);\n  }\n\n  private handleReconnecting = () => {\n    if (!this.reconnectFuture) {\n      this.reconnectFuture = new Future<void>();\n    }\n  };\n\n  private handleReconnected = () => {\n    this.reconnectFuture?.resolve?.();\n    this.reconnectFuture = undefined;\n    this.updateTrackSubscriptionPermissions();\n  };\n\n  private handleDisconnected = () => {\n    if (this.reconnectFuture) {\n      this.reconnectFuture.promise.catch((e) => this.log.warn(e.message, this.logContext));\n      this.reconnectFuture?.reject?.('Got disconnected during reconnection attempt');\n      this.reconnectFuture = undefined;\n    }\n  };\n\n  private handleSignalRequestResponse = (response: RequestResponse) => {\n    const { requestId, reason, message } = response;\n    const targetRequest = this.pendingSignalRequests.get(requestId);\n    if (targetRequest) {\n      if (reason !== RequestResponse_Reason.OK) {\n        targetRequest.reject(new SignalRequestError(message, reason));\n      }\n      this.pendingSignalRequests.delete(requestId);\n    }\n  };\n\n  private handleDataPacket = (packet: DataPacket) => {\n    switch (packet.value.case) {\n      case 'rpcRequest':\n        let rpcRequest = packet.value.value as RpcRequest;\n        this.handleIncomingRpcRequest(\n          packet.participantIdentity,\n          rpcRequest.id,\n          rpcRequest.method,\n          rpcRequest.payload,\n          rpcRequest.responseTimeoutMs,\n          rpcRequest.version,\n        );\n        break;\n      case 'rpcResponse':\n        let rpcResponse = packet.value.value as RpcResponse;\n        let payload: string | null = null;\n        let error: RpcError | null = null;\n\n        if (rpcResponse.value.case === 'payload') {\n          payload = rpcResponse.value.value;\n        } else if (rpcResponse.value.case === 'error') {\n          error = RpcError.fromProto(rpcResponse.value.value);\n        }\n        this.handleIncomingRpcResponse(rpcResponse.requestId, payload, error);\n        break;\n      case 'rpcAck':\n        let rpcAck = packet.value.value as RpcAck;\n        this.handleIncomingRpcAck(rpcAck.requestId);\n        break;\n    }\n  };\n\n  /**\n   * Sets and updates the metadata of the local participant.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * method will throw if the user doesn't have the required permissions\n   * @param metadata\n   */\n  async setMetadata(metadata: string): Promise<void> {\n    await this.requestMetadataUpdate({ metadata });\n  }\n\n  /**\n   * Sets and updates the name of the local participant.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * method will throw if the user doesn't have the required permissions\n   * @param metadata\n   */\n  async setName(name: string): Promise<void> {\n    await this.requestMetadataUpdate({ name });\n  }\n\n  /**\n   * Set or update participant attributes. It will make updates only to keys that\n   * are present in `attributes`, and will not override others.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * @param attributes attributes to update\n   */\n  async setAttributes(attributes: Record<string, string>) {\n    await this.requestMetadataUpdate({ attributes });\n  }\n\n  private async requestMetadataUpdate({\n    metadata,\n    name,\n    attributes,\n  }: {\n    metadata?: string;\n    name?: string;\n    attributes?: Record<string, string>;\n  }) {\n    return new Promise<void>(async (resolve, reject) => {\n      try {\n        let isRejected = false;\n        const requestId = await this.engine.client.sendUpdateLocalMetadata(\n          metadata ?? this.metadata ?? '',\n          name ?? this.name ?? '',\n          attributes,\n        );\n        const startTime = performance.now();\n        this.pendingSignalRequests.set(requestId, {\n          resolve,\n          reject: (error: LivekitError) => {\n            reject(error);\n            isRejected = true;\n          },\n          values: { name, metadata, attributes },\n        });\n        while (performance.now() - startTime < 5_000 && !isRejected) {\n          if (\n            (!name || this.name === name) &&\n            (!metadata || this.metadata === metadata) &&\n            (!attributes ||\n              Object.entries(attributes).every(\n                ([key, value]) =>\n                  this.attributes[key] === value || (value === '' && !this.attributes[key]),\n              ))\n          ) {\n            this.pendingSignalRequests.delete(requestId);\n            resolve();\n            return;\n          }\n          await sleep(50);\n        }\n        reject(\n          new SignalRequestError('Request to update local metadata timed out', 'TimeoutError'),\n        );\n      } catch (e: any) {\n        if (e instanceof Error) reject(e);\n      }\n    });\n  }\n\n  /**\n   * Enable or disable a participant's camera track.\n   *\n   * If a track has already published, it'll mute or unmute the track.\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setCameraEnabled(\n    enabled: boolean,\n    options?: VideoCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined> {\n    return this.setTrackEnabled(Track.Source.Camera, enabled, options, publishOptions);\n  }\n\n  /**\n   * Enable or disable a participant's microphone track.\n   *\n   * If a track has already published, it'll mute or unmute the track.\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setMicrophoneEnabled(\n    enabled: boolean,\n    options?: AudioCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined> {\n    return this.setTrackEnabled(Track.Source.Microphone, enabled, options, publishOptions);\n  }\n\n  /**\n   * Start or stop sharing a participant's screen\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setScreenShareEnabled(\n    enabled: boolean,\n    options?: ScreenShareCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined> {\n    return this.setTrackEnabled(Track.Source.ScreenShare, enabled, options, publishOptions);\n  }\n\n  /** @internal */\n  setPermissions(permissions: ParticipantPermission): boolean {\n    const prevPermissions = this.permissions;\n    const changed = super.setPermissions(permissions);\n    if (changed && prevPermissions) {\n      this.emit(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions);\n    }\n    return changed;\n  }\n\n  /** @internal */\n  async setE2EEEnabled(enabled: boolean) {\n    this.encryptionType = enabled ? Encryption_Type.GCM : Encryption_Type.NONE;\n    await this.republishAllTracks(undefined, false);\n  }\n\n  /**\n   * Enable or disable publishing for a track by source. This serves as a simple\n   * way to manage the common tracks (camera, mic, or screen share).\n   * Resolves with LocalTrackPublication if successful and void otherwise\n   */\n  private async setTrackEnabled(\n    source: Extract<Track.Source, Track.Source.Camera>,\n    enabled: boolean,\n    options?: VideoCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined>;\n  private async setTrackEnabled(\n    source: Extract<Track.Source, Track.Source.Microphone>,\n    enabled: boolean,\n    options?: AudioCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined>;\n  private async setTrackEnabled(\n    source: Extract<Track.Source, Track.Source.ScreenShare>,\n    enabled: boolean,\n    options?: ScreenShareCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ): Promise<LocalTrackPublication | undefined>;\n  private async setTrackEnabled(\n    source: Track.Source,\n    enabled: true,\n    options?: VideoCaptureOptions | AudioCaptureOptions | ScreenShareCaptureOptions,\n    publishOptions?: TrackPublishOptions,\n  ) {\n    this.log.debug('setTrackEnabled', { ...this.logContext, source, enabled });\n    if (this.republishPromise) {\n      await this.republishPromise;\n    }\n    let track = this.getTrackPublication(source);\n    if (enabled) {\n      if (track) {\n        await track.unmute();\n      } else {\n        let localTracks: Array<LocalTrack> | undefined;\n        if (this.pendingPublishing.has(source)) {\n          const pendingTrack = await this.waitForPendingPublicationOfSource(source);\n          if (!pendingTrack) {\n            this.log.info('waiting for pending publication promise timed out', {\n              ...this.logContext,\n              source,\n            });\n          }\n          await pendingTrack?.unmute();\n          return pendingTrack;\n        }\n        this.pendingPublishing.add(source);\n        try {\n          switch (source) {\n            case Track.Source.Camera:\n              localTracks = await this.createTracks({\n                video: (options as VideoCaptureOptions | undefined) ?? true,\n              });\n\n              break;\n            case Track.Source.Microphone:\n              localTracks = await this.createTracks({\n                audio: (options as AudioCaptureOptions | undefined) ?? true,\n              });\n              break;\n            case Track.Source.ScreenShare:\n              localTracks = await this.createScreenTracks({\n                ...(options as ScreenShareCaptureOptions | undefined),\n              });\n              break;\n            default:\n              throw new TrackInvalidError(source);\n          }\n        } catch (e: unknown) {\n          localTracks?.forEach((tr) => {\n            tr.stop();\n          });\n          if (e instanceof Error) {\n            this.emit(ParticipantEvent.MediaDevicesError, e);\n          }\n          throw e;\n        }\n        try {\n          const publishPromises: Array<Promise<LocalTrackPublication>> = [];\n          for (const localTrack of localTracks) {\n            this.log.info('publishing track', {\n              ...this.logContext,\n              ...getLogContextFromTrack(localTrack),\n            });\n            publishPromises.push(this.publishTrack(localTrack, publishOptions));\n          }\n          const publishedTracks = await Promise.all(publishPromises);\n          // for screen share publications including audio, this will only return the screen share publication, not the screen share audio one\n          // revisit if we want to return an array of tracks instead for v2\n          [track] = publishedTracks;\n        } catch (e) {\n          localTracks?.forEach((tr) => {\n            tr.stop();\n          });\n          throw e;\n        } finally {\n          this.pendingPublishing.delete(source);\n        }\n      }\n    } else {\n      if (!track?.track && this.pendingPublishing.has(source)) {\n        // if there's no track available yet first wait for pending publishing promises of that source to see if it becomes available\n        track = await this.waitForPendingPublicationOfSource(source);\n        if (!track) {\n          this.log.info('waiting for pending publication promise timed out', {\n            ...this.logContext,\n            source,\n          });\n        }\n      }\n      if (track && track.track) {\n        // screenshare cannot be muted, unpublish instead\n        if (source === Track.Source.ScreenShare) {\n          track = await this.unpublishTrack(track.track);\n          const screenAudioTrack = this.getTrackPublication(Track.Source.ScreenShareAudio);\n          if (screenAudioTrack && screenAudioTrack.track) {\n            this.unpublishTrack(screenAudioTrack.track);\n          }\n        } else {\n          await track.mute();\n        }\n      }\n    }\n    return track;\n  }\n\n  /**\n   * Publish both camera and microphone at the same time. This is useful for\n   * displaying a single Permission Dialog box to the end user.\n   */\n  async enableCameraAndMicrophone() {\n    if (\n      this.pendingPublishing.has(Track.Source.Camera) ||\n      this.pendingPublishing.has(Track.Source.Microphone)\n    ) {\n      // no-op it's already been requested\n      return;\n    }\n\n    this.pendingPublishing.add(Track.Source.Camera);\n    this.pendingPublishing.add(Track.Source.Microphone);\n    try {\n      const tracks: LocalTrack[] = await this.createTracks({\n        audio: true,\n        video: true,\n      });\n\n      await Promise.all(tracks.map((track) => this.publishTrack(track)));\n    } finally {\n      this.pendingPublishing.delete(Track.Source.Camera);\n      this.pendingPublishing.delete(Track.Source.Microphone);\n    }\n  }\n\n  /**\n   * Create local camera and/or microphone tracks\n   * @param options\n   * @returns\n   */\n  async createTracks(options?: CreateLocalTracksOptions): Promise<LocalTrack[]> {\n    options ??= {};\n    const { audioProcessor, videoProcessor, optionsWithoutProcessor } =\n      extractProcessorsFromOptions(options);\n\n    const mergedOptions = mergeDefaultOptions(\n      optionsWithoutProcessor,\n      this.roomOptions?.audioCaptureDefaults,\n      this.roomOptions?.videoCaptureDefaults,\n    );\n\n    const constraints = constraintsForOptions(mergedOptions);\n    let stream: MediaStream | undefined;\n    try {\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (err) {\n      if (err instanceof Error) {\n        if (constraints.audio) {\n          this.microphoneError = err;\n        }\n        if (constraints.video) {\n          this.cameraError = err;\n        }\n      }\n\n      throw err;\n    }\n\n    if (constraints.audio) {\n      this.microphoneError = undefined;\n      this.emit(ParticipantEvent.AudioStreamAcquired);\n    }\n    if (constraints.video) {\n      this.cameraError = undefined;\n    }\n\n    return Promise.all(\n      stream.getTracks().map(async (mediaStreamTrack) => {\n        const isAudio = mediaStreamTrack.kind === 'audio';\n        let trackOptions = isAudio ? mergedOptions!.audio : mergedOptions!.video;\n        if (typeof trackOptions === 'boolean' || !trackOptions) {\n          trackOptions = {};\n        }\n        let trackConstraints: MediaTrackConstraints | undefined;\n        const conOrBool = isAudio ? constraints.audio : constraints.video;\n        if (typeof conOrBool !== 'boolean') {\n          trackConstraints = conOrBool;\n        }\n        const track = mediaTrackToLocalTrack(mediaStreamTrack, trackConstraints, {\n          loggerName: this.roomOptions.loggerName,\n          loggerContextCb: () => this.logContext,\n        });\n        if (track.kind === Track.Kind.Video) {\n          track.source = Track.Source.Camera;\n        } else if (track.kind === Track.Kind.Audio) {\n          track.source = Track.Source.Microphone;\n          track.setAudioContext(this.audioContext);\n        }\n        track.mediaStream = stream;\n        if (track instanceof LocalAudioTrack && audioProcessor) {\n          await track.setProcessor(audioProcessor);\n        } else if (track instanceof LocalVideoTrack && videoProcessor) {\n          await track.setProcessor(videoProcessor);\n        }\n        return track;\n      }),\n    );\n  }\n\n  /**\n   * Creates a screen capture tracks with getDisplayMedia().\n   * A LocalVideoTrack is always created and returned.\n   * If { audio: true }, and the browser supports audio capture, a LocalAudioTrack is also created.\n   */\n  async createScreenTracks(options?: ScreenShareCaptureOptions): Promise<Array<LocalTrack>> {\n    if (options === undefined) {\n      options = {};\n    }\n\n    if (navigator.mediaDevices.getDisplayMedia === undefined) {\n      throw new DeviceUnsupportedError('getDisplayMedia not supported');\n    }\n\n    if (options.resolution === undefined && !isSafari17()) {\n      // we need to constrain the dimensions, otherwise it could lead to low bitrate\n      // due to encoding a huge video. Encoding such large surfaces is really expensive\n      // unfortunately Safari 17 has a but and cannot be constrained by default\n      options.resolution = ScreenSharePresets.h1080fps30.resolution;\n    }\n\n    const constraints = screenCaptureToDisplayMediaStreamOptions(options);\n    const stream: MediaStream = await navigator.mediaDevices.getDisplayMedia(constraints);\n\n    const tracks = stream.getVideoTracks();\n    if (tracks.length === 0) {\n      throw new TrackInvalidError('no video track found');\n    }\n    const screenVideo = new LocalVideoTrack(tracks[0], undefined, false, {\n      loggerName: this.roomOptions.loggerName,\n      loggerContextCb: () => this.logContext,\n    });\n    screenVideo.source = Track.Source.ScreenShare;\n    if (options.contentHint) {\n      screenVideo.mediaStreamTrack.contentHint = options.contentHint;\n    }\n\n    const localTracks: Array<LocalTrack> = [screenVideo];\n    if (stream.getAudioTracks().length > 0) {\n      this.emit(ParticipantEvent.AudioStreamAcquired);\n      const screenAudio = new LocalAudioTrack(\n        stream.getAudioTracks()[0],\n        undefined,\n        false,\n        this.audioContext,\n        { loggerName: this.roomOptions.loggerName, loggerContextCb: () => this.logContext },\n      );\n      screenAudio.source = Track.Source.ScreenShareAudio;\n      localTracks.push(screenAudio);\n    }\n    return localTracks;\n  }\n\n  /**\n   * Publish a new track to the room\n   * @param track\n   * @param options\n   */\n  async publishTrack(track: LocalTrack | MediaStreamTrack, options?: TrackPublishOptions) {\n    return this.publishOrRepublishTrack(track, options);\n  }\n\n  private async publishOrRepublishTrack(\n    track: LocalTrack | MediaStreamTrack,\n    options?: TrackPublishOptions,\n    isRepublish = false,\n  ): Promise<LocalTrackPublication> {\n    if (track instanceof LocalAudioTrack) {\n      track.setAudioContext(this.audioContext);\n    }\n\n    await this.reconnectFuture?.promise;\n    if (this.republishPromise && !isRepublish) {\n      await this.republishPromise;\n    }\n    if (track instanceof LocalTrack && this.pendingPublishPromises.has(track)) {\n      await this.pendingPublishPromises.get(track);\n    }\n    let defaultConstraints: MediaTrackConstraints | undefined;\n    if (track instanceof MediaStreamTrack) {\n      defaultConstraints = track.getConstraints();\n    } else {\n      // we want to access constraints directly as `track.mediaStreamTrack`\n      // might be pointing to a non-device track (e.g. processed track) already\n      defaultConstraints = track.constraints;\n      let deviceKind: MediaDeviceKind | undefined = undefined;\n      switch (track.source) {\n        case Track.Source.Microphone:\n          deviceKind = 'audioinput';\n          break;\n        case Track.Source.Camera:\n          deviceKind = 'videoinput';\n        default:\n          break;\n      }\n      if (deviceKind && this.activeDeviceMap.has(deviceKind)) {\n        defaultConstraints = {\n          ...defaultConstraints,\n          deviceId: this.activeDeviceMap.get(deviceKind),\n        };\n      }\n    }\n    // convert raw media track into audio or video track\n    if (track instanceof MediaStreamTrack) {\n      switch (track.kind) {\n        case 'audio':\n          track = new LocalAudioTrack(track, defaultConstraints, true, this.audioContext, {\n            loggerName: this.roomOptions.loggerName,\n            loggerContextCb: () => this.logContext,\n          });\n          break;\n        case 'video':\n          track = new LocalVideoTrack(track, defaultConstraints, true, {\n            loggerName: this.roomOptions.loggerName,\n            loggerContextCb: () => this.logContext,\n          });\n          break;\n        default:\n          throw new TrackInvalidError(`unsupported MediaStreamTrack kind ${track.kind}`);\n      }\n    } else {\n      track.updateLoggerOptions({\n        loggerName: this.roomOptions.loggerName,\n        loggerContextCb: () => this.logContext,\n      });\n    }\n\n    // is it already published? if so skip\n    let existingPublication: LocalTrackPublication | undefined;\n    this.trackPublications.forEach((publication) => {\n      if (!publication.track) {\n        return;\n      }\n      if (publication.track === track) {\n        existingPublication = <LocalTrackPublication>publication;\n      }\n    });\n\n    if (existingPublication) {\n      this.log.warn('track has already been published, skipping', {\n        ...this.logContext,\n        ...getLogContextFromTrack(existingPublication),\n      });\n      return existingPublication;\n    }\n\n    const isStereoInput =\n      ('channelCount' in track.mediaStreamTrack.getSettings() &&\n        // @ts-ignore `channelCount` on getSettings() is currently only available for Safari, but is generally the best way to determine a stereo track https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/channelCount\n        track.mediaStreamTrack.getSettings().channelCount === 2) ||\n      track.mediaStreamTrack.getConstraints().channelCount === 2;\n    const isStereo = options?.forceStereo ?? isStereoInput;\n\n    // disable dtx for stereo track if not enabled explicitly\n    if (isStereo) {\n      if (!options) {\n        options = {};\n      }\n      if (options.dtx === undefined) {\n        this.log.info(\n          `Opus DTX will be disabled for stereo tracks by default. Enable them explicitly to make it work.`,\n          {\n            ...this.logContext,\n            ...getLogContextFromTrack(track),\n          },\n        );\n      }\n      if (options.red === undefined) {\n        this.log.info(\n          `Opus RED will be disabled for stereo tracks by default. Enable them explicitly to make it work.`,\n        );\n      }\n      options.dtx ??= false;\n      options.red ??= false;\n    }\n    const opts: TrackPublishOptions = {\n      ...this.roomOptions.publishDefaults,\n      ...options,\n    };\n\n    if (!isE2EESimulcastSupported() && this.roomOptions.e2ee) {\n      this.log.info(\n        `End-to-end encryption is set up, simulcast publishing will be disabled on Safari versions and iOS browsers running iOS < v17.2`,\n        {\n          ...this.logContext,\n        },\n      );\n      opts.simulcast = false;\n    }\n\n    if (opts.source) {\n      track.source = opts.source;\n    }\n    const publishPromise = this.publish(track, opts, isStereo);\n    this.pendingPublishPromises.set(track, publishPromise);\n    try {\n      const publication = await publishPromise;\n      return publication;\n    } catch (e) {\n      throw e;\n    } finally {\n      this.pendingPublishPromises.delete(track);\n    }\n  }\n\n  private async publish(track: LocalTrack, opts: TrackPublishOptions, isStereo: boolean) {\n    const existingTrackOfSource = Array.from(this.trackPublications.values()).find(\n      (publishedTrack) => track instanceof LocalTrack && publishedTrack.source === track.source,\n    );\n    if (existingTrackOfSource && track.source !== Track.Source.Unknown) {\n      this.log.info(`publishing a second track with the same source: ${track.source}`, {\n        ...this.logContext,\n        ...getLogContextFromTrack(track),\n      });\n    }\n    if (opts.stopMicTrackOnMute && track instanceof LocalAudioTrack) {\n      track.stopOnMute = true;\n    }\n\n    if (track.source === Track.Source.ScreenShare && isFireFox()) {\n      // Firefox does not work well with simulcasted screen share\n      // we frequently get no data on layer 0 when enabled\n      opts.simulcast = false;\n    }\n\n    // require full AV1/VP9 SVC support prior to using it\n    if (opts.videoCodec === 'av1' && !supportsAV1()) {\n      opts.videoCodec = undefined;\n    }\n    if (opts.videoCodec === 'vp9' && !supportsVP9()) {\n      opts.videoCodec = undefined;\n    }\n    if (opts.videoCodec === undefined) {\n      opts.videoCodec = defaultVideoCodec;\n    }\n    if (this.enabledPublishVideoCodecs.length > 0) {\n      // fallback to a supported codec if it is not supported\n      if (\n        !this.enabledPublishVideoCodecs.some(\n          (c) => opts.videoCodec === mimeTypeToVideoCodecString(c.mime),\n        )\n      ) {\n        opts.videoCodec = mimeTypeToVideoCodecString(this.enabledPublishVideoCodecs[0].mime);\n      }\n    }\n\n    const videoCodec = opts.videoCodec;\n\n    // handle track actions\n    track.on(TrackEvent.Muted, this.onTrackMuted);\n    track.on(TrackEvent.Unmuted, this.onTrackUnmuted);\n    track.on(TrackEvent.Ended, this.handleTrackEnded);\n    track.on(TrackEvent.UpstreamPaused, this.onTrackUpstreamPaused);\n    track.on(TrackEvent.UpstreamResumed, this.onTrackUpstreamResumed);\n    track.on(TrackEvent.AudioTrackFeatureUpdate, this.onTrackFeatureUpdate);\n\n    // create track publication from track\n    const req = new AddTrackRequest({\n      // get local track id for use during publishing\n      cid: track.mediaStreamTrack.id,\n      name: opts.name,\n      type: Track.kindToProto(track.kind),\n      muted: track.isMuted,\n      source: Track.sourceToProto(track.source),\n      disableDtx: !(opts.dtx ?? true),\n      encryption: this.encryptionType,\n      stereo: isStereo,\n      disableRed: this.isE2EEEnabled || !(opts.red ?? true),\n      stream: opts?.stream,\n    });\n\n    // compute encodings and layers for video\n    let encodings: RTCRtpEncodingParameters[] | undefined;\n    if (track.kind === Track.Kind.Video) {\n      let dims: Track.Dimensions = {\n        width: 0,\n        height: 0,\n      };\n      try {\n        dims = await track.waitForDimensions();\n      } catch (e) {\n        // use defaults, it's quite painful for congestion control without simulcast\n        // so using default dims according to publish settings\n        const defaultRes =\n          this.roomOptions.videoCaptureDefaults?.resolution ?? VideoPresets.h720.resolution;\n        dims = {\n          width: defaultRes.width,\n          height: defaultRes.height,\n        };\n        // log failure\n        this.log.error('could not determine track dimensions, using defaults', {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n          dims,\n        });\n      }\n      // width and height should be defined for video\n      req.width = dims.width;\n      req.height = dims.height;\n      // for svc codecs, disable simulcast and use vp8 for backup codec\n      if (track instanceof LocalVideoTrack) {\n        if (isSVCCodec(videoCodec)) {\n          if (track.source === Track.Source.ScreenShare) {\n            // vp9 svc with screenshare cannot encode multiple spatial layers\n            // doing so reduces publish resolution to minimal resolution\n            opts.scalabilityMode = 'L1T3';\n            // Chrome does not allow more than 5 fps with L1T3, and it has encoding bugs with L3T3\n            // It has a different path for screenshare handling and it seems to be untested/buggy\n            // As a workaround, we are setting contentHint to force it to go through the same\n            // path as regular camera video. While this is not optimal, it delivers the performance\n            // that we need\n            if ('contentHint' in track.mediaStreamTrack) {\n              track.mediaStreamTrack.contentHint = 'motion';\n              this.log.info('forcing contentHint to motion for screenshare with SVC codecs', {\n                ...this.logContext,\n                ...getLogContextFromTrack(track),\n              });\n            }\n          }\n          // set scalabilityMode to 'L3T3_KEY' by default\n          opts.scalabilityMode = opts.scalabilityMode ?? 'L3T3_KEY';\n        }\n\n        req.simulcastCodecs = [\n          new SimulcastCodec({\n            codec: videoCodec,\n            cid: track.mediaStreamTrack.id,\n          }),\n        ];\n\n        // set up backup\n        if (opts.backupCodec === true) {\n          opts.backupCodec = { codec: defaultVideoCodec };\n        }\n        if (\n          opts.backupCodec &&\n          videoCodec !== opts.backupCodec.codec &&\n          // TODO remove this once e2ee is supported for backup codecs\n          req.encryption === Encryption_Type.NONE\n        ) {\n          // multi-codec simulcast requires dynacast\n          if (!this.roomOptions.dynacast) {\n            this.roomOptions.dynacast = true;\n          }\n          req.simulcastCodecs.push(\n            new SimulcastCodec({\n              codec: opts.backupCodec.codec,\n              cid: '',\n            }),\n          );\n        }\n      }\n\n      encodings = computeVideoEncodings(\n        track.source === Track.Source.ScreenShare,\n        req.width,\n        req.height,\n        opts,\n      );\n      req.layers = videoLayersFromEncodings(\n        req.width,\n        req.height,\n        encodings,\n        isSVCCodec(opts.videoCodec),\n      );\n    } else if (track.kind === Track.Kind.Audio) {\n      encodings = [\n        {\n          maxBitrate: opts.audioPreset?.maxBitrate,\n          priority: opts.audioPreset?.priority ?? 'high',\n          networkPriority: opts.audioPreset?.priority ?? 'high',\n        },\n      ];\n    }\n\n    if (!this.engine || this.engine.isClosed) {\n      throw new UnexpectedConnectionState('cannot publish track when not connected');\n    }\n\n    const negotiate = async () => {\n      if (!this.engine.pcManager) {\n        throw new UnexpectedConnectionState('pcManager is not ready');\n      }\n\n      track.sender = await this.engine.createSender(track, opts, encodings);\n\n      if (track instanceof LocalVideoTrack) {\n        opts.degradationPreference ??= getDefaultDegradationPreference(track);\n        track.setDegradationPreference(opts.degradationPreference);\n      }\n\n      if (encodings) {\n        if (isFireFox() && track.kind === Track.Kind.Audio) {\n          /* Refer to RFC https://datatracker.ietf.org/doc/html/rfc7587#section-6.1,\n             livekit-server uses maxaveragebitrate=510000 in the answer sdp to permit client to\n             publish high quality audio track. But firefox always uses this value as the actual\n             bitrates, causing the audio bitrates to rise to 510Kbps in any stereo case unexpectedly.\n             So the client need to modify maxaverragebitrates in answer sdp to user provided value to\n             fix the issue.\n           */\n          let trackTransceiver: RTCRtpTransceiver | undefined = undefined;\n          for (const transceiver of this.engine.pcManager.publisher.getTransceivers()) {\n            if (transceiver.sender === track.sender) {\n              trackTransceiver = transceiver;\n              break;\n            }\n          }\n          if (trackTransceiver) {\n            this.engine.pcManager.publisher.setTrackCodecBitrate({\n              transceiver: trackTransceiver,\n              codec: 'opus',\n              maxbr: encodings[0]?.maxBitrate ? encodings[0].maxBitrate / 1000 : 0,\n            });\n          }\n        } else if (track.codec && isSVCCodec(track.codec) && encodings[0]?.maxBitrate) {\n          this.engine.pcManager.publisher.setTrackCodecBitrate({\n            cid: req.cid,\n            codec: track.codec,\n            maxbr: encodings[0].maxBitrate / 1000,\n          });\n        }\n      }\n\n      await this.engine.negotiate();\n    };\n\n    let ti: TrackInfo;\n    if (this.enabledPublishVideoCodecs.length > 0) {\n      const rets = await Promise.all([this.engine.addTrack(req), negotiate()]);\n      ti = rets[0];\n    } else {\n      ti = await this.engine.addTrack(req);\n      // server might not support the codec the client has requested, in that case, fallback\n      // to a supported codec\n      let primaryCodecMime: string | undefined;\n      ti.codecs.forEach((codec) => {\n        if (primaryCodecMime === undefined) {\n          primaryCodecMime = codec.mimeType;\n        }\n      });\n      if (primaryCodecMime && track.kind === Track.Kind.Video) {\n        const updatedCodec = mimeTypeToVideoCodecString(primaryCodecMime);\n        if (updatedCodec !== videoCodec) {\n          this.log.debug('falling back to server selected codec', {\n            ...this.logContext,\n            ...getLogContextFromTrack(track),\n            codec: updatedCodec,\n          });\n          opts.videoCodec = updatedCodec;\n\n          // recompute encodings since bitrates/etc could have changed\n          encodings = computeVideoEncodings(\n            track.source === Track.Source.ScreenShare,\n            req.width,\n            req.height,\n            opts,\n          );\n        }\n      }\n      await negotiate();\n    }\n\n    const publication = new LocalTrackPublication(track.kind, ti, track, {\n      loggerName: this.roomOptions.loggerName,\n      loggerContextCb: () => this.logContext,\n    });\n    // save options for when it needs to be republished again\n    publication.options = opts;\n    track.sid = ti.sid;\n\n    this.log.debug(`publishing ${track.kind} with encodings`, {\n      ...this.logContext,\n      encodings,\n      trackInfo: ti,\n    });\n\n    if (track instanceof LocalVideoTrack) {\n      track.startMonitor(this.engine.client);\n    } else if (track instanceof LocalAudioTrack) {\n      track.startMonitor();\n    }\n\n    this.addTrackPublication(publication);\n    // send event for publication\n    this.emit(ParticipantEvent.LocalTrackPublished, publication);\n    return publication;\n  }\n\n  override get isLocal(): boolean {\n    return true;\n  }\n\n  /** @internal\n   * publish additional codec to existing track\n   */\n  async publishAdditionalCodecForTrack(\n    track: LocalTrack | MediaStreamTrack,\n    videoCodec: BackupVideoCodec,\n    options?: TrackPublishOptions,\n  ) {\n    // TODO remove once e2ee is supported for backup tracks\n    if (this.encryptionType !== Encryption_Type.NONE) {\n      return;\n    }\n\n    // is it not published? if so skip\n    let existingPublication: LocalTrackPublication | undefined;\n    this.trackPublications.forEach((publication) => {\n      if (!publication.track) {\n        return;\n      }\n      if (publication.track === track) {\n        existingPublication = <LocalTrackPublication>publication;\n      }\n    });\n    if (!existingPublication) {\n      throw new TrackInvalidError('track is not published');\n    }\n\n    if (!(track instanceof LocalVideoTrack)) {\n      throw new TrackInvalidError('track is not a video track');\n    }\n\n    const opts: TrackPublishOptions = {\n      ...this.roomOptions?.publishDefaults,\n      ...options,\n    };\n\n    const encodings = computeTrackBackupEncodings(track, videoCodec, opts);\n    if (!encodings) {\n      this.log.info(\n        `backup codec has been disabled, ignoring request to add additional codec for track`,\n        {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n        },\n      );\n      return;\n    }\n    const simulcastTrack = track.addSimulcastTrack(videoCodec, encodings);\n    if (!simulcastTrack) {\n      return;\n    }\n    const req = new AddTrackRequest({\n      cid: simulcastTrack.mediaStreamTrack.id,\n      type: Track.kindToProto(track.kind),\n      muted: track.isMuted,\n      source: Track.sourceToProto(track.source),\n      sid: track.sid,\n      simulcastCodecs: [\n        {\n          codec: opts.videoCodec,\n          cid: simulcastTrack.mediaStreamTrack.id,\n        },\n      ],\n    });\n    req.layers = videoLayersFromEncodings(req.width, req.height, encodings);\n\n    if (!this.engine || this.engine.isClosed) {\n      throw new UnexpectedConnectionState('cannot publish track when not connected');\n    }\n\n    const negotiate = async () => {\n      const transceiverInit: RTCRtpTransceiverInit = { direction: 'sendonly' };\n      if (encodings) {\n        transceiverInit.sendEncodings = encodings;\n      }\n      await this.engine.createSimulcastSender(track, simulcastTrack, opts, encodings);\n\n      await this.engine.negotiate();\n    };\n\n    const rets = await Promise.all([this.engine.addTrack(req), negotiate()]);\n    const ti = rets[0];\n\n    this.log.debug(`published ${videoCodec} for track ${track.sid}`, {\n      ...this.logContext,\n      encodings,\n      trackInfo: ti,\n    });\n  }\n\n  async unpublishTrack(\n    track: LocalTrack | MediaStreamTrack,\n    stopOnUnpublish?: boolean,\n  ): Promise<LocalTrackPublication | undefined> {\n    if (track instanceof LocalTrack) {\n      const publishPromise = this.pendingPublishPromises.get(track);\n      if (publishPromise) {\n        this.log.info('awaiting publish promise before attempting to unpublish', {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n        });\n        await publishPromise;\n      }\n    }\n    // look through all published tracks to find the right ones\n    const publication = this.getPublicationForTrack(track);\n\n    const pubLogContext = publication ? getLogContextFromTrack(publication) : undefined;\n\n    this.log.debug('unpublishing track', {\n      ...this.logContext,\n      ...pubLogContext,\n    });\n\n    if (!publication || !publication.track) {\n      this.log.warn('track was not unpublished because no publication was found', {\n        ...this.logContext,\n        ...pubLogContext,\n      });\n      return undefined;\n    }\n\n    track = publication.track;\n    track.off(TrackEvent.Muted, this.onTrackMuted);\n    track.off(TrackEvent.Unmuted, this.onTrackUnmuted);\n    track.off(TrackEvent.Ended, this.handleTrackEnded);\n    track.off(TrackEvent.UpstreamPaused, this.onTrackUpstreamPaused);\n    track.off(TrackEvent.UpstreamResumed, this.onTrackUpstreamResumed);\n    track.off(TrackEvent.AudioTrackFeatureUpdate, this.onTrackFeatureUpdate);\n\n    if (stopOnUnpublish === undefined) {\n      stopOnUnpublish = this.roomOptions?.stopLocalTrackOnUnpublish ?? true;\n    }\n    if (stopOnUnpublish) {\n      track.stop();\n    } else {\n      track.stopMonitor();\n    }\n\n    let negotiationNeeded = false;\n    const trackSender = track.sender;\n    track.sender = undefined;\n    if (\n      this.engine.pcManager &&\n      this.engine.pcManager.currentState < PCTransportState.FAILED &&\n      trackSender\n    ) {\n      try {\n        for (const transceiver of this.engine.pcManager.publisher.getTransceivers()) {\n          // if sender is not currently sending (after replaceTrack(null))\n          // removeTrack would have no effect.\n          // to ensure we end up successfully removing the track, manually set\n          // the transceiver to inactive\n          if (transceiver.sender === trackSender) {\n            transceiver.direction = 'inactive';\n            negotiationNeeded = true;\n          }\n        }\n        if (this.engine.removeTrack(trackSender)) {\n          negotiationNeeded = true;\n        }\n        if (track instanceof LocalVideoTrack) {\n          for (const [, trackInfo] of track.simulcastCodecs) {\n            if (trackInfo.sender) {\n              if (this.engine.removeTrack(trackInfo.sender)) {\n                negotiationNeeded = true;\n              }\n              trackInfo.sender = undefined;\n            }\n          }\n          track.simulcastCodecs.clear();\n        }\n      } catch (e) {\n        this.log.warn('failed to unpublish track', {\n          ...this.logContext,\n          ...pubLogContext,\n          error: e,\n        });\n      }\n    }\n\n    // remove from our maps\n    this.trackPublications.delete(publication.trackSid);\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTrackPublications.delete(publication.trackSid);\n        break;\n      case Track.Kind.Video:\n        this.videoTrackPublications.delete(publication.trackSid);\n        break;\n      default:\n        break;\n    }\n\n    this.emit(ParticipantEvent.LocalTrackUnpublished, publication);\n    publication.setTrack(undefined);\n\n    if (negotiationNeeded) {\n      await this.engine.negotiate();\n    }\n    return publication;\n  }\n\n  async unpublishTracks(\n    tracks: LocalTrack[] | MediaStreamTrack[],\n  ): Promise<LocalTrackPublication[]> {\n    const results = await Promise.all(tracks.map((track) => this.unpublishTrack(track)));\n    return results.filter(\n      (track) => track instanceof LocalTrackPublication,\n    ) as LocalTrackPublication[];\n  }\n\n  async republishAllTracks(options?: TrackPublishOptions, restartTracks: boolean = true) {\n    if (this.republishPromise) {\n      await this.republishPromise;\n    }\n    this.republishPromise = new Promise(async (resolve, reject) => {\n      try {\n        const localPubs: LocalTrackPublication[] = [];\n        this.trackPublications.forEach((pub) => {\n          if (pub.track) {\n            if (options) {\n              pub.options = { ...pub.options, ...options };\n            }\n            localPubs.push(pub);\n          }\n        });\n\n        await Promise.all(\n          localPubs.map(async (pub) => {\n            const track = pub.track!;\n            await this.unpublishTrack(track, false);\n            if (\n              restartTracks &&\n              !track.isMuted &&\n              track.source !== Track.Source.ScreenShare &&\n              track.source !== Track.Source.ScreenShareAudio &&\n              (track instanceof LocalAudioTrack || track instanceof LocalVideoTrack) &&\n              !track.isUserProvided\n            ) {\n              // generally we need to restart the track before publishing, often a full reconnect\n              // is necessary because computer had gone to sleep.\n              this.log.debug('restarting existing track', {\n                ...this.logContext,\n                track: pub.trackSid,\n              });\n              await track.restartTrack();\n            }\n            await this.publishOrRepublishTrack(track, pub.options, true);\n          }),\n        );\n        resolve();\n      } catch (error: any) {\n        reject(error);\n      } finally {\n        this.republishPromise = undefined;\n      }\n    });\n\n    await this.republishPromise;\n  }\n\n  /**\n   * Publish a new data payload to the room. Data will be forwarded to each\n   * participant in the room if the destination field in publishOptions is empty\n   *\n   * @param data Uint8Array of the payload. To send string data, use TextEncoder.encode\n   * @param options optionally specify a `reliable`, `topic` and `destination`\n   */\n  async publishData(data: Uint8Array, options: DataPublishOptions = {}): Promise<void> {\n    const kind = options.reliable ? DataPacket_Kind.RELIABLE : DataPacket_Kind.LOSSY;\n    const destinationIdentities = options.destinationIdentities;\n    const topic = options.topic;\n\n    const packet = new DataPacket({\n      kind: kind,\n      value: {\n        case: 'user',\n        value: new UserPacket({\n          participantIdentity: this.identity,\n          payload: data,\n          destinationIdentities,\n          topic,\n        }),\n      },\n    });\n\n    await this.engine.sendDataPacket(packet, kind);\n  }\n\n  /**\n   * Publish SIP DTMF message to the room.\n   *\n   * @param code DTMF code\n   * @param digit DTMF digit\n   */\n  async publishDtmf(code: number, digit: string): Promise<void> {\n    const packet = new DataPacket({\n      kind: DataPacket_Kind.RELIABLE,\n      value: {\n        case: 'sipDtmf',\n        value: new SipDTMF({\n          code: code,\n          digit: digit,\n        }),\n      },\n    });\n\n    await this.engine.sendDataPacket(packet, DataPacket_Kind.RELIABLE);\n  }\n\n  async sendChatMessage(text: string): Promise<ChatMessage> {\n    const msg = {\n      id: crypto.randomUUID(),\n      message: text,\n      timestamp: Date.now(),\n    } as const satisfies ChatMessage;\n    const packet = new DataPacket({\n      value: {\n        case: 'chatMessage',\n        value: new ChatMessageModel({\n          ...msg,\n          timestamp: protoInt64.parse(msg.timestamp),\n        }),\n      },\n    });\n    await this.engine.sendDataPacket(packet, DataPacket_Kind.RELIABLE);\n    this.emit(ParticipantEvent.ChatMessage, msg);\n    return msg;\n  }\n\n  async editChatMessage(editText: string, originalMessage: ChatMessage) {\n    const msg = {\n      ...originalMessage,\n      message: editText,\n      editTimestamp: Date.now(),\n    } as const satisfies ChatMessage;\n    const packet = new DataPacket({\n      value: {\n        case: 'chatMessage',\n        value: new ChatMessageModel({\n          ...msg,\n          timestamp: protoInt64.parse(msg.timestamp),\n          editTimestamp: protoInt64.parse(msg.editTimestamp),\n        }),\n      },\n    });\n    await this.engine.sendDataPacket(packet, DataPacket_Kind.RELIABLE);\n    this.emit(ParticipantEvent.ChatMessage, msg);\n    return msg;\n  }\n\n  /**\n   * Initiate an RPC call to a remote participant\n   * @param params - Parameters for initiating the RPC call, see {@link PerformRpcParams}\n   * @returns A promise that resolves with the response payload or rejects with an error.\n   * @throws Error on failure. Details in `message`.\n   */\n  async performRpc({\n    destinationIdentity,\n    method,\n    payload,\n    responseTimeout = 10000,\n  }: PerformRpcParams): Promise<string> {\n    const maxRoundTripLatency = 2000;\n\n    return new Promise(async (resolve, reject) => {\n      if (byteLength(payload) > MAX_PAYLOAD_BYTES) {\n        reject(RpcError.builtIn('REQUEST_PAYLOAD_TOO_LARGE'));\n        return;\n      }\n\n      if (\n        this.engine.latestJoinResponse?.serverInfo?.version &&\n        compareVersions(this.engine.latestJoinResponse?.serverInfo?.version, '1.8.0') < 0\n      ) {\n        reject(RpcError.builtIn('UNSUPPORTED_SERVER'));\n        return;\n      }\n\n      const id = crypto.randomUUID();\n      await this.publishRpcRequest(\n        destinationIdentity,\n        id,\n        method,\n        payload,\n        responseTimeout - maxRoundTripLatency,\n      );\n\n      const ackTimeoutId = setTimeout(() => {\n        this.pendingAcks.delete(id);\n        reject(RpcError.builtIn('CONNECTION_TIMEOUT'));\n        this.pendingResponses.delete(id);\n        clearTimeout(responseTimeoutId);\n      }, maxRoundTripLatency);\n\n      this.pendingAcks.set(id, {\n        resolve: () => {\n          clearTimeout(ackTimeoutId);\n        },\n        participantIdentity: destinationIdentity,\n      });\n\n      const responseTimeoutId = setTimeout(() => {\n        this.pendingResponses.delete(id);\n        reject(RpcError.builtIn('RESPONSE_TIMEOUT'));\n      }, responseTimeout);\n\n      this.pendingResponses.set(id, {\n        resolve: (responsePayload: string | null, responseError: RpcError | null) => {\n          clearTimeout(responseTimeoutId);\n          if (this.pendingAcks.has(id)) {\n            console.warn('RPC response received before ack', id);\n            this.pendingAcks.delete(id);\n            clearTimeout(ackTimeoutId);\n          }\n\n          if (responseError) {\n            reject(responseError);\n          } else {\n            resolve(responsePayload ?? '');\n          }\n        },\n        participantIdentity: destinationIdentity,\n      });\n    });\n  }\n\n  /**\n   * Establishes the participant as a receiver for calls of the specified RPC method.\n   * Will overwrite any existing callback for the same method.\n   *\n   * @param method - The name of the indicated RPC method\n   * @param handler - Will be invoked when an RPC request for this method is received\n   * @returns A promise that resolves when the method is successfully registered\n   *\n   * @example\n   * ```typescript\n   * room.localParticipant?.registerRpcMethod(\n   *   'greet',\n   *   async (data: RpcInvocationData) => {\n   *     console.log(`Received greeting from ${data.callerIdentity}: ${data.payload}`);\n   *     return `Hello, ${data.callerIdentity}!`;\n   *   }\n   * );\n   * ```\n   *\n   * The handler should return a Promise that resolves to a string.\n   * If unable to respond within `responseTimeout`, the request will result in an error on the caller's side.\n   *\n   * You may throw errors of type `RpcError` with a string `message` in the handler,\n   * and they will be received on the caller's side with the message intact.\n   * Other errors thrown in your handler will not be transmitted as-is, and will instead arrive to the caller as `1500` (\"Application Error\").\n   */\n  registerRpcMethod(method: string, handler: (data: RpcInvocationData) => Promise<string>) {\n    this.rpcHandlers.set(method, handler);\n  }\n\n  /**\n   * Unregisters a previously registered RPC method.\n   *\n   * @param method - The name of the RPC method to unregister\n   */\n  unregisterRpcMethod(method: string) {\n    this.rpcHandlers.delete(method);\n  }\n\n  /**\n   * Control who can subscribe to LocalParticipant's published tracks.\n   *\n   * By default, all participants can subscribe. This allows fine-grained control over\n   * who is able to subscribe at a participant and track level.\n   *\n   * Note: if access is given at a track-level (i.e. both [allParticipantsAllowed] and\n   * [ParticipantTrackPermission.allTracksAllowed] are false), any newer published tracks\n   * will not grant permissions to any participants and will require a subsequent\n   * permissions update to allow subscription.\n   *\n   * @param allParticipantsAllowed Allows all participants to subscribe all tracks.\n   *  Takes precedence over [[participantTrackPermissions]] if set to true.\n   *  By default this is set to true.\n   * @param participantTrackPermissions Full list of individual permissions per\n   *  participant/track. Any omitted participants will not receive any permissions.\n   */\n  setTrackSubscriptionPermissions(\n    allParticipantsAllowed: boolean,\n    participantTrackPermissions: ParticipantTrackPermission[] = [],\n  ) {\n    this.participantTrackPermissions = participantTrackPermissions;\n    this.allParticipantsAllowedToSubscribe = allParticipantsAllowed;\n    if (!this.engine.client.isDisconnected) {\n      this.updateTrackSubscriptionPermissions();\n    }\n  }\n\n  private handleIncomingRpcAck(requestId: string) {\n    const handler = this.pendingAcks.get(requestId);\n    if (handler) {\n      handler.resolve();\n      this.pendingAcks.delete(requestId);\n    } else {\n      console.error('Ack received for unexpected RPC request', requestId);\n    }\n  }\n\n  private handleIncomingRpcResponse(\n    requestId: string,\n    payload: string | null,\n    error: RpcError | null,\n  ) {\n    const handler = this.pendingResponses.get(requestId);\n    if (handler) {\n      handler.resolve(payload, error);\n      this.pendingResponses.delete(requestId);\n    } else {\n      console.error('Response received for unexpected RPC request', requestId);\n    }\n  }\n\n  private async handleIncomingRpcRequest(\n    callerIdentity: string,\n    requestId: string,\n    method: string,\n    payload: string,\n    responseTimeout: number,\n    version: number,\n  ) {\n    await this.publishRpcAck(callerIdentity, requestId);\n\n    if (version !== 1) {\n      await this.publishRpcResponse(\n        callerIdentity,\n        requestId,\n        null,\n        RpcError.builtIn('UNSUPPORTED_VERSION'),\n      );\n      return;\n    }\n\n    const handler = this.rpcHandlers.get(method);\n\n    if (!handler) {\n      await this.publishRpcResponse(\n        callerIdentity,\n        requestId,\n        null,\n        RpcError.builtIn('UNSUPPORTED_METHOD'),\n      );\n      return;\n    }\n\n    let responseError: RpcError | null = null;\n    let responsePayload: string | null = null;\n\n    try {\n      const response = await handler({\n        requestId,\n        callerIdentity,\n        payload,\n        responseTimeout,\n      });\n      if (byteLength(response) > MAX_PAYLOAD_BYTES) {\n        responseError = RpcError.builtIn('RESPONSE_PAYLOAD_TOO_LARGE');\n        console.warn(`RPC Response payload too large for ${method}`);\n      } else {\n        responsePayload = response;\n      }\n    } catch (error) {\n      if (error instanceof RpcError) {\n        responseError = error;\n      } else {\n        console.warn(\n          `Uncaught error returned by RPC handler for ${method}. Returning APPLICATION_ERROR instead.`,\n          error,\n        );\n        responseError = RpcError.builtIn('APPLICATION_ERROR');\n      }\n    }\n    await this.publishRpcResponse(callerIdentity, requestId, responsePayload, responseError);\n  }\n\n  /** @internal */\n  private async publishRpcRequest(\n    destinationIdentity: string,\n    requestId: string,\n    method: string,\n    payload: string,\n    responseTimeout: number,\n  ) {\n    const packet = new DataPacket({\n      destinationIdentities: [destinationIdentity],\n      kind: DataPacket_Kind.RELIABLE,\n      value: {\n        case: 'rpcRequest',\n        value: new RpcRequest({\n          id: requestId,\n          method,\n          payload,\n          responseTimeoutMs: responseTimeout,\n          version: 1,\n        }),\n      },\n    });\n\n    await this.engine.sendDataPacket(packet, DataPacket_Kind.RELIABLE);\n  }\n\n  /** @internal */\n  private async publishRpcResponse(\n    destinationIdentity: string,\n    requestId: string,\n    payload: string | null,\n    error: RpcError | null,\n  ) {\n    const packet = new DataPacket({\n      destinationIdentities: [destinationIdentity],\n      kind: DataPacket_Kind.RELIABLE,\n      value: {\n        case: 'rpcResponse',\n        value: new RpcResponse({\n          requestId,\n          value: error\n            ? { case: 'error', value: error.toProto() }\n            : { case: 'payload', value: payload ?? '' },\n        }),\n      },\n    });\n\n    await this.engine.sendDataPacket(packet, DataPacket_Kind.RELIABLE);\n  }\n\n  /** @internal */\n  private async publishRpcAck(destinationIdentity: string, requestId: string) {\n    const packet = new DataPacket({\n      destinationIdentities: [destinationIdentity],\n      kind: DataPacket_Kind.RELIABLE,\n      value: {\n        case: 'rpcAck',\n        value: new RpcAck({\n          requestId,\n        }),\n      },\n    });\n\n    await this.engine.sendDataPacket(packet, DataPacket_Kind.RELIABLE);\n  }\n\n  /** @internal */\n  handleParticipantDisconnected(participantIdentity: string) {\n    for (const [id, { participantIdentity: pendingIdentity }] of this.pendingAcks) {\n      if (pendingIdentity === participantIdentity) {\n        this.pendingAcks.delete(id);\n      }\n    }\n\n    for (const [id, { participantIdentity: pendingIdentity, resolve }] of this.pendingResponses) {\n      if (pendingIdentity === participantIdentity) {\n        resolve(null, RpcError.builtIn('RECIPIENT_DISCONNECTED'));\n        this.pendingResponses.delete(id);\n      }\n    }\n  }\n\n  /** @internal */\n  setEnabledPublishCodecs(codecs: Codec[]) {\n    this.enabledPublishVideoCodecs = codecs.filter(\n      (c) => c.mime.split('/')[0].toLowerCase() === 'video',\n    );\n  }\n\n  /** @internal */\n  updateInfo(info: ParticipantInfo): boolean {\n    if (info.sid !== this.sid) {\n      // drop updates that specify a wrong sid.\n      // the sid for local participant is only explicitly set on join and full reconnect\n      return false;\n    }\n    if (!super.updateInfo(info)) {\n      return false;\n    }\n\n    // reconcile track mute status.\n    // if server's track mute status doesn't match actual, we'll have to update\n    // the server's copy\n    info.tracks.forEach((ti) => {\n      const pub = this.trackPublications.get(ti.sid);\n\n      if (pub) {\n        const mutedOnServer = pub.isMuted || (pub.track?.isUpstreamPaused ?? false);\n        if (mutedOnServer !== ti.muted) {\n          this.log.debug('updating server mute state after reconcile', {\n            ...this.logContext,\n            ...getLogContextFromTrack(pub),\n            mutedOnServer,\n          });\n          this.engine.client.sendMuteTrack(ti.sid, mutedOnServer);\n        }\n      }\n    });\n    return true;\n  }\n\n  private updateTrackSubscriptionPermissions = () => {\n    this.log.debug('updating track subscription permissions', {\n      ...this.logContext,\n      allParticipantsAllowed: this.allParticipantsAllowedToSubscribe,\n      participantTrackPermissions: this.participantTrackPermissions,\n    });\n    this.engine.client.sendUpdateSubscriptionPermissions(\n      this.allParticipantsAllowedToSubscribe,\n      this.participantTrackPermissions.map((p) => trackPermissionToProto(p)),\n    );\n  };\n\n  /** @internal */\n  private onTrackUnmuted = (track: LocalTrack) => {\n    this.onTrackMuted(track, track.isUpstreamPaused);\n  };\n\n  // when the local track changes in mute status, we'll notify server as such\n  /** @internal */\n  private onTrackMuted = (track: LocalTrack, muted?: boolean) => {\n    if (muted === undefined) {\n      muted = true;\n    }\n\n    if (!track.sid) {\n      this.log.error('could not update mute status for unpublished track', {\n        ...this.logContext,\n        ...getLogContextFromTrack(track),\n      });\n      return;\n    }\n\n    this.engine.updateMuteStatus(track.sid, muted);\n  };\n\n  private onTrackUpstreamPaused = (track: LocalTrack) => {\n    this.log.debug('upstream paused', {\n      ...this.logContext,\n      ...getLogContextFromTrack(track),\n    });\n    this.onTrackMuted(track, true);\n  };\n\n  private onTrackUpstreamResumed = (track: LocalTrack) => {\n    this.log.debug('upstream resumed', {\n      ...this.logContext,\n      ...getLogContextFromTrack(track),\n    });\n    this.onTrackMuted(track, track.isMuted);\n  };\n\n  private onTrackFeatureUpdate = (track: LocalAudioTrack) => {\n    const pub = this.audioTrackPublications.get(track.sid!);\n    if (!pub) {\n      this.log.warn(\n        `Could not update local audio track settings, missing publication for track ${track.sid}`,\n        this.logContext,\n      );\n      return;\n    }\n    this.engine.client.sendUpdateLocalAudioTrack(pub.trackSid, pub.getTrackFeatures());\n  };\n\n  private handleSubscribedQualityUpdate = async (update: SubscribedQualityUpdate) => {\n    if (!this.roomOptions?.dynacast) {\n      return;\n    }\n    const pub = this.videoTrackPublications.get(update.trackSid);\n    if (!pub) {\n      this.log.warn('received subscribed quality update for unknown track', {\n        ...this.logContext,\n        trackSid: update.trackSid,\n      });\n      return;\n    }\n    if (update.subscribedCodecs.length > 0) {\n      if (!pub.videoTrack) {\n        return;\n      }\n      const newCodecs = await pub.videoTrack.setPublishingCodecs(update.subscribedCodecs);\n      for await (const codec of newCodecs) {\n        if (isBackupCodec(codec)) {\n          this.log.debug(`publish ${codec} for ${pub.videoTrack.sid}`, {\n            ...this.logContext,\n            ...getLogContextFromTrack(pub),\n          });\n          await this.publishAdditionalCodecForTrack(pub.videoTrack, codec, pub.options);\n        }\n      }\n    } else if (update.subscribedQualities.length > 0) {\n      await pub.videoTrack?.setPublishingLayers(update.subscribedQualities);\n    }\n  };\n\n  private handleLocalTrackUnpublished = (unpublished: TrackUnpublishedResponse) => {\n    const track = this.trackPublications.get(unpublished.trackSid);\n    if (!track) {\n      this.log.warn('received unpublished event for unknown track', {\n        ...this.logContext,\n        trackSid: unpublished.trackSid,\n      });\n      return;\n    }\n    this.unpublishTrack(track.track!);\n  };\n\n  private handleTrackEnded = async (track: LocalTrack) => {\n    if (\n      track.source === Track.Source.ScreenShare ||\n      track.source === Track.Source.ScreenShareAudio\n    ) {\n      this.log.debug('unpublishing local track due to TrackEnded', {\n        ...this.logContext,\n        ...getLogContextFromTrack(track),\n      });\n      this.unpublishTrack(track);\n    } else if (track.isUserProvided) {\n      await track.mute();\n    } else if (track instanceof LocalAudioTrack || track instanceof LocalVideoTrack) {\n      try {\n        if (isWeb()) {\n          try {\n            const currentPermissions = await navigator?.permissions.query({\n              // the permission query for camera and microphone currently not supported in Safari and Firefox\n              // @ts-ignore\n              name: track.source === Track.Source.Camera ? 'camera' : 'microphone',\n            });\n            if (currentPermissions && currentPermissions.state === 'denied') {\n              this.log.warn(`user has revoked access to ${track.source}`, {\n                ...this.logContext,\n                ...getLogContextFromTrack(track),\n              });\n\n              // detect granted change after permissions were denied to try and resume then\n              currentPermissions.onchange = () => {\n                if (currentPermissions.state !== 'denied') {\n                  if (!track.isMuted) {\n                    track.restartTrack();\n                  }\n                  currentPermissions.onchange = null;\n                }\n              };\n              throw new Error('GetUserMedia Permission denied');\n            }\n          } catch (e: any) {\n            // permissions query fails for firefox, we continue and try to restart the track\n          }\n        }\n        if (!track.isMuted) {\n          this.log.debug('track ended, attempting to use a different device', {\n            ...this.logContext,\n            ...getLogContextFromTrack(track),\n          });\n          if (track instanceof LocalAudioTrack) {\n            // fall back to default device if available\n            await track.restartTrack({ deviceId: 'default' });\n          } else {\n            await track.restartTrack();\n          }\n        }\n      } catch (e) {\n        this.log.warn(`could not restart track, muting instead`, {\n          ...this.logContext,\n          ...getLogContextFromTrack(track),\n        });\n        await track.mute();\n      }\n    }\n  };\n\n  private getPublicationForTrack(\n    track: LocalTrack | MediaStreamTrack,\n  ): LocalTrackPublication | undefined {\n    let publication: LocalTrackPublication | undefined;\n    this.trackPublications.forEach((pub) => {\n      const localTrack = pub.track;\n      if (!localTrack) {\n        return;\n      }\n\n      // this looks overly complicated due to this object tree\n      if (track instanceof MediaStreamTrack) {\n        if (localTrack instanceof LocalAudioTrack || localTrack instanceof LocalVideoTrack) {\n          if (localTrack.mediaStreamTrack === track) {\n            publication = <LocalTrackPublication>pub;\n          }\n        }\n      } else if (track === localTrack) {\n        publication = <LocalTrackPublication>pub;\n      }\n    });\n    return publication;\n  }\n\n  private async waitForPendingPublicationOfSource(source: Track.Source) {\n    const waitForPendingTimeout = 10_000;\n    const startTime = Date.now();\n\n    while (Date.now() < startTime + waitForPendingTimeout) {\n      const publishPromiseEntry = Array.from(this.pendingPublishPromises.entries()).find(\n        ([pendingTrack]) => pendingTrack.source === source,\n      );\n      if (publishPromiseEntry) {\n        return publishPromiseEntry[1];\n      }\n      await sleep(20);\n    }\n  }\n}\n","import {\n  ParticipantTracks,\n  SubscriptionError,\n  TrackInfo,\n  UpdateSubscription,\n  UpdateTrackSettings,\n} from '@livekit/protocol';\nimport { TrackEvent } from '../events';\nimport type { LoggerOptions } from '../types';\nimport type RemoteTrack from './RemoteTrack';\nimport RemoteVideoTrack from './RemoteVideoTrack';\nimport { Track, VideoQuality } from './Track';\nimport { TrackPublication } from './TrackPublication';\n\nexport default class RemoteTrackPublication extends TrackPublication {\n  track?: RemoteTrack = undefined;\n\n  /** @internal */\n  protected allowed = true;\n\n  // keeps track of client's desire to subscribe to a track, also true if autoSubscribe is active\n  protected subscribed?: boolean;\n\n  protected disabled: boolean = false;\n\n  protected currentVideoQuality?: VideoQuality = VideoQuality.HIGH;\n\n  protected videoDimensions?: Track.Dimensions;\n\n  protected fps?: number;\n\n  protected subscriptionError?: SubscriptionError;\n\n  constructor(\n    kind: Track.Kind,\n    ti: TrackInfo,\n    autoSubscribe: boolean | undefined,\n    loggerOptions?: LoggerOptions,\n  ) {\n    super(kind, ti.sid, ti.name, loggerOptions);\n    this.subscribed = autoSubscribe;\n    this.updateInfo(ti);\n  }\n\n  /**\n   * Subscribe or unsubscribe to this remote track\n   * @param subscribed true to subscribe to a track, false to unsubscribe\n   */\n  setSubscribed(subscribed: boolean) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    this.subscribed = subscribed;\n    // reset allowed status when desired subscription state changes\n    // server will notify client via signal message if it's not allowed\n    if (subscribed) {\n      this.allowed = true;\n    }\n\n    const sub = new UpdateSubscription({\n      trackSids: [this.trackSid],\n      subscribe: this.subscribed,\n      participantTracks: [\n        new ParticipantTracks({\n          // sending an empty participant id since TrackPublication doesn't keep it\n          // this is filled in by the participant that receives this message\n          participantSid: '',\n          trackSids: [this.trackSid],\n        }),\n      ],\n    });\n    this.emit(TrackEvent.UpdateSubscription, sub);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n    this.emitPermissionUpdateIfChanged(prevPermission);\n  }\n\n  get subscriptionStatus(): TrackPublication.SubscriptionStatus {\n    if (this.subscribed === false) {\n      return TrackPublication.SubscriptionStatus.Unsubscribed;\n    }\n    if (!super.isSubscribed) {\n      return TrackPublication.SubscriptionStatus.Desired;\n    }\n    return TrackPublication.SubscriptionStatus.Subscribed;\n  }\n\n  get permissionStatus(): TrackPublication.PermissionStatus {\n    return this.allowed\n      ? TrackPublication.PermissionStatus.Allowed\n      : TrackPublication.PermissionStatus.NotAllowed;\n  }\n\n  /**\n   * Returns true if track is subscribed, and ready for playback\n   */\n  get isSubscribed(): boolean {\n    if (this.subscribed === false) {\n      return false;\n    }\n    return super.isSubscribed;\n  }\n\n  // returns client's desire to subscribe to a track, also true if autoSubscribe is enabled\n  get isDesired(): boolean {\n    return this.subscribed !== false;\n  }\n\n  get isEnabled(): boolean {\n    return !this.disabled;\n  }\n\n  /**\n   * disable server from sending down data for this track. this is useful when\n   * the participant is off screen, you may disable streaming down their video\n   * to reduce bandwidth requirements\n   * @param enabled\n   */\n  setEnabled(enabled: boolean) {\n    if (!this.isManualOperationAllowed() || this.disabled === !enabled) {\n      return;\n    }\n    this.disabled = !enabled;\n\n    this.emitTrackUpdate();\n  }\n\n  /**\n   * for tracks that support simulcasting, adjust subscribed quality\n   *\n   * This indicates the highest quality the client can accept. if network\n   * bandwidth does not allow, server will automatically reduce quality to\n   * optimize for uninterrupted video\n   */\n  setVideoQuality(quality: VideoQuality) {\n    if (!this.isManualOperationAllowed() || this.currentVideoQuality === quality) {\n      return;\n    }\n    this.currentVideoQuality = quality;\n    this.videoDimensions = undefined;\n\n    this.emitTrackUpdate();\n  }\n\n  setVideoDimensions(dimensions: Track.Dimensions) {\n    if (!this.isManualOperationAllowed()) {\n      return;\n    }\n    if (\n      this.videoDimensions?.width === dimensions.width &&\n      this.videoDimensions?.height === dimensions.height\n    ) {\n      return;\n    }\n    if (this.track instanceof RemoteVideoTrack) {\n      this.videoDimensions = dimensions;\n    }\n    this.currentVideoQuality = undefined;\n\n    this.emitTrackUpdate();\n  }\n\n  setVideoFPS(fps: number) {\n    if (!this.isManualOperationAllowed()) {\n      return;\n    }\n\n    if (!(this.track instanceof RemoteVideoTrack)) {\n      return;\n    }\n\n    if (this.fps === fps) {\n      return;\n    }\n\n    this.fps = fps;\n    this.emitTrackUpdate();\n  }\n\n  get videoQuality(): VideoQuality | undefined {\n    return this.currentVideoQuality;\n  }\n\n  /** @internal */\n  setTrack(track?: RemoteTrack) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    const prevTrack = this.track;\n    if (prevTrack === track) {\n      return;\n    }\n    if (prevTrack) {\n      // unregister listener\n      prevTrack.off(TrackEvent.VideoDimensionsChanged, this.handleVideoDimensionsChange);\n      prevTrack.off(TrackEvent.VisibilityChanged, this.handleVisibilityChange);\n      prevTrack.off(TrackEvent.Ended, this.handleEnded);\n      prevTrack.detach();\n      prevTrack.stopMonitor();\n      this.emit(TrackEvent.Unsubscribed, prevTrack);\n    }\n    super.setTrack(track);\n    if (track) {\n      track.sid = this.trackSid;\n      track.on(TrackEvent.VideoDimensionsChanged, this.handleVideoDimensionsChange);\n      track.on(TrackEvent.VisibilityChanged, this.handleVisibilityChange);\n      track.on(TrackEvent.Ended, this.handleEnded);\n      this.emit(TrackEvent.Subscribed, track);\n    }\n    this.emitPermissionUpdateIfChanged(prevPermission);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n  }\n\n  /** @internal */\n  setAllowed(allowed: boolean) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    this.allowed = allowed;\n    this.emitPermissionUpdateIfChanged(prevPermission);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n  }\n\n  /** @internal */\n  setSubscriptionError(error: SubscriptionError) {\n    this.emit(TrackEvent.SubscriptionFailed, error);\n  }\n\n  /** @internal */\n  updateInfo(info: TrackInfo) {\n    super.updateInfo(info);\n    const prevMetadataMuted = this.metadataMuted;\n    this.metadataMuted = info.muted;\n    if (this.track) {\n      this.track.setMuted(info.muted);\n    } else if (prevMetadataMuted !== info.muted) {\n      this.emit(info.muted ? TrackEvent.Muted : TrackEvent.Unmuted);\n    }\n  }\n\n  private emitSubscriptionUpdateIfChanged(previousStatus: TrackPublication.SubscriptionStatus) {\n    const currentStatus = this.subscriptionStatus;\n    if (previousStatus === currentStatus) {\n      return;\n    }\n    this.emit(TrackEvent.SubscriptionStatusChanged, currentStatus, previousStatus);\n  }\n\n  private emitPermissionUpdateIfChanged(\n    previousPermissionStatus: TrackPublication.PermissionStatus,\n  ) {\n    const currentPermissionStatus = this.permissionStatus;\n    if (currentPermissionStatus !== previousPermissionStatus) {\n      this.emit(\n        TrackEvent.SubscriptionPermissionChanged,\n        this.permissionStatus,\n        previousPermissionStatus,\n      );\n    }\n  }\n\n  private isManualOperationAllowed(): boolean {\n    if (this.kind === Track.Kind.Video && this.isAdaptiveStream) {\n      this.log.warn(\n        'adaptive stream is enabled, cannot change video track settings',\n        this.logContext,\n      );\n      return false;\n    }\n    if (!this.isDesired) {\n      this.log.warn('cannot update track settings when not subscribed', this.logContext);\n      return false;\n    }\n    return true;\n  }\n\n  protected handleEnded = (track: RemoteTrack) => {\n    this.setTrack(undefined);\n    this.emit(TrackEvent.Ended, track);\n  };\n\n  protected get isAdaptiveStream(): boolean {\n    return this.track instanceof RemoteVideoTrack && this.track.isAdaptiveStream;\n  }\n\n  protected handleVisibilityChange = (visible: boolean) => {\n    this.log.debug(\n      `adaptivestream video visibility ${this.trackSid}, visible=${visible}`,\n      this.logContext,\n    );\n    this.disabled = !visible;\n    this.emitTrackUpdate();\n  };\n\n  protected handleVideoDimensionsChange = (dimensions: Track.Dimensions) => {\n    this.log.debug(\n      `adaptivestream video dimensions ${dimensions.width}x${dimensions.height}`,\n      this.logContext,\n    );\n    this.videoDimensions = dimensions;\n    this.emitTrackUpdate();\n  };\n\n  /* @internal */\n  emitTrackUpdate() {\n    const settings: UpdateTrackSettings = new UpdateTrackSettings({\n      trackSids: [this.trackSid],\n      disabled: this.disabled,\n      fps: this.fps,\n    });\n    if (this.videoDimensions) {\n      settings.width = Math.ceil(this.videoDimensions.width);\n      settings.height = Math.ceil(this.videoDimensions.height);\n    } else if (this.currentVideoQuality !== undefined) {\n      settings.quality = this.currentVideoQuality;\n    } else {\n      // defaults to high quality\n      settings.quality = VideoQuality.HIGH;\n    }\n\n    this.emit(TrackEvent.UpdateSettings, settings);\n  }\n}\n","import type {\n  ParticipantInfo,\n  SubscriptionError,\n  UpdateSubscription,\n  UpdateTrackSettings,\n} from '@livekit/protocol';\nimport type { SignalClient } from '../../api/SignalClient';\nimport { ParticipantEvent, TrackEvent } from '../events';\nimport RemoteAudioTrack from '../track/RemoteAudioTrack';\nimport type RemoteTrack from '../track/RemoteTrack';\nimport RemoteTrackPublication from '../track/RemoteTrackPublication';\nimport RemoteVideoTrack from '../track/RemoteVideoTrack';\nimport { Track } from '../track/Track';\nimport type { TrackPublication } from '../track/TrackPublication';\nimport type { AudioOutputOptions } from '../track/options';\nimport type { AdaptiveStreamSettings } from '../track/types';\nimport { getLogContextFromTrack } from '../track/utils';\nimport type { LoggerOptions } from '../types';\nimport Participant, { ParticipantKind } from './Participant';\nimport type { ParticipantEventCallbacks } from './Participant';\n\nexport default class RemoteParticipant extends Participant {\n  audioTrackPublications: Map<string, RemoteTrackPublication>;\n\n  videoTrackPublications: Map<string, RemoteTrackPublication>;\n\n  trackPublications: Map<string, RemoteTrackPublication>;\n\n  signalClient: SignalClient;\n\n  private volumeMap: Map<Track.Source, number>;\n\n  private audioOutput?: AudioOutputOptions;\n\n  /** @internal */\n  static fromParticipantInfo(\n    signalClient: SignalClient,\n    pi: ParticipantInfo,\n    loggerOptions: LoggerOptions,\n  ): RemoteParticipant {\n    return new RemoteParticipant(\n      signalClient,\n      pi.sid,\n      pi.identity,\n      pi.name,\n      pi.metadata,\n      pi.attributes,\n      loggerOptions,\n      pi.kind,\n    );\n  }\n\n  protected get logContext() {\n    return {\n      ...super.logContext,\n      rpID: this.sid,\n      remoteParticipant: this.identity,\n    };\n  }\n\n  /** @internal */\n  constructor(\n    signalClient: SignalClient,\n    sid: string,\n    identity?: string,\n    name?: string,\n    metadata?: string,\n    attributes?: Record<string, string>,\n    loggerOptions?: LoggerOptions,\n    kind: ParticipantKind = ParticipantKind.STANDARD,\n  ) {\n    super(sid, identity || '', name, metadata, attributes, loggerOptions, kind);\n    this.signalClient = signalClient;\n    this.trackPublications = new Map();\n    this.audioTrackPublications = new Map();\n    this.videoTrackPublications = new Map();\n    this.volumeMap = new Map();\n  }\n\n  protected addTrackPublication(publication: RemoteTrackPublication) {\n    super.addTrackPublication(publication);\n\n    // register action events\n    publication.on(TrackEvent.UpdateSettings, (settings: UpdateTrackSettings) => {\n      this.log.debug('send update settings', {\n        ...this.logContext,\n        ...getLogContextFromTrack(publication),\n      });\n      this.signalClient.sendUpdateTrackSettings(settings);\n    });\n    publication.on(TrackEvent.UpdateSubscription, (sub: UpdateSubscription) => {\n      sub.participantTracks.forEach((pt) => {\n        pt.participantSid = this.sid;\n      });\n      this.signalClient.sendUpdateSubscription(sub);\n    });\n    publication.on(\n      TrackEvent.SubscriptionPermissionChanged,\n      (status: TrackPublication.PermissionStatus) => {\n        this.emit(ParticipantEvent.TrackSubscriptionPermissionChanged, publication, status);\n      },\n    );\n    publication.on(\n      TrackEvent.SubscriptionStatusChanged,\n      (status: TrackPublication.SubscriptionStatus) => {\n        this.emit(ParticipantEvent.TrackSubscriptionStatusChanged, publication, status);\n      },\n    );\n    publication.on(TrackEvent.Subscribed, (track: RemoteTrack) => {\n      this.emit(ParticipantEvent.TrackSubscribed, track, publication);\n    });\n    publication.on(TrackEvent.Unsubscribed, (previousTrack: RemoteTrack) => {\n      this.emit(ParticipantEvent.TrackUnsubscribed, previousTrack, publication);\n    });\n    publication.on(TrackEvent.SubscriptionFailed, (error: SubscriptionError) => {\n      this.emit(ParticipantEvent.TrackSubscriptionFailed, publication.trackSid, error);\n    });\n  }\n\n  getTrackPublication(source: Track.Source): RemoteTrackPublication | undefined {\n    const track = super.getTrackPublication(source);\n    if (track) {\n      return track as RemoteTrackPublication;\n    }\n  }\n\n  getTrackPublicationByName(name: string): RemoteTrackPublication | undefined {\n    const track = super.getTrackPublicationByName(name);\n    if (track) {\n      return track as RemoteTrackPublication;\n    }\n  }\n\n  /**\n   * sets the volume on the participant's audio track\n   * by default, this affects the microphone publication\n   * a different source can be passed in as a second argument\n   * if no track exists the volume will be applied when the microphone track is added\n   */\n  setVolume(\n    volume: number,\n    source: Track.Source.Microphone | Track.Source.ScreenShareAudio = Track.Source.Microphone,\n  ) {\n    this.volumeMap.set(source, volume);\n    const audioPublication = this.getTrackPublication(source);\n    if (audioPublication && audioPublication.track) {\n      (audioPublication.track as RemoteAudioTrack).setVolume(volume);\n    }\n  }\n\n  /**\n   * gets the volume on the participant's microphone track\n   */\n  getVolume(\n    source: Track.Source.Microphone | Track.Source.ScreenShareAudio = Track.Source.Microphone,\n  ) {\n    const audioPublication = this.getTrackPublication(source);\n    if (audioPublication && audioPublication.track) {\n      return (audioPublication.track as RemoteAudioTrack).getVolume();\n    }\n    return this.volumeMap.get(source);\n  }\n\n  /** @internal */\n  addSubscribedMediaTrack(\n    mediaTrack: MediaStreamTrack,\n    sid: Track.SID,\n    mediaStream: MediaStream,\n    receiver: RTCRtpReceiver,\n    adaptiveStreamSettings?: AdaptiveStreamSettings,\n    triesLeft?: number,\n  ) {\n    // find the track publication\n    // it's possible for the media track to arrive before participant info\n    let publication = this.getTrackPublicationBySid(sid);\n\n    // it's also possible that the browser didn't honor our original track id\n    // FireFox would use its own local uuid instead of server track id\n    if (!publication) {\n      if (!sid.startsWith('TR')) {\n        // find the first track that matches type\n        this.trackPublications.forEach((p) => {\n          if (!publication && mediaTrack.kind === p.kind.toString()) {\n            publication = p;\n          }\n        });\n      }\n    }\n\n    // when we couldn't locate the track, it's possible that the metadata hasn't\n    // yet arrived. Wait a bit longer for it to arrive, or fire an error\n    if (!publication) {\n      if (triesLeft === 0) {\n        this.log.error('could not find published track', {\n          ...this.logContext,\n          trackSid: sid,\n        });\n        this.emit(ParticipantEvent.TrackSubscriptionFailed, sid);\n        return;\n      }\n\n      if (triesLeft === undefined) triesLeft = 20;\n      setTimeout(() => {\n        this.addSubscribedMediaTrack(\n          mediaTrack,\n          sid,\n          mediaStream,\n          receiver,\n          adaptiveStreamSettings,\n          triesLeft! - 1,\n        );\n      }, 150);\n      return;\n    }\n\n    if (mediaTrack.readyState === 'ended') {\n      this.log.error(\n        'unable to subscribe because MediaStreamTrack is ended. Do not call MediaStreamTrack.stop()',\n        { ...this.logContext, ...getLogContextFromTrack(publication) },\n      );\n      this.emit(ParticipantEvent.TrackSubscriptionFailed, sid);\n      return;\n    }\n\n    const isVideo = mediaTrack.kind === 'video';\n    let track: RemoteTrack;\n    if (isVideo) {\n      track = new RemoteVideoTrack(mediaTrack, sid, receiver, adaptiveStreamSettings);\n    } else {\n      track = new RemoteAudioTrack(mediaTrack, sid, receiver, this.audioContext, this.audioOutput);\n    }\n\n    // set track info\n    track.source = publication.source;\n    // keep publication's muted status\n    track.isMuted = publication.isMuted;\n    track.setMediaStream(mediaStream);\n    track.start();\n\n    publication.setTrack(track);\n    // set participant volumes on new audio tracks\n    if (this.volumeMap.has(publication.source) && track instanceof RemoteAudioTrack) {\n      track.setVolume(this.volumeMap.get(publication.source)!);\n    }\n\n    return publication;\n  }\n\n  /** @internal */\n  get hasMetadata(): boolean {\n    return !!this.participantInfo;\n  }\n\n  /**\n   * @internal\n   */\n  getTrackPublicationBySid(sid: Track.SID): RemoteTrackPublication | undefined {\n    return this.trackPublications.get(sid);\n  }\n\n  /** @internal */\n  updateInfo(info: ParticipantInfo): boolean {\n    if (!super.updateInfo(info)) {\n      return false;\n    }\n\n    // we are getting a list of all available tracks, reconcile in here\n    // and send out events for changes\n\n    // reconcile track publications, publish events only if metadata is already there\n    // i.e. changes since the local participant has joined\n    const validTracks = new Map<string, RemoteTrackPublication>();\n    const newTracks = new Map<string, RemoteTrackPublication>();\n\n    info.tracks.forEach((ti) => {\n      let publication = this.getTrackPublicationBySid(ti.sid);\n      if (!publication) {\n        // new publication\n        const kind = Track.kindFromProto(ti.type);\n        if (!kind) {\n          return;\n        }\n        publication = new RemoteTrackPublication(\n          kind,\n          ti,\n          this.signalClient.connectOptions?.autoSubscribe,\n          { loggerContextCb: () => this.logContext, loggerName: this.loggerOptions?.loggerName },\n        );\n        publication.updateInfo(ti);\n        newTracks.set(ti.sid, publication);\n        const existingTrackOfSource = Array.from(this.trackPublications.values()).find(\n          (publishedTrack) => publishedTrack.source === publication?.source,\n        );\n        if (existingTrackOfSource && publication.source !== Track.Source.Unknown) {\n          this.log.debug(\n            `received a second track publication for ${this.identity} with the same source: ${publication.source}`,\n            {\n              ...this.logContext,\n              oldTrack: getLogContextFromTrack(existingTrackOfSource),\n              newTrack: getLogContextFromTrack(publication),\n            },\n          );\n        }\n        this.addTrackPublication(publication);\n      } else {\n        publication.updateInfo(ti);\n      }\n      validTracks.set(ti.sid, publication);\n    });\n\n    // detect removed tracks\n    this.trackPublications.forEach((publication) => {\n      if (!validTracks.has(publication.trackSid)) {\n        this.log.trace('detected removed track on remote participant, unpublishing', {\n          ...this.logContext,\n          ...getLogContextFromTrack(publication),\n        });\n        this.unpublishTrack(publication.trackSid, true);\n      }\n    });\n\n    // always emit events for new publications, Room will not forward them unless it's ready\n    newTracks.forEach((publication) => {\n      this.emit(ParticipantEvent.TrackPublished, publication);\n    });\n    return true;\n  }\n\n  /** @internal */\n  unpublishTrack(sid: Track.SID, sendUnpublish?: boolean) {\n    const publication = <RemoteTrackPublication>this.trackPublications.get(sid);\n    if (!publication) {\n      return;\n    }\n\n    // also send unsubscribe, if track is actively subscribed\n    const { track } = publication;\n    if (track) {\n      track.stop();\n      publication.setTrack(undefined);\n    }\n\n    // remove track from maps only after unsubscribed has been fired\n    this.trackPublications.delete(sid);\n\n    // remove from the right type map\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTrackPublications.delete(sid);\n        break;\n      case Track.Kind.Video:\n        this.videoTrackPublications.delete(sid);\n        break;\n      default:\n        break;\n    }\n\n    if (sendUnpublish) {\n      this.emit(ParticipantEvent.TrackUnpublished, publication);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async setAudioOutput(output: AudioOutputOptions) {\n    this.audioOutput = output;\n    const promises: Promise<void>[] = [];\n    this.audioTrackPublications.forEach((pub) => {\n      if (pub.track instanceof RemoteAudioTrack) {\n        promises.push(pub.track.setSinkId(output.deviceId ?? 'default'));\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  /** @internal */\n  emit<E extends keyof ParticipantEventCallbacks>(\n    event: E,\n    ...args: Parameters<ParticipantEventCallbacks[E]>\n  ): boolean {\n    this.log.trace('participant event', { ...this.logContext, event, args });\n    return super.emit(event, ...args);\n  }\n}\n","import { Mutex } from '@livekit/mutex';\nimport {\n  ChatMessage as ChatMessageModel,\n  ConnectionQualityUpdate,\n  type DataPacket,\n  DataPacket_Kind,\n  DisconnectReason,\n  JoinResponse,\n  LeaveRequest,\n  LeaveRequest_Action,\n  MetricsBatch,\n  ParticipantInfo,\n  ParticipantInfo_State,\n  ParticipantPermission,\n  Room as RoomModel,\n  ServerInfo,\n  SimulateScenario,\n  SipDTMF,\n  SpeakerInfo,\n  StreamStateUpdate,\n  SubscriptionError,\n  SubscriptionPermissionUpdate,\n  SubscriptionResponse,\n  TrackInfo,\n  TrackSource,\n  TrackType,\n  Transcription as TranscriptionModel,\n  TranscriptionSegment as TranscriptionSegmentModel,\n  UserPacket,\n  protoInt64,\n} from '@livekit/protocol';\nimport { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport 'webrtc-adapter';\nimport { EncryptionEvent } from '../e2ee';\nimport { type BaseE2EEManager, E2EEManager } from '../e2ee/E2eeManager';\nimport log, { LoggerNames, getLogger } from '../logger';\nimport type {\n  InternalRoomConnectOptions,\n  InternalRoomOptions,\n  RoomConnectOptions,\n  RoomOptions,\n} from '../options';\nimport { getBrowser } from '../utils/browserParser';\nimport DeviceManager from './DeviceManager';\nimport RTCEngine from './RTCEngine';\nimport { RegionUrlProvider } from './RegionUrlProvider';\nimport {\n  audioDefaults,\n  publishDefaults,\n  roomConnectOptionDefaults,\n  roomOptionDefaults,\n  videoDefaults,\n} from './defaults';\nimport { ConnectionError, ConnectionErrorReason, UnsupportedServer } from './errors';\nimport { EngineEvent, ParticipantEvent, RoomEvent, TrackEvent } from './events';\nimport LocalParticipant from './participant/LocalParticipant';\nimport type Participant from './participant/Participant';\nimport type { ConnectionQuality } from './participant/Participant';\nimport RemoteParticipant from './participant/RemoteParticipant';\nimport CriticalTimers from './timers';\nimport LocalAudioTrack from './track/LocalAudioTrack';\nimport type LocalTrack from './track/LocalTrack';\nimport LocalTrackPublication from './track/LocalTrackPublication';\nimport LocalVideoTrack from './track/LocalVideoTrack';\nimport type RemoteTrack from './track/RemoteTrack';\nimport RemoteTrackPublication from './track/RemoteTrackPublication';\nimport { Track } from './track/Track';\nimport type { TrackPublication } from './track/TrackPublication';\nimport type { TrackProcessor } from './track/processor/types';\nimport type { AdaptiveStreamSettings } from './track/types';\nimport { getNewAudioContext, sourceToKind } from './track/utils';\nimport type {\n  ChatMessage,\n  SimulationOptions,\n  SimulationScenario,\n  TranscriptionSegment,\n} from './types';\nimport {\n  Future,\n  createDummyVideoStreamTrack,\n  extractChatMessage,\n  extractTranscriptionSegments,\n  getDisconnectReasonFromConnectionError,\n  getEmptyAudioStreamTrack,\n  isBrowserSupported,\n  isCloud,\n  isReactNative,\n  isSafari,\n  isWeb,\n  supportsSetSinkId,\n  toHttpUrl,\n  unpackStreamId,\n  unwrapConstraint,\n} from './utils';\n\nexport enum ConnectionState {\n  Disconnected = 'disconnected',\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Reconnecting = 'reconnecting',\n  SignalReconnecting = 'signalReconnecting',\n}\n\nconst connectionReconcileFrequency = 4 * 1000;\n\n/**\n * In LiveKit, a room is the logical grouping for a list of participants.\n * Participants in a room can publish tracks, and subscribe to others' tracks.\n *\n * a Room fires [[RoomEvent | RoomEvents]].\n *\n * @noInheritDoc\n */\nclass Room extends (EventEmitter as new () => TypedEmitter<RoomEventCallbacks>) {\n  state: ConnectionState = ConnectionState.Disconnected;\n\n  /**\n   * map of identity: [[RemoteParticipant]]\n   */\n  remoteParticipants: Map<string, RemoteParticipant>;\n\n  /**\n   * list of participants that are actively speaking. when this changes\n   * a [[RoomEvent.ActiveSpeakersChanged]] event is fired\n   */\n  activeSpeakers: Participant[] = [];\n\n  /** @internal */\n  engine!: RTCEngine;\n\n  /** the current participant */\n  localParticipant: LocalParticipant;\n\n  /** options of room */\n  options: InternalRoomOptions;\n\n  /** reflects the sender encryption status of the local participant */\n  isE2EEEnabled: boolean = false;\n\n  serverInfo?: Partial<ServerInfo>;\n\n  private roomInfo?: RoomModel;\n\n  private sidToIdentity: Map<string, string>;\n\n  /** connect options of room */\n  private connOptions?: InternalRoomConnectOptions;\n\n  private audioEnabled = true;\n\n  private audioContext?: AudioContext;\n\n  /** used for aborting pending connections to a LiveKit server */\n  private abortController?: AbortController;\n\n  /** future holding client initiated connection attempt */\n  private connectFuture?: Future<void>;\n\n  private disconnectLock: Mutex;\n\n  private e2eeManager: BaseE2EEManager | undefined;\n\n  private connectionReconcileInterval?: ReturnType<typeof setInterval>;\n\n  private regionUrlProvider?: RegionUrlProvider;\n\n  private regionUrl?: string;\n\n  private isVideoPlaybackBlocked: boolean = false;\n\n  private log = log;\n\n  private bufferedEvents: Array<any> = [];\n\n  private isResuming: boolean = false;\n\n  /**\n   * map to store first point in time when a particular transcription segment was received\n   */\n  private transcriptionReceivedTimes: Map<string, number>;\n\n  /**\n   * Creates a new Room, the primary construct for a LiveKit session.\n   * @param options\n   */\n  constructor(options?: RoomOptions) {\n    super();\n    this.setMaxListeners(100);\n    this.remoteParticipants = new Map();\n    this.sidToIdentity = new Map();\n    this.options = { ...roomOptionDefaults, ...options };\n\n    this.log = getLogger(this.options.loggerName ?? LoggerNames.Room);\n    this.transcriptionReceivedTimes = new Map();\n\n    this.options.audioCaptureDefaults = {\n      ...audioDefaults,\n      ...options?.audioCaptureDefaults,\n    };\n    this.options.videoCaptureDefaults = {\n      ...videoDefaults,\n      ...options?.videoCaptureDefaults,\n    };\n    this.options.publishDefaults = {\n      ...publishDefaults,\n      ...options?.publishDefaults,\n    };\n\n    this.maybeCreateEngine();\n\n    this.disconnectLock = new Mutex();\n\n    this.localParticipant = new LocalParticipant('', '', this.engine, this.options);\n\n    if (this.options.videoCaptureDefaults.deviceId) {\n      this.localParticipant.activeDeviceMap.set(\n        'videoinput',\n        unwrapConstraint(this.options.videoCaptureDefaults.deviceId),\n      );\n    }\n    if (this.options.audioCaptureDefaults.deviceId) {\n      this.localParticipant.activeDeviceMap.set(\n        'audioinput',\n        unwrapConstraint(this.options.audioCaptureDefaults.deviceId),\n      );\n    }\n    if (this.options.audioOutput?.deviceId) {\n      this.switchActiveDevice(\n        'audiooutput',\n        unwrapConstraint(this.options.audioOutput.deviceId),\n      ).catch((e) => this.log.warn(`Could not set audio output: ${e.message}`, this.logContext));\n    }\n\n    if (this.options.e2ee) {\n      this.setupE2EE();\n    }\n\n    if (isWeb()) {\n      const abortController = new AbortController();\n\n      // in order to catch device changes prior to room connection we need to register the event in the constructor\n      navigator.mediaDevices?.addEventListener('devicechange', this.handleDeviceChange, {\n        signal: abortController.signal,\n      });\n\n      if (Room.cleanupRegistry) {\n        Room.cleanupRegistry.register(this, () => {\n          abortController.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * @experimental\n   */\n  async setE2EEEnabled(enabled: boolean) {\n    if (this.e2eeManager) {\n      await Promise.all([this.localParticipant.setE2EEEnabled(enabled)]);\n      if (this.localParticipant.identity !== '') {\n        this.e2eeManager.setParticipantCryptorEnabled(enabled, this.localParticipant.identity);\n      }\n    } else {\n      throw Error('e2ee not configured, please set e2ee settings within the room options');\n    }\n  }\n\n  private setupE2EE() {\n    if (this.options.e2ee) {\n      if ('e2eeManager' in this.options.e2ee) {\n        this.e2eeManager = this.options.e2ee.e2eeManager;\n      } else {\n        this.e2eeManager = new E2EEManager(this.options.e2ee);\n      }\n      this.e2eeManager.on(\n        EncryptionEvent.ParticipantEncryptionStatusChanged,\n        (enabled, participant) => {\n          if (participant instanceof LocalParticipant) {\n            this.isE2EEEnabled = enabled;\n          }\n          this.emit(RoomEvent.ParticipantEncryptionStatusChanged, enabled, participant);\n        },\n      );\n      this.e2eeManager.on(EncryptionEvent.EncryptionError, (error) =>\n        this.emit(RoomEvent.EncryptionError, error),\n      );\n      this.e2eeManager?.setup(this);\n    }\n  }\n\n  private get logContext() {\n    return {\n      room: this.name,\n      roomID: this.roomInfo?.sid,\n      participant: this.localParticipant.identity,\n      pID: this.localParticipant.sid,\n    };\n  }\n\n  /**\n   * if the current room has a participant with `recorder: true` in its JWT grant\n   **/\n  get isRecording(): boolean {\n    return this.roomInfo?.activeRecording ?? false;\n  }\n\n  /**\n   * server assigned unique room id.\n   * returns once a sid has been issued by the server.\n   */\n  async getSid(): Promise<string> {\n    if (this.state === ConnectionState.Disconnected) {\n      return '';\n    }\n    if (this.roomInfo && this.roomInfo.sid !== '') {\n      return this.roomInfo.sid;\n    }\n    return new Promise((resolve, reject) => {\n      const handleRoomUpdate = (roomInfo: RoomModel) => {\n        if (roomInfo.sid !== '') {\n          this.engine.off(EngineEvent.RoomUpdate, handleRoomUpdate);\n          resolve(roomInfo.sid);\n        }\n      };\n      this.engine.on(EngineEvent.RoomUpdate, handleRoomUpdate);\n      this.once(RoomEvent.Disconnected, () => {\n        this.engine.off(EngineEvent.RoomUpdate, handleRoomUpdate);\n        reject('Room disconnected before room server id was available');\n      });\n    });\n  }\n\n  /** user assigned name, derived from JWT token */\n  get name(): string {\n    return this.roomInfo?.name ?? '';\n  }\n\n  /** room metadata */\n  get metadata(): string | undefined {\n    return this.roomInfo?.metadata;\n  }\n\n  get numParticipants(): number {\n    return this.roomInfo?.numParticipants ?? 0;\n  }\n\n  get numPublishers(): number {\n    return this.roomInfo?.numPublishers ?? 0;\n  }\n\n  private maybeCreateEngine() {\n    if (this.engine && !this.engine.isClosed) {\n      return;\n    }\n\n    this.engine = new RTCEngine(this.options);\n\n    this.engine\n      .on(EngineEvent.ParticipantUpdate, this.handleParticipantUpdates)\n      .on(EngineEvent.RoomUpdate, this.handleRoomUpdate)\n      .on(EngineEvent.SpeakersChanged, this.handleSpeakersChanged)\n      .on(EngineEvent.StreamStateChanged, this.handleStreamStateUpdate)\n      .on(EngineEvent.ConnectionQualityUpdate, this.handleConnectionQualityUpdate)\n      .on(EngineEvent.SubscriptionError, this.handleSubscriptionError)\n      .on(EngineEvent.SubscriptionPermissionUpdate, this.handleSubscriptionPermissionUpdate)\n      .on(\n        EngineEvent.MediaTrackAdded,\n        (mediaTrack: MediaStreamTrack, stream: MediaStream, receiver: RTCRtpReceiver) => {\n          this.onTrackAdded(mediaTrack, stream, receiver);\n        },\n      )\n      .on(EngineEvent.Disconnected, (reason?: DisconnectReason) => {\n        this.handleDisconnect(this.options.stopLocalTrackOnUnpublish, reason);\n      })\n      .on(EngineEvent.ActiveSpeakersUpdate, this.handleActiveSpeakersUpdate)\n      .on(EngineEvent.DataPacketReceived, this.handleDataPacket)\n      .on(EngineEvent.Resuming, () => {\n        this.clearConnectionReconcile();\n        this.isResuming = true;\n        this.log.info('Resuming signal connection', this.logContext);\n        if (this.setAndEmitConnectionState(ConnectionState.SignalReconnecting)) {\n          this.emit(RoomEvent.SignalReconnecting);\n        }\n      })\n      .on(EngineEvent.Resumed, () => {\n        this.registerConnectionReconcile();\n        this.isResuming = false;\n        this.log.info('Resumed signal connection', this.logContext);\n        this.updateSubscriptions();\n        this.emitBufferedEvents();\n        if (this.setAndEmitConnectionState(ConnectionState.Connected)) {\n          this.emit(RoomEvent.Reconnected);\n        }\n      })\n      .on(EngineEvent.SignalResumed, () => {\n        this.bufferedEvents = [];\n        if (this.state === ConnectionState.Reconnecting || this.isResuming) {\n          this.sendSyncState();\n        }\n      })\n      .on(EngineEvent.Restarting, this.handleRestarting)\n      .on(EngineEvent.SignalRestarted, this.handleSignalRestarted)\n      .on(EngineEvent.Offline, () => {\n        if (this.setAndEmitConnectionState(ConnectionState.Reconnecting)) {\n          this.emit(RoomEvent.Reconnecting);\n        }\n      })\n      .on(EngineEvent.DCBufferStatusChanged, (status, kind) => {\n        this.emit(RoomEvent.DCBufferStatusChanged, status, kind);\n      })\n      .on(EngineEvent.LocalTrackSubscribed, (subscribedSid) => {\n        const trackPublication = this.localParticipant\n          .getTrackPublications()\n          .find(({ trackSid }) => trackSid === subscribedSid) as LocalTrackPublication | undefined;\n        if (!trackPublication) {\n          this.log.warn(\n            'could not find local track subscription for subscribed event',\n            this.logContext,\n          );\n          return;\n        }\n        this.localParticipant.emit(ParticipantEvent.LocalTrackSubscribed, trackPublication);\n        this.emitWhenConnected(\n          RoomEvent.LocalTrackSubscribed,\n          trackPublication,\n          this.localParticipant,\n        );\n      });\n\n    if (this.localParticipant) {\n      this.localParticipant.setupEngine(this.engine);\n    }\n    if (this.e2eeManager) {\n      this.e2eeManager.setupEngine(this.engine);\n    }\n  }\n\n  /**\n   * getLocalDevices abstracts navigator.mediaDevices.enumerateDevices.\n   * In particular, it requests device permissions by default if needed\n   * and makes sure the returned device does not consist of dummy devices\n   * @param kind\n   * @returns a list of available local devices\n   */\n  static getLocalDevices(\n    kind?: MediaDeviceKind,\n    requestPermissions: boolean = true,\n  ): Promise<MediaDeviceInfo[]> {\n    return DeviceManager.getInstance().getDevices(kind, requestPermissions);\n  }\n\n  static cleanupRegistry =\n    typeof FinalizationRegistry !== 'undefined' &&\n    new FinalizationRegistry((cleanup: () => void) => {\n      cleanup();\n    });\n\n  /**\n   * prepareConnection should be called as soon as the page is loaded, in order\n   * to speed up the connection attempt. This function will\n   * - perform DNS resolution and pre-warm the DNS cache\n   * - establish TLS connection and cache TLS keys\n   *\n   * With LiveKit Cloud, it will also determine the best edge data center for\n   * the current client to connect to if a token is provided.\n   */\n  async prepareConnection(url: string, token?: string) {\n    if (this.state !== ConnectionState.Disconnected) {\n      return;\n    }\n    this.log.debug(`prepareConnection to ${url}`, this.logContext);\n    try {\n      if (isCloud(new URL(url)) && token) {\n        this.regionUrlProvider = new RegionUrlProvider(url, token);\n        const regionUrl = await this.regionUrlProvider.getNextBestRegionUrl();\n        // we will not replace the regionUrl if an attempt had already started\n        // to avoid overriding regionUrl after a new connection attempt had started\n        if (regionUrl && this.state === ConnectionState.Disconnected) {\n          this.regionUrl = regionUrl;\n          await fetch(toHttpUrl(regionUrl), { method: 'HEAD' });\n          this.log.debug(`prepared connection to ${regionUrl}`, this.logContext);\n        }\n      } else {\n        await fetch(toHttpUrl(url), { method: 'HEAD' });\n      }\n    } catch (e) {\n      this.log.warn('could not prepare connection', { ...this.logContext, error: e });\n    }\n  }\n\n  connect = async (url: string, token: string, opts?: RoomConnectOptions): Promise<void> => {\n    if (!isBrowserSupported()) {\n      if (isReactNative()) {\n        throw Error(\"WebRTC isn't detected, have you called registerGlobals?\");\n      } else {\n        throw Error(\n          \"LiveKit doesn't seem to be supported on this browser. Try to update your browser and make sure no browser extensions are disabling webRTC.\",\n        );\n      }\n    }\n\n    // In case a disconnect called happened right before the connect call, make sure the disconnect is completed first by awaiting its lock\n    const unlockDisconnect = await this.disconnectLock.lock();\n\n    if (this.state === ConnectionState.Connected) {\n      // when the state is reconnecting or connected, this function returns immediately\n      this.log.info(`already connected to room ${this.name}`, this.logContext);\n      unlockDisconnect();\n      return Promise.resolve();\n    }\n\n    if (this.connectFuture) {\n      unlockDisconnect();\n      return this.connectFuture.promise;\n    }\n\n    this.setAndEmitConnectionState(ConnectionState.Connecting);\n    if (this.regionUrlProvider?.getServerUrl().toString() !== url) {\n      this.regionUrl = undefined;\n      this.regionUrlProvider = undefined;\n    }\n    if (isCloud(new URL(url))) {\n      if (this.regionUrlProvider === undefined) {\n        this.regionUrlProvider = new RegionUrlProvider(url, token);\n      } else {\n        this.regionUrlProvider.updateToken(token);\n      }\n      // trigger the first fetch without waiting for a response\n      // if initial connection fails, this will speed up picking regional url\n      // on subsequent runs\n      this.regionUrlProvider\n        .fetchRegionSettings()\n        .then((settings) => {\n          this.regionUrlProvider?.setServerReportedRegions(settings);\n        })\n        .catch((e) => {\n          this.log.warn('could not fetch region settings', { ...this.logContext, error: e });\n        });\n    }\n\n    const connectFn = async (\n      resolve: () => void,\n      reject: (reason: any) => void,\n      regionUrl?: string,\n    ) => {\n      if (this.abortController) {\n        this.abortController.abort();\n      }\n\n      // explicit creation as local var needed to satisfy TS compiler when passing it to `attemptConnection` further down\n      const abortController = new AbortController();\n      this.abortController = abortController;\n\n      // at this point the intention to connect has been signalled so we can allow cancelling of the connection via disconnect() again\n      unlockDisconnect?.();\n\n      try {\n        await this.attemptConnection(regionUrl ?? url, token, opts, abortController);\n        this.abortController = undefined;\n        resolve();\n      } catch (e) {\n        if (\n          this.regionUrlProvider &&\n          e instanceof ConnectionError &&\n          e.reason !== ConnectionErrorReason.Cancelled &&\n          e.reason !== ConnectionErrorReason.NotAllowed\n        ) {\n          let nextUrl: string | null = null;\n          try {\n            nextUrl = await this.regionUrlProvider.getNextBestRegionUrl(\n              this.abortController?.signal,\n            );\n          } catch (error) {\n            if (\n              error instanceof ConnectionError &&\n              (error.status === 401 || error.reason === ConnectionErrorReason.Cancelled)\n            ) {\n              this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n              reject(error);\n              return;\n            }\n          }\n          if (nextUrl && !this.abortController?.signal.aborted) {\n            this.log.info(\n              `Initial connection failed with ConnectionError: ${e.message}. Retrying with another region: ${nextUrl}`,\n              this.logContext,\n            );\n            this.recreateEngine();\n            await connectFn(resolve, reject, nextUrl);\n          } else {\n            this.handleDisconnect(\n              this.options.stopLocalTrackOnUnpublish,\n              getDisconnectReasonFromConnectionError(e),\n            );\n            reject(e);\n          }\n        } else {\n          let disconnectReason = DisconnectReason.UNKNOWN_REASON;\n          if (e instanceof ConnectionError) {\n            disconnectReason = getDisconnectReasonFromConnectionError(e);\n          }\n          this.handleDisconnect(this.options.stopLocalTrackOnUnpublish, disconnectReason);\n          reject(e);\n        }\n      }\n    };\n\n    const regionUrl = this.regionUrl;\n    this.regionUrl = undefined;\n    this.connectFuture = new Future(\n      (resolve, reject) => {\n        connectFn(resolve, reject, regionUrl);\n      },\n      () => {\n        this.clearConnectionFutures();\n      },\n    );\n\n    return this.connectFuture.promise;\n  };\n\n  private connectSignal = async (\n    url: string,\n    token: string,\n    engine: RTCEngine,\n    connectOptions: InternalRoomConnectOptions,\n    roomOptions: InternalRoomOptions,\n    abortController: AbortController,\n  ): Promise<JoinResponse> => {\n    const joinResponse = await engine.join(\n      url,\n      token,\n      {\n        autoSubscribe: connectOptions.autoSubscribe,\n        adaptiveStream:\n          typeof roomOptions.adaptiveStream === 'object' ? true : roomOptions.adaptiveStream,\n        maxRetries: connectOptions.maxRetries,\n        e2eeEnabled: !!this.e2eeManager,\n        websocketTimeout: connectOptions.websocketTimeout,\n      },\n      abortController.signal,\n    );\n\n    let serverInfo: Partial<ServerInfo> | undefined = joinResponse.serverInfo;\n    if (!serverInfo) {\n      serverInfo = { version: joinResponse.serverVersion, region: joinResponse.serverRegion };\n    }\n    this.serverInfo = serverInfo;\n\n    this.log.debug(\n      `connected to Livekit Server ${Object.entries(serverInfo)\n        .map(([key, value]) => `${key}: ${value}`)\n        .join(', ')}`,\n      {\n        room: joinResponse.room?.name,\n        roomSid: joinResponse.room?.sid,\n        identity: joinResponse.participant?.identity,\n      },\n    );\n\n    if (!serverInfo.version) {\n      throw new UnsupportedServer('unknown server version');\n    }\n\n    if (serverInfo.version === '0.15.1' && this.options.dynacast) {\n      this.log.debug('disabling dynacast due to server version', this.logContext);\n      // dynacast has a bug in 0.15.1, so we cannot use it then\n      roomOptions.dynacast = false;\n    }\n\n    return joinResponse;\n  };\n\n  private applyJoinResponse = (joinResponse: JoinResponse) => {\n    const pi = joinResponse.participant!;\n\n    this.localParticipant.sid = pi.sid;\n    this.localParticipant.identity = pi.identity;\n    this.localParticipant.setEnabledPublishCodecs(joinResponse.enabledPublishCodecs);\n\n    if (this.options.e2ee && this.e2eeManager) {\n      try {\n        this.e2eeManager.setSifTrailer(joinResponse.sifTrailer);\n      } catch (e: any) {\n        this.log.error(e instanceof Error ? e.message : 'Could not set SifTrailer', {\n          ...this.logContext,\n          error: e,\n        });\n      }\n    }\n\n    // populate remote participants, these should not trigger new events\n    this.handleParticipantUpdates([pi, ...joinResponse.otherParticipants]);\n\n    if (joinResponse.room) {\n      this.handleRoomUpdate(joinResponse.room);\n    }\n  };\n\n  private attemptConnection = async (\n    url: string,\n    token: string,\n    opts: RoomConnectOptions | undefined,\n    abortController: AbortController,\n  ) => {\n    if (\n      this.state === ConnectionState.Reconnecting ||\n      this.isResuming ||\n      this.engine?.pendingReconnect\n    ) {\n      this.log.info('Reconnection attempt replaced by new connection attempt', this.logContext);\n      // make sure we close and recreate the existing engine in order to get rid of any potentially ongoing reconnection attempts\n      this.recreateEngine();\n    } else {\n      // create engine if previously disconnected\n      this.maybeCreateEngine();\n    }\n    if (this.regionUrlProvider?.isCloud()) {\n      this.engine.setRegionUrlProvider(this.regionUrlProvider);\n    }\n\n    this.acquireAudioContext();\n\n    this.connOptions = { ...roomConnectOptionDefaults, ...opts } as InternalRoomConnectOptions;\n\n    if (this.connOptions.rtcConfig) {\n      this.engine.rtcConfig = this.connOptions.rtcConfig;\n    }\n    if (this.connOptions.peerConnectionTimeout) {\n      this.engine.peerConnectionTimeout = this.connOptions.peerConnectionTimeout;\n    }\n\n    try {\n      const joinResponse = await this.connectSignal(\n        url,\n        token,\n        this.engine,\n        this.connOptions,\n        this.options,\n        abortController,\n      );\n\n      this.applyJoinResponse(joinResponse);\n      // forward metadata changed for the local participant\n      this.setupLocalParticipantEvents();\n      this.emit(RoomEvent.SignalConnected);\n    } catch (err) {\n      await this.engine.close();\n      this.recreateEngine();\n      const resultingError = new ConnectionError(\n        `could not establish signal connection`,\n        ConnectionErrorReason.ServerUnreachable,\n      );\n      if (err instanceof Error) {\n        resultingError.message = `${resultingError.message}: ${err.message}`;\n      }\n      if (err instanceof ConnectionError) {\n        resultingError.reason = err.reason;\n        resultingError.status = err.status;\n      }\n      this.log.debug(`error trying to establish signal connection`, {\n        ...this.logContext,\n        error: err,\n      });\n      throw resultingError;\n    }\n\n    if (abortController.signal.aborted) {\n      await this.engine.close();\n      this.recreateEngine();\n      throw new ConnectionError(`Connection attempt aborted`, ConnectionErrorReason.Cancelled);\n    }\n\n    try {\n      await this.engine.waitForPCInitialConnection(\n        this.connOptions.peerConnectionTimeout,\n        abortController,\n      );\n    } catch (e) {\n      await this.engine.close();\n      this.recreateEngine();\n      throw e;\n    }\n\n    // also hook unload event\n    if (isWeb() && this.options.disconnectOnPageLeave) {\n      // capturing both 'pagehide' and 'beforeunload' to capture broadest set of browser behaviors\n      window.addEventListener('pagehide', this.onPageLeave);\n      window.addEventListener('beforeunload', this.onPageLeave);\n    }\n    if (isWeb()) {\n      document.addEventListener('freeze', this.onPageLeave);\n    }\n    this.setAndEmitConnectionState(ConnectionState.Connected);\n    this.emit(RoomEvent.Connected);\n    this.registerConnectionReconcile();\n  };\n\n  /**\n   * disconnects the room, emits [[RoomEvent.Disconnected]]\n   */\n  disconnect = async (stopTracks = true) => {\n    const unlock = await this.disconnectLock.lock();\n    try {\n      if (this.state === ConnectionState.Disconnected) {\n        this.log.debug('already disconnected', this.logContext);\n        return;\n      }\n      this.log.info('disconnect from room', {\n        ...this.logContext,\n      });\n      if (\n        this.state === ConnectionState.Connecting ||\n        this.state === ConnectionState.Reconnecting ||\n        this.isResuming\n      ) {\n        // try aborting pending connection attempt\n        this.log.warn('abort connection attempt', this.logContext);\n        this.abortController?.abort();\n        // in case the abort controller didn't manage to cancel the connection attempt, reject the connect promise explicitly\n        this.connectFuture?.reject?.(\n          new ConnectionError('Client initiated disconnect', ConnectionErrorReason.Cancelled),\n        );\n        this.connectFuture = undefined;\n      }\n      // send leave\n      if (!this.engine?.client.isDisconnected) {\n        await this.engine.client.sendLeave();\n      }\n      // close engine (also closes client)\n      if (this.engine) {\n        await this.engine.close();\n      }\n      this.handleDisconnect(stopTracks, DisconnectReason.CLIENT_INITIATED);\n      /* @ts-ignore */\n      this.engine = undefined;\n    } finally {\n      unlock();\n    }\n  };\n\n  /**\n   * retrieves a participant by identity\n   * @param identity\n   * @returns\n   */\n  getParticipantByIdentity(identity: string): Participant | undefined {\n    if (this.localParticipant.identity === identity) {\n      return this.localParticipant;\n    }\n    return this.remoteParticipants.get(identity);\n  }\n\n  private clearConnectionFutures() {\n    this.connectFuture = undefined;\n  }\n\n  /**\n   * @internal for testing\n   */\n  async simulateScenario(scenario: SimulationScenario, arg?: any) {\n    let postAction = () => {};\n    let req: SimulateScenario | undefined;\n    switch (scenario) {\n      case 'signal-reconnect':\n        // @ts-expect-error function is private\n        await this.engine.client.handleOnClose('simulate disconnect');\n        break;\n      case 'speaker':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'speakerUpdate',\n            value: 3,\n          },\n        });\n        break;\n      case 'node-failure':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'nodeFailure',\n            value: true,\n          },\n        });\n        break;\n      case 'server-leave':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'serverLeave',\n            value: true,\n          },\n        });\n        break;\n      case 'migration':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'migration',\n            value: true,\n          },\n        });\n        break;\n      case 'resume-reconnect':\n        this.engine.failNext();\n        // @ts-expect-error function is private\n        await this.engine.client.handleOnClose('simulate resume-disconnect');\n        break;\n      case 'disconnect-signal-on-resume':\n        postAction = async () => {\n          // @ts-expect-error function is private\n          await this.engine.client.handleOnClose('simulate resume-disconnect');\n        };\n        req = new SimulateScenario({\n          scenario: {\n            case: 'disconnectSignalOnResume',\n            value: true,\n          },\n        });\n        break;\n      case 'disconnect-signal-on-resume-no-messages':\n        postAction = async () => {\n          // @ts-expect-error function is private\n          await this.engine.client.handleOnClose('simulate resume-disconnect');\n        };\n        req = new SimulateScenario({\n          scenario: {\n            case: 'disconnectSignalOnResumeNoMessages',\n            value: true,\n          },\n        });\n        break;\n      case 'full-reconnect':\n        this.engine.fullReconnectOnNext = true;\n        // @ts-expect-error function is private\n        await this.engine.client.handleOnClose('simulate full-reconnect');\n        break;\n      case 'force-tcp':\n      case 'force-tls':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'switchCandidateProtocol',\n            value: scenario === 'force-tls' ? 2 : 1,\n          },\n        });\n        postAction = async () => {\n          const onLeave = this.engine.client.onLeave;\n          if (onLeave) {\n            onLeave(\n              new LeaveRequest({\n                reason: DisconnectReason.CLIENT_INITIATED,\n                action: LeaveRequest_Action.RECONNECT,\n              }),\n            );\n          }\n        };\n        break;\n      case 'subscriber-bandwidth':\n        if (arg === undefined || typeof arg !== 'number') {\n          throw new Error('subscriber-bandwidth requires a number as argument');\n        }\n        req = new SimulateScenario({\n          scenario: {\n            case: 'subscriberBandwidth',\n            value: BigInt(arg),\n          },\n        });\n        break;\n      case 'leave-full-reconnect':\n        req = new SimulateScenario({\n          scenario: {\n            case: 'leaveRequestFullReconnect',\n            value: true,\n          },\n        });\n      default:\n    }\n    if (req) {\n      await this.engine.client.sendSimulateScenario(req);\n      await postAction();\n    }\n  }\n\n  private onPageLeave = async () => {\n    this.log.info('Page leave detected, disconnecting', this.logContext);\n    await this.disconnect();\n  };\n\n  /**\n   * Browsers have different policies regarding audio playback. Most requiring\n   * some form of user interaction (click/tap/etc).\n   * In those cases, audio will be silent until a click/tap triggering one of the following\n   * - `startAudio`\n   * - `getUserMedia`\n   */\n  startAudio = async () => {\n    const elements: Array<HTMLMediaElement> = [];\n    const browser = getBrowser();\n    if (browser && browser.os === 'iOS') {\n      /**\n       * iOS blocks audio element playback if\n       * - user is not publishing audio themselves and\n       * - no other audio source is playing\n       *\n       * as a workaround, we create an audio element with an empty track, so that\n       * silent audio is always playing\n       */\n      const audioId = 'livekit-dummy-audio-el';\n      let dummyAudioEl = document.getElementById(audioId) as HTMLAudioElement | null;\n      if (!dummyAudioEl) {\n        dummyAudioEl = document.createElement('audio');\n        dummyAudioEl.id = audioId;\n        dummyAudioEl.autoplay = true;\n        dummyAudioEl.hidden = true;\n        const track = getEmptyAudioStreamTrack();\n        track.enabled = true;\n        const stream = new MediaStream([track]);\n        dummyAudioEl.srcObject = stream;\n        document.addEventListener('visibilitychange', () => {\n          if (!dummyAudioEl) {\n            return;\n          }\n          // set the srcObject to null on page hide in order to prevent lock screen controls to show up for it\n          dummyAudioEl.srcObject = document.hidden ? null : stream;\n          if (!document.hidden) {\n            this.log.debug(\n              'page visible again, triggering startAudio to resume playback and update playback status',\n              this.logContext,\n            );\n            this.startAudio();\n          }\n        });\n        document.body.append(dummyAudioEl);\n        this.once(RoomEvent.Disconnected, () => {\n          dummyAudioEl?.remove();\n          dummyAudioEl = null;\n        });\n      }\n      elements.push(dummyAudioEl);\n    }\n\n    this.remoteParticipants.forEach((p) => {\n      p.audioTrackPublications.forEach((t) => {\n        if (t.track) {\n          t.track.attachedElements.forEach((e) => {\n            elements.push(e);\n          });\n        }\n      });\n    });\n\n    try {\n      await Promise.all([\n        this.acquireAudioContext(),\n        ...elements.map((e) => {\n          e.muted = false;\n          return e.play();\n        }),\n      ]);\n      this.handleAudioPlaybackStarted();\n    } catch (err) {\n      this.handleAudioPlaybackFailed(err);\n      throw err;\n    }\n  };\n\n  startVideo = async () => {\n    const elements: HTMLMediaElement[] = [];\n    for (const p of this.remoteParticipants.values()) {\n      p.videoTrackPublications.forEach((tr) => {\n        tr.track?.attachedElements.forEach((el) => {\n          if (!elements.includes(el)) {\n            elements.push(el);\n          }\n        });\n      });\n    }\n    await Promise.all(elements.map((el) => el.play()))\n      .then(() => {\n        this.handleVideoPlaybackStarted();\n      })\n      .catch((e) => {\n        if (e.name === 'NotAllowedError') {\n          this.handleVideoPlaybackFailed();\n        } else {\n          this.log.warn(\n            'Resuming video playback failed, make sure you call `startVideo` directly in a user gesture handler',\n            this.logContext,\n          );\n        }\n      });\n  };\n\n  /**\n   * Returns true if audio playback is enabled\n   */\n  get canPlaybackAudio(): boolean {\n    return this.audioEnabled;\n  }\n\n  /**\n   * Returns true if video playback is enabled\n   */\n  get canPlaybackVideo(): boolean {\n    return !this.isVideoPlaybackBlocked;\n  }\n\n  getActiveDevice(kind: MediaDeviceKind): string | undefined {\n    return this.localParticipant.activeDeviceMap.get(kind);\n  }\n\n  /**\n   * Switches all active devices used in this room to the given device.\n   *\n   * Note: setting AudioOutput is not supported on some browsers. See [setSinkId](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId#browser_compatibility)\n   *\n   * @param kind use `videoinput` for camera track,\n   *  `audioinput` for microphone track,\n   *  `audiooutput` to set speaker for all incoming audio tracks\n   * @param deviceId\n   */\n  async switchActiveDevice(kind: MediaDeviceKind, deviceId: string, exact: boolean = false) {\n    let success = true;\n    let needsUpdateWithoutTracks = false;\n    const deviceConstraint = exact ? { exact: deviceId } : deviceId;\n    if (kind === 'audioinput') {\n      needsUpdateWithoutTracks = this.localParticipant.audioTrackPublications.size === 0;\n      const prevDeviceId =\n        this.getActiveDevice(kind) ?? this.options.audioCaptureDefaults!.deviceId;\n      this.options.audioCaptureDefaults!.deviceId = deviceConstraint;\n      const tracks = Array.from(this.localParticipant.audioTrackPublications.values()).filter(\n        (track) => track.source === Track.Source.Microphone,\n      );\n      try {\n        success = (\n          await Promise.all(tracks.map((t) => t.audioTrack?.setDeviceId(deviceConstraint)))\n        ).every((val) => val === true);\n      } catch (e) {\n        this.options.audioCaptureDefaults!.deviceId = prevDeviceId;\n        throw e;\n      }\n    } else if (kind === 'videoinput') {\n      needsUpdateWithoutTracks = this.localParticipant.videoTrackPublications.size === 0;\n      const prevDeviceId =\n        this.getActiveDevice(kind) ?? this.options.videoCaptureDefaults!.deviceId;\n      this.options.videoCaptureDefaults!.deviceId = deviceConstraint;\n      const tracks = Array.from(this.localParticipant.videoTrackPublications.values()).filter(\n        (track) => track.source === Track.Source.Camera,\n      );\n      try {\n        success = (\n          await Promise.all(tracks.map((t) => t.videoTrack?.setDeviceId(deviceConstraint)))\n        ).every((val) => val === true);\n      } catch (e) {\n        this.options.videoCaptureDefaults!.deviceId = prevDeviceId;\n        throw e;\n      }\n    } else if (kind === 'audiooutput') {\n      if (\n        (!supportsSetSinkId() && !this.options.webAudioMix) ||\n        (this.options.webAudioMix && this.audioContext && !('setSinkId' in this.audioContext))\n      ) {\n        throw new Error('cannot switch audio output, setSinkId not supported');\n      }\n      if (this.options.webAudioMix) {\n        // setting `default` for web audio output doesn't work, so we need to normalize the id before\n        deviceId =\n          (await DeviceManager.getInstance().normalizeDeviceId('audiooutput', deviceId)) ?? '';\n      }\n      this.options.audioOutput ??= {};\n      const prevDeviceId = this.getActiveDevice(kind) ?? this.options.audioOutput.deviceId;\n      this.options.audioOutput.deviceId = deviceId;\n\n      try {\n        if (this.options.webAudioMix) {\n          // @ts-expect-error setSinkId is not yet in the typescript type of AudioContext\n          this.audioContext?.setSinkId(deviceId);\n        }\n        // also set audio output on all audio elements, even if webAudioMix is enabled in order to workaround echo cancellation not working on chrome with non-default output devices\n        // see https://issues.chromium.org/issues/40252911#comment7\n        await Promise.all(\n          Array.from(this.remoteParticipants.values()).map((p) => p.setAudioOutput({ deviceId })),\n        );\n      } catch (e) {\n        this.options.audioOutput.deviceId = prevDeviceId;\n        throw e;\n      }\n    }\n    if (needsUpdateWithoutTracks) {\n      this.localParticipant.activeDeviceMap.set(kind, deviceId);\n      this.emit(RoomEvent.ActiveDeviceChanged, kind, deviceId);\n    }\n\n    return success;\n  }\n\n  private setupLocalParticipantEvents() {\n    this.localParticipant\n      .on(ParticipantEvent.ParticipantMetadataChanged, this.onLocalParticipantMetadataChanged)\n      .on(ParticipantEvent.ParticipantNameChanged, this.onLocalParticipantNameChanged)\n      .on(ParticipantEvent.AttributesChanged, this.onLocalAttributesChanged)\n      .on(ParticipantEvent.TrackMuted, this.onLocalTrackMuted)\n      .on(ParticipantEvent.TrackUnmuted, this.onLocalTrackUnmuted)\n      .on(ParticipantEvent.LocalTrackPublished, this.onLocalTrackPublished)\n      .on(ParticipantEvent.LocalTrackUnpublished, this.onLocalTrackUnpublished)\n      .on(ParticipantEvent.ConnectionQualityChanged, this.onLocalConnectionQualityChanged)\n      .on(ParticipantEvent.MediaDevicesError, this.onMediaDevicesError)\n      .on(ParticipantEvent.AudioStreamAcquired, this.startAudio)\n      .on(ParticipantEvent.ChatMessage, this.onLocalChatMessageSent)\n      .on(\n        ParticipantEvent.ParticipantPermissionsChanged,\n        this.onLocalParticipantPermissionsChanged,\n      );\n  }\n\n  private recreateEngine() {\n    this.engine?.close();\n    /* @ts-ignore */\n    this.engine = undefined;\n    this.isResuming = false;\n\n    // clear out existing remote participants, since they may have attached\n    // the old engine\n    this.remoteParticipants.clear();\n    this.sidToIdentity.clear();\n    this.bufferedEvents = [];\n    this.maybeCreateEngine();\n  }\n\n  private onTrackAdded(\n    mediaTrack: MediaStreamTrack,\n    stream: MediaStream,\n    receiver: RTCRtpReceiver,\n  ) {\n    // don't fire onSubscribed when connecting\n    // WebRTC fires onTrack as soon as setRemoteDescription is called on the offer\n    // at that time, ICE connectivity has not been established so the track is not\n    // technically subscribed.\n    // We'll defer these events until when the room is connected or eventually disconnected.\n    if (this.state === ConnectionState.Connecting || this.state === ConnectionState.Reconnecting) {\n      const reconnectedHandler = () => {\n        this.onTrackAdded(mediaTrack, stream, receiver);\n        cleanup();\n      };\n      const cleanup = () => {\n        this.off(RoomEvent.Reconnected, reconnectedHandler);\n        this.off(RoomEvent.Connected, reconnectedHandler);\n        this.off(RoomEvent.Disconnected, cleanup);\n      };\n      this.once(RoomEvent.Reconnected, reconnectedHandler);\n      this.once(RoomEvent.Connected, reconnectedHandler);\n      this.once(RoomEvent.Disconnected, cleanup);\n      return;\n    }\n    if (this.state === ConnectionState.Disconnected) {\n      this.log.warn('skipping incoming track after Room disconnected', this.logContext);\n      return;\n    }\n    const parts = unpackStreamId(stream.id);\n    const participantSid = parts[0];\n    let streamId = parts[1];\n    let trackId = mediaTrack.id;\n    // firefox will get streamId (pID|trackId) instead of (pID|streamId) as it doesn't support sync tracks by stream\n    // and generates its own track id instead of infer from sdp track id.\n    if (streamId && streamId.startsWith('TR')) trackId = streamId;\n\n    if (participantSid === this.localParticipant.sid) {\n      this.log.warn('tried to create RemoteParticipant for local participant', this.logContext);\n      return;\n    }\n\n    const participant = Array.from(this.remoteParticipants.values()).find(\n      (p) => p.sid === participantSid,\n    ) as RemoteParticipant | undefined;\n\n    if (!participant) {\n      this.log.error(\n        `Tried to add a track for a participant, that's not present. Sid: ${participantSid}`,\n        this.logContext,\n      );\n      return;\n    }\n\n    let adaptiveStreamSettings: AdaptiveStreamSettings | undefined;\n    if (this.options.adaptiveStream) {\n      if (typeof this.options.adaptiveStream === 'object') {\n        adaptiveStreamSettings = this.options.adaptiveStream;\n      } else {\n        adaptiveStreamSettings = {};\n      }\n    }\n    participant.addSubscribedMediaTrack(\n      mediaTrack,\n      trackId,\n      stream,\n      receiver,\n      adaptiveStreamSettings,\n    );\n  }\n\n  private handleRestarting = () => {\n    this.clearConnectionReconcile();\n    // in case we went from resuming to full-reconnect, make sure to reflect it on the isResuming flag\n    this.isResuming = false;\n\n    // also unwind existing participants & existing subscriptions\n    for (const p of this.remoteParticipants.values()) {\n      this.handleParticipantDisconnected(p.identity, p);\n    }\n\n    if (this.setAndEmitConnectionState(ConnectionState.Reconnecting)) {\n      this.emit(RoomEvent.Reconnecting);\n    }\n  };\n\n  private handleSignalRestarted = async (joinResponse: JoinResponse) => {\n    this.log.debug(`signal reconnected to server, region ${joinResponse.serverRegion}`, {\n      ...this.logContext,\n      region: joinResponse.serverRegion,\n    });\n    this.bufferedEvents = [];\n\n    this.applyJoinResponse(joinResponse);\n\n    try {\n      // unpublish & republish tracks\n      await this.localParticipant.republishAllTracks(undefined, true);\n    } catch (error) {\n      this.log.error('error trying to re-publish tracks after reconnection', {\n        ...this.logContext,\n        error,\n      });\n    }\n\n    try {\n      await this.engine.waitForRestarted();\n      this.log.debug(`fully reconnected to server`, {\n        ...this.logContext,\n        region: joinResponse.serverRegion,\n      });\n    } catch {\n      // reconnection failed, handleDisconnect is being invoked already, just return here\n      return;\n    }\n    this.setAndEmitConnectionState(ConnectionState.Connected);\n    this.emit(RoomEvent.Reconnected);\n    this.registerConnectionReconcile();\n    this.emitBufferedEvents();\n  };\n\n  private handleDisconnect(shouldStopTracks = true, reason?: DisconnectReason) {\n    this.clearConnectionReconcile();\n    this.isResuming = false;\n    this.bufferedEvents = [];\n    this.transcriptionReceivedTimes.clear();\n    if (this.state === ConnectionState.Disconnected) {\n      return;\n    }\n\n    this.regionUrl = undefined;\n\n    try {\n      this.remoteParticipants.forEach((p) => {\n        p.trackPublications.forEach((pub) => {\n          p.unpublishTrack(pub.trackSid);\n        });\n      });\n\n      this.localParticipant.trackPublications.forEach((pub) => {\n        if (pub.track) {\n          this.localParticipant.unpublishTrack(pub.track, shouldStopTracks);\n        }\n        if (shouldStopTracks) {\n          pub.track?.detach();\n          pub.track?.stop();\n        } else {\n          pub.track?.stopMonitor();\n        }\n      });\n\n      this.localParticipant\n        .off(ParticipantEvent.ParticipantMetadataChanged, this.onLocalParticipantMetadataChanged)\n        .off(ParticipantEvent.ParticipantNameChanged, this.onLocalParticipantNameChanged)\n        .off(ParticipantEvent.AttributesChanged, this.onLocalAttributesChanged)\n        .off(ParticipantEvent.TrackMuted, this.onLocalTrackMuted)\n        .off(ParticipantEvent.TrackUnmuted, this.onLocalTrackUnmuted)\n        .off(ParticipantEvent.LocalTrackPublished, this.onLocalTrackPublished)\n        .off(ParticipantEvent.LocalTrackUnpublished, this.onLocalTrackUnpublished)\n        .off(ParticipantEvent.ConnectionQualityChanged, this.onLocalConnectionQualityChanged)\n        .off(ParticipantEvent.MediaDevicesError, this.onMediaDevicesError)\n        .off(ParticipantEvent.AudioStreamAcquired, this.startAudio)\n        .off(ParticipantEvent.ChatMessage, this.onLocalChatMessageSent)\n        .off(\n          ParticipantEvent.ParticipantPermissionsChanged,\n          this.onLocalParticipantPermissionsChanged,\n        );\n\n      this.localParticipant.trackPublications.clear();\n      this.localParticipant.videoTrackPublications.clear();\n      this.localParticipant.audioTrackPublications.clear();\n\n      this.remoteParticipants.clear();\n      this.sidToIdentity.clear();\n      this.activeSpeakers = [];\n      if (this.audioContext && typeof this.options.webAudioMix === 'boolean') {\n        this.audioContext.close();\n        this.audioContext = undefined;\n      }\n      if (isWeb()) {\n        window.removeEventListener('beforeunload', this.onPageLeave);\n        window.removeEventListener('pagehide', this.onPageLeave);\n        window.removeEventListener('freeze', this.onPageLeave);\n        navigator.mediaDevices?.removeEventListener('devicechange', this.handleDeviceChange);\n      }\n    } finally {\n      this.setAndEmitConnectionState(ConnectionState.Disconnected);\n      this.emit(RoomEvent.Disconnected, reason);\n    }\n  }\n\n  private handleParticipantUpdates = (participantInfos: ParticipantInfo[]) => {\n    // handle changes to participant state, and send events\n    participantInfos.forEach((info) => {\n      if (info.identity === this.localParticipant.identity) {\n        this.localParticipant.updateInfo(info);\n        return;\n      }\n\n      // LiveKit server doesn't send identity info prior to version 1.5.2 in disconnect updates\n      // so we try to map an empty identity to an already known sID manually\n      if (info.identity === '') {\n        info.identity = this.sidToIdentity.get(info.sid) ?? '';\n      }\n\n      let remoteParticipant = this.remoteParticipants.get(info.identity);\n\n      // when it's disconnected, send updates\n      if (info.state === ParticipantInfo_State.DISCONNECTED) {\n        this.handleParticipantDisconnected(info.identity, remoteParticipant);\n      } else {\n        // create participant if doesn't exist\n        remoteParticipant = this.getOrCreateParticipant(info.identity, info);\n      }\n    });\n  };\n\n  private handleParticipantDisconnected(identity: string, participant?: RemoteParticipant) {\n    // remove and send event\n    this.remoteParticipants.delete(identity);\n    if (!participant) {\n      return;\n    }\n\n    participant.trackPublications.forEach((publication) => {\n      participant.unpublishTrack(publication.trackSid, true);\n    });\n    this.emit(RoomEvent.ParticipantDisconnected, participant);\n    this.localParticipant?.handleParticipantDisconnected(participant.identity);\n  }\n\n  // updates are sent only when there's a change to speaker ordering\n  private handleActiveSpeakersUpdate = (speakers: SpeakerInfo[]) => {\n    const activeSpeakers: Participant[] = [];\n    const seenSids: any = {};\n    speakers.forEach((speaker) => {\n      seenSids[speaker.sid] = true;\n      if (speaker.sid === this.localParticipant.sid) {\n        this.localParticipant.audioLevel = speaker.level;\n        this.localParticipant.setIsSpeaking(true);\n        activeSpeakers.push(this.localParticipant);\n      } else {\n        const p = this.getRemoteParticipantBySid(speaker.sid);\n        if (p) {\n          p.audioLevel = speaker.level;\n          p.setIsSpeaking(true);\n          activeSpeakers.push(p);\n        }\n      }\n    });\n\n    if (!seenSids[this.localParticipant.sid]) {\n      this.localParticipant.audioLevel = 0;\n      this.localParticipant.setIsSpeaking(false);\n    }\n    this.remoteParticipants.forEach((p) => {\n      if (!seenSids[p.sid]) {\n        p.audioLevel = 0;\n        p.setIsSpeaking(false);\n      }\n    });\n\n    this.activeSpeakers = activeSpeakers;\n    this.emitWhenConnected(RoomEvent.ActiveSpeakersChanged, activeSpeakers);\n  };\n\n  // process list of changed speakers\n  private handleSpeakersChanged = (speakerUpdates: SpeakerInfo[]) => {\n    const lastSpeakers = new Map<string, Participant>();\n    this.activeSpeakers.forEach((p) => {\n      const remoteParticipant = this.remoteParticipants.get(p.identity);\n      if (remoteParticipant && remoteParticipant.sid !== p.sid) {\n        return;\n      }\n      lastSpeakers.set(p.sid, p);\n    });\n    speakerUpdates.forEach((speaker) => {\n      let p: Participant | undefined = this.getRemoteParticipantBySid(speaker.sid);\n      if (speaker.sid === this.localParticipant.sid) {\n        p = this.localParticipant;\n      }\n      if (!p) {\n        return;\n      }\n      p.audioLevel = speaker.level;\n      p.setIsSpeaking(speaker.active);\n\n      if (speaker.active) {\n        lastSpeakers.set(speaker.sid, p);\n      } else {\n        lastSpeakers.delete(speaker.sid);\n      }\n    });\n    const activeSpeakers = Array.from(lastSpeakers.values());\n    activeSpeakers.sort((a, b) => b.audioLevel - a.audioLevel);\n    this.activeSpeakers = activeSpeakers;\n    this.emitWhenConnected(RoomEvent.ActiveSpeakersChanged, activeSpeakers);\n  };\n\n  private handleStreamStateUpdate = (streamStateUpdate: StreamStateUpdate) => {\n    streamStateUpdate.streamStates.forEach((streamState) => {\n      const participant = this.getRemoteParticipantBySid(streamState.participantSid);\n      if (!participant) {\n        return;\n      }\n      const pub = participant.getTrackPublicationBySid(streamState.trackSid);\n      if (!pub || !pub.track) {\n        return;\n      }\n      const newStreamState = Track.streamStateFromProto(streamState.state);\n      if (newStreamState !== pub.track.streamState) {\n        pub.track.streamState = newStreamState;\n        participant.emit(ParticipantEvent.TrackStreamStateChanged, pub, pub.track.streamState);\n        this.emitWhenConnected(\n          RoomEvent.TrackStreamStateChanged,\n          pub,\n          pub.track.streamState,\n          participant,\n        );\n      }\n    });\n  };\n\n  private handleSubscriptionPermissionUpdate = (update: SubscriptionPermissionUpdate) => {\n    const participant = this.getRemoteParticipantBySid(update.participantSid);\n    if (!participant) {\n      return;\n    }\n    const pub = participant.getTrackPublicationBySid(update.trackSid);\n    if (!pub) {\n      return;\n    }\n\n    pub.setAllowed(update.allowed);\n  };\n\n  private handleSubscriptionError = (update: SubscriptionResponse) => {\n    const participant = Array.from(this.remoteParticipants.values()).find((p) =>\n      p.trackPublications.has(update.trackSid),\n    );\n    if (!participant) {\n      return;\n    }\n    const pub = participant.getTrackPublicationBySid(update.trackSid);\n    if (!pub) {\n      return;\n    }\n\n    pub.setSubscriptionError(update.err);\n  };\n\n  private handleDataPacket = (packet: DataPacket) => {\n    // find the participant\n    const participant = this.remoteParticipants.get(packet.participantIdentity);\n    if (packet.value.case === 'user') {\n      this.handleUserPacket(participant, packet.value.value, packet.kind);\n    } else if (packet.value.case === 'transcription') {\n      this.handleTranscription(participant, packet.value.value);\n    } else if (packet.value.case === 'sipDtmf') {\n      this.handleSipDtmf(participant, packet.value.value);\n    } else if (packet.value.case === 'chatMessage') {\n      this.handleChatMessage(participant, packet.value.value);\n    } else if (packet.value.case === 'metrics') {\n      this.handleMetrics(packet.value.value, participant);\n    }\n  };\n\n  private handleUserPacket = (\n    participant: RemoteParticipant | undefined,\n    userPacket: UserPacket,\n    kind: DataPacket_Kind,\n  ) => {\n    this.emit(RoomEvent.DataReceived, userPacket.payload, participant, kind, userPacket.topic);\n\n    // also emit on the participant\n    participant?.emit(ParticipantEvent.DataReceived, userPacket.payload, kind);\n  };\n\n  private handleSipDtmf = (participant: RemoteParticipant | undefined, dtmf: SipDTMF) => {\n    this.emit(RoomEvent.SipDTMFReceived, dtmf, participant);\n\n    // also emit on the participant\n    participant?.emit(ParticipantEvent.SipDTMFReceived, dtmf);\n  };\n\n  bufferedSegments: Map<string, TranscriptionSegmentModel> = new Map();\n\n  private handleTranscription = (\n    _remoteParticipant: RemoteParticipant | undefined,\n    transcription: TranscriptionModel,\n  ) => {\n    // find the participant\n    const participant =\n      transcription.transcribedParticipantIdentity === this.localParticipant.identity\n        ? this.localParticipant\n        : this.getParticipantByIdentity(transcription.transcribedParticipantIdentity);\n    const publication = participant?.trackPublications.get(transcription.trackId);\n\n    const segments = extractTranscriptionSegments(transcription, this.transcriptionReceivedTimes);\n\n    publication?.emit(TrackEvent.TranscriptionReceived, segments);\n    participant?.emit(ParticipantEvent.TranscriptionReceived, segments, publication);\n    this.emit(RoomEvent.TranscriptionReceived, segments, participant, publication);\n  };\n\n  private handleChatMessage = (\n    participant: RemoteParticipant | undefined,\n    chatMessage: ChatMessageModel,\n  ) => {\n    const msg = extractChatMessage(chatMessage);\n    this.emit(RoomEvent.ChatMessage, msg, participant);\n  };\n\n  private handleMetrics = (metrics: MetricsBatch, participant?: Participant) => {\n    this.emit(RoomEvent.MetricsReceived, metrics, participant);\n  };\n\n  private handleAudioPlaybackStarted = () => {\n    if (this.canPlaybackAudio) {\n      return;\n    }\n    this.audioEnabled = true;\n    this.emit(RoomEvent.AudioPlaybackStatusChanged, true);\n  };\n\n  private handleAudioPlaybackFailed = (e: any) => {\n    this.log.warn('could not playback audio', { ...this.logContext, error: e });\n    if (!this.canPlaybackAudio) {\n      return;\n    }\n    this.audioEnabled = false;\n    this.emit(RoomEvent.AudioPlaybackStatusChanged, false);\n  };\n\n  private handleVideoPlaybackStarted = () => {\n    if (this.isVideoPlaybackBlocked) {\n      this.isVideoPlaybackBlocked = false;\n      this.emit(RoomEvent.VideoPlaybackStatusChanged, true);\n    }\n  };\n\n  private handleVideoPlaybackFailed = () => {\n    if (!this.isVideoPlaybackBlocked) {\n      this.isVideoPlaybackBlocked = true;\n      this.emit(RoomEvent.VideoPlaybackStatusChanged, false);\n    }\n  };\n\n  private handleDeviceChange = async () => {\n    const previousDevices = DeviceManager.getInstance().previousDevices;\n    // check for available devices, but don't request permissions in order to avoid prompts for kinds that haven't been used before\n    const availableDevices = await DeviceManager.getInstance().getDevices(undefined, false);\n    const browser = getBrowser();\n    if (browser?.name === 'Chrome' && browser.os !== 'iOS') {\n      for (let availableDevice of availableDevices) {\n        const previousDevice = previousDevices.find(\n          (info) => info.deviceId === availableDevice.deviceId,\n        );\n        if (\n          previousDevice &&\n          previousDevice.label !== '' &&\n          previousDevice.kind === availableDevice.kind &&\n          previousDevice.label !== availableDevice.label\n        ) {\n          // label has changed on device the same deviceId, indicating that the default device has changed on the OS level\n          if (this.getActiveDevice(availableDevice.kind) === 'default') {\n            // emit an active device change event only if the selected output device is actually on `default`\n            this.emit(\n              RoomEvent.ActiveDeviceChanged,\n              availableDevice.kind,\n              availableDevice.deviceId,\n            );\n          }\n        }\n      }\n    }\n\n    // inputs are automatically handled via TrackEvent.Ended causing a TrackEvent.Restarted. Here we only need to worry about audiooutputs changing\n    const kinds: MediaDeviceKind[] = ['audiooutput', 'audioinput', 'videoinput'];\n    for (let kind of kinds) {\n      const devicesOfKind = availableDevices.filter((d) => d.kind === kind);\n      const activeDevice = this.getActiveDevice(kind);\n\n      if (activeDevice === previousDevices.filter((info) => info.kind === kind)[0]?.deviceId) {\n        // in  Safari the first device is always the default, so we assume a user on the default device would like to switch to the default once it changes\n        // FF doesn't emit an event when the default device changes, so we perform the same best effort and switch to the new device once connected and if it's the first in the array\n        if (devicesOfKind.length > 0 && devicesOfKind[0]?.deviceId !== activeDevice) {\n          await this.switchActiveDevice(kind, devicesOfKind[0].deviceId);\n          continue;\n        }\n      }\n\n      if ((kind === 'audioinput' && !isSafari()) || kind === 'videoinput') {\n        // airpods on Safari need special handling for audioinput as the track doesn't end as soon as you take them out\n        continue;\n      }\n      // switch to first available device if previously active device is not available any more\n      if (\n        devicesOfKind.length > 0 &&\n        !devicesOfKind.find((deviceInfo) => deviceInfo.deviceId === this.getActiveDevice(kind))\n      ) {\n        await this.switchActiveDevice(kind, devicesOfKind[0].deviceId);\n      }\n    }\n\n    this.emit(RoomEvent.MediaDevicesChanged);\n  };\n\n  private handleRoomUpdate = (room: RoomModel) => {\n    const oldRoom = this.roomInfo;\n    this.roomInfo = room;\n    if (oldRoom && oldRoom.metadata !== room.metadata) {\n      this.emitWhenConnected(RoomEvent.RoomMetadataChanged, room.metadata);\n    }\n    if (oldRoom?.activeRecording !== room.activeRecording) {\n      this.emitWhenConnected(RoomEvent.RecordingStatusChanged, room.activeRecording);\n    }\n  };\n\n  private handleConnectionQualityUpdate = (update: ConnectionQualityUpdate) => {\n    update.updates.forEach((info) => {\n      if (info.participantSid === this.localParticipant.sid) {\n        this.localParticipant.setConnectionQuality(info.quality);\n        return;\n      }\n      const participant = this.getRemoteParticipantBySid(info.participantSid);\n      if (participant) {\n        participant.setConnectionQuality(info.quality);\n      }\n    });\n  };\n\n  private async acquireAudioContext() {\n    if (typeof this.options.webAudioMix !== 'boolean' && this.options.webAudioMix.audioContext) {\n      // override audio context with custom audio context if supplied by user\n      this.audioContext = this.options.webAudioMix.audioContext;\n    } else if (!this.audioContext || this.audioContext.state === 'closed') {\n      // by using an AudioContext, it reduces lag on audio elements\n      // https://stackoverflow.com/questions/9811429/html5-audio-tag-on-safari-has-a-delay/54119854#54119854\n      this.audioContext = getNewAudioContext() ?? undefined;\n    }\n\n    if (this.audioContext && this.audioContext.state === 'suspended') {\n      // for iOS a newly created AudioContext is always in `suspended` state.\n      // we try our best to resume the context here, if that doesn't work, we just continue with regular processing\n      try {\n        await this.audioContext.resume();\n      } catch (e: any) {\n        this.log.warn('Could not resume audio context', { ...this.logContext, error: e });\n      }\n    }\n\n    if (this.options.webAudioMix) {\n      this.remoteParticipants.forEach((participant) =>\n        participant.setAudioContext(this.audioContext),\n      );\n    }\n\n    this.localParticipant.setAudioContext(this.audioContext);\n\n    const newContextIsRunning = this.audioContext?.state === 'running';\n    if (newContextIsRunning !== this.canPlaybackAudio) {\n      this.audioEnabled = newContextIsRunning;\n      this.emit(RoomEvent.AudioPlaybackStatusChanged, newContextIsRunning);\n    }\n  }\n\n  private createParticipant(identity: string, info?: ParticipantInfo): RemoteParticipant {\n    let participant: RemoteParticipant;\n    if (info) {\n      participant = RemoteParticipant.fromParticipantInfo(this.engine.client, info, {\n        loggerContextCb: () => this.logContext,\n        loggerName: this.options.loggerName,\n      });\n    } else {\n      participant = new RemoteParticipant(\n        this.engine.client,\n        '',\n        identity,\n        undefined,\n        undefined,\n        undefined,\n        {\n          loggerContextCb: () => this.logContext,\n          loggerName: this.options.loggerName,\n        },\n      );\n    }\n    if (this.options.webAudioMix) {\n      participant.setAudioContext(this.audioContext);\n    }\n    if (this.options.audioOutput?.deviceId) {\n      participant\n        .setAudioOutput(this.options.audioOutput)\n        .catch((e) => this.log.warn(`Could not set audio output: ${e.message}`, this.logContext));\n    }\n    return participant;\n  }\n\n  private getOrCreateParticipant(identity: string, info: ParticipantInfo): RemoteParticipant {\n    if (this.remoteParticipants.has(identity)) {\n      const existingParticipant = this.remoteParticipants.get(identity)!;\n      if (info) {\n        const wasUpdated = existingParticipant.updateInfo(info);\n        if (wasUpdated) {\n          this.sidToIdentity.set(info.sid, info.identity);\n        }\n      }\n      return existingParticipant;\n    }\n    const participant = this.createParticipant(identity, info);\n    this.remoteParticipants.set(identity, participant);\n\n    this.sidToIdentity.set(info.sid, info.identity);\n    // if we have valid info and the participant wasn't in the map before, we can assume the participant is new\n    // firing here to make sure that `ParticipantConnected` fires before the initial track events\n    this.emitWhenConnected(RoomEvent.ParticipantConnected, participant);\n\n    // also forward events\n    // trackPublished is only fired for tracks added after both local participant\n    // and remote participant joined the room\n    participant\n      .on(ParticipantEvent.TrackPublished, (trackPublication: RemoteTrackPublication) => {\n        this.emitWhenConnected(RoomEvent.TrackPublished, trackPublication, participant);\n      })\n      .on(\n        ParticipantEvent.TrackSubscribed,\n        (track: RemoteTrack, publication: RemoteTrackPublication) => {\n          // monitor playback status\n          if (track.kind === Track.Kind.Audio) {\n            track.on(TrackEvent.AudioPlaybackStarted, this.handleAudioPlaybackStarted);\n            track.on(TrackEvent.AudioPlaybackFailed, this.handleAudioPlaybackFailed);\n          } else if (track.kind === Track.Kind.Video) {\n            track.on(TrackEvent.VideoPlaybackFailed, this.handleVideoPlaybackFailed);\n            track.on(TrackEvent.VideoPlaybackStarted, this.handleVideoPlaybackStarted);\n          }\n          this.emit(RoomEvent.TrackSubscribed, track, publication, participant);\n        },\n      )\n      .on(ParticipantEvent.TrackUnpublished, (publication: RemoteTrackPublication) => {\n        this.emit(RoomEvent.TrackUnpublished, publication, participant);\n      })\n      .on(\n        ParticipantEvent.TrackUnsubscribed,\n        (track: RemoteTrack, publication: RemoteTrackPublication) => {\n          this.emit(RoomEvent.TrackUnsubscribed, track, publication, participant);\n        },\n      )\n      .on(ParticipantEvent.TrackSubscriptionFailed, (sid: string) => {\n        this.emit(RoomEvent.TrackSubscriptionFailed, sid, participant);\n      })\n      .on(ParticipantEvent.TrackMuted, (pub: TrackPublication) => {\n        this.emitWhenConnected(RoomEvent.TrackMuted, pub, participant);\n      })\n      .on(ParticipantEvent.TrackUnmuted, (pub: TrackPublication) => {\n        this.emitWhenConnected(RoomEvent.TrackUnmuted, pub, participant);\n      })\n      .on(ParticipantEvent.ParticipantMetadataChanged, (metadata: string | undefined) => {\n        this.emitWhenConnected(RoomEvent.ParticipantMetadataChanged, metadata, participant);\n      })\n      .on(ParticipantEvent.ParticipantNameChanged, (name) => {\n        this.emitWhenConnected(RoomEvent.ParticipantNameChanged, name, participant);\n      })\n      .on(ParticipantEvent.AttributesChanged, (changedAttributes: Record<string, string>) => {\n        this.emitWhenConnected(\n          RoomEvent.ParticipantAttributesChanged,\n          changedAttributes,\n          participant,\n        );\n      })\n      .on(ParticipantEvent.ConnectionQualityChanged, (quality: ConnectionQuality) => {\n        this.emitWhenConnected(RoomEvent.ConnectionQualityChanged, quality, participant);\n      })\n      .on(\n        ParticipantEvent.ParticipantPermissionsChanged,\n        (prevPermissions?: ParticipantPermission) => {\n          this.emitWhenConnected(\n            RoomEvent.ParticipantPermissionsChanged,\n            prevPermissions,\n            participant,\n          );\n        },\n      )\n      .on(ParticipantEvent.TrackSubscriptionStatusChanged, (pub, status) => {\n        this.emitWhenConnected(RoomEvent.TrackSubscriptionStatusChanged, pub, status, participant);\n      })\n      .on(ParticipantEvent.TrackSubscriptionFailed, (trackSid, error) => {\n        this.emit(RoomEvent.TrackSubscriptionFailed, trackSid, participant, error);\n      })\n      .on(ParticipantEvent.TrackSubscriptionPermissionChanged, (pub, status) => {\n        this.emitWhenConnected(\n          RoomEvent.TrackSubscriptionPermissionChanged,\n          pub,\n          status,\n          participant,\n        );\n      });\n\n    // update info at the end after callbacks have been set up\n    if (info) {\n      participant.updateInfo(info);\n    }\n    return participant;\n  }\n\n  private sendSyncState() {\n    const remoteTracks = Array.from(this.remoteParticipants.values()).reduce((acc, participant) => {\n      acc.push(...(participant.getTrackPublications() as RemoteTrackPublication[])); // FIXME would be nice to have this return RemoteTrackPublications directly instead of the type cast\n      return acc;\n    }, [] as RemoteTrackPublication[]);\n    const localTracks = this.localParticipant.getTrackPublications() as LocalTrackPublication[]; // FIXME would be nice to have this return LocalTrackPublications directly instead of the type cast\n    this.engine.sendSyncState(remoteTracks, localTracks);\n  }\n\n  /**\n   * After resuming, we'll need to notify the server of the current\n   * subscription settings.\n   */\n  private updateSubscriptions() {\n    for (const p of this.remoteParticipants.values()) {\n      for (const pub of p.videoTrackPublications.values()) {\n        if (pub.isSubscribed && pub instanceof RemoteTrackPublication) {\n          pub.emitTrackUpdate();\n        }\n      }\n    }\n  }\n\n  private getRemoteParticipantBySid(sid: string): RemoteParticipant | undefined {\n    const identity = this.sidToIdentity.get(sid);\n    if (identity) {\n      return this.remoteParticipants.get(identity);\n    }\n  }\n\n  private registerConnectionReconcile() {\n    this.clearConnectionReconcile();\n    let consecutiveFailures = 0;\n    this.connectionReconcileInterval = CriticalTimers.setInterval(() => {\n      if (\n        // ensure we didn't tear it down\n        !this.engine ||\n        // engine detected close, but Room missed it\n        this.engine.isClosed ||\n        // transports failed without notifying engine\n        !this.engine.verifyTransport()\n      ) {\n        consecutiveFailures++;\n        this.log.warn('detected connection state mismatch', {\n          ...this.logContext,\n          numFailures: consecutiveFailures,\n          engine: this.engine\n            ? {\n                closed: this.engine.isClosed,\n                transportsConnected: this.engine.verifyTransport(),\n              }\n            : undefined,\n        });\n        if (consecutiveFailures >= 3) {\n          this.recreateEngine();\n          this.handleDisconnect(\n            this.options.stopLocalTrackOnUnpublish,\n            DisconnectReason.STATE_MISMATCH,\n          );\n        }\n      } else {\n        consecutiveFailures = 0;\n      }\n    }, connectionReconcileFrequency);\n  }\n\n  private clearConnectionReconcile() {\n    if (this.connectionReconcileInterval) {\n      CriticalTimers.clearInterval(this.connectionReconcileInterval);\n    }\n  }\n\n  private setAndEmitConnectionState(state: ConnectionState): boolean {\n    if (state === this.state) {\n      // unchanged\n      return false;\n    }\n    this.state = state;\n    this.emit(RoomEvent.ConnectionStateChanged, this.state);\n    return true;\n  }\n\n  private emitBufferedEvents() {\n    this.bufferedEvents.forEach(([ev, args]) => {\n      this.emit(ev, ...args);\n    });\n    this.bufferedEvents = [];\n  }\n\n  private emitWhenConnected<E extends keyof RoomEventCallbacks>(\n    event: E,\n    ...args: Parameters<RoomEventCallbacks[E]>\n  ): boolean {\n    if (\n      this.state === ConnectionState.Reconnecting ||\n      this.isResuming ||\n      !this.engine ||\n      this.engine.pendingReconnect\n    ) {\n      // in case the room is reconnecting, buffer the events by firing them later after emitting RoomEvent.Reconnected\n      this.bufferedEvents.push([event, args]);\n    } else if (this.state === ConnectionState.Connected) {\n      return this.emit(event, ...args);\n    }\n    return false;\n  }\n\n  private onLocalParticipantMetadataChanged = (metadata: string | undefined) => {\n    this.emit(RoomEvent.ParticipantMetadataChanged, metadata, this.localParticipant);\n  };\n\n  private onLocalParticipantNameChanged = (name: string) => {\n    this.emit(RoomEvent.ParticipantNameChanged, name, this.localParticipant);\n  };\n\n  private onLocalAttributesChanged = (changedAttributes: Record<string, string>) => {\n    this.emit(RoomEvent.ParticipantAttributesChanged, changedAttributes, this.localParticipant);\n  };\n\n  private onLocalTrackMuted = (pub: TrackPublication) => {\n    this.emit(RoomEvent.TrackMuted, pub, this.localParticipant);\n  };\n\n  private onLocalTrackUnmuted = (pub: TrackPublication) => {\n    this.emit(RoomEvent.TrackUnmuted, pub, this.localParticipant);\n  };\n\n  private onTrackProcessorUpdate = (processor?: TrackProcessor<Track.Kind, any>) => {\n    processor?.onPublish?.(this);\n  };\n\n  private onLocalTrackPublished = async (pub: LocalTrackPublication) => {\n    pub.track?.on(TrackEvent.TrackProcessorUpdate, this.onTrackProcessorUpdate);\n    pub.track?.on(TrackEvent.Restarted, this.onLocalTrackRestarted);\n    pub.track?.getProcessor()?.onPublish?.(this);\n\n    this.emit(RoomEvent.LocalTrackPublished, pub, this.localParticipant);\n\n    if (pub.track instanceof LocalAudioTrack) {\n      const trackIsSilent = await pub.track.checkForSilence();\n      if (trackIsSilent) {\n        this.emit(RoomEvent.LocalAudioSilenceDetected, pub);\n      }\n    }\n    const deviceId = await pub.track?.getDeviceId(false);\n    const deviceKind = sourceToKind(pub.source);\n    if (\n      deviceKind &&\n      deviceId &&\n      deviceId !== this.localParticipant.activeDeviceMap.get(deviceKind)\n    ) {\n      this.localParticipant.activeDeviceMap.set(deviceKind, deviceId);\n      this.emit(RoomEvent.ActiveDeviceChanged, deviceKind, deviceId);\n    }\n  };\n\n  private onLocalTrackUnpublished = (pub: LocalTrackPublication) => {\n    pub.track?.off(TrackEvent.TrackProcessorUpdate, this.onTrackProcessorUpdate);\n    pub.track?.off(TrackEvent.Restarted, this.onLocalTrackRestarted);\n    this.emit(RoomEvent.LocalTrackUnpublished, pub, this.localParticipant);\n  };\n\n  private onLocalTrackRestarted = async (track: LocalTrack) => {\n    const deviceId = await track.getDeviceId(false);\n    const deviceKind = sourceToKind(track.source);\n    if (\n      deviceKind &&\n      deviceId &&\n      deviceId !== this.localParticipant.activeDeviceMap.get(deviceKind)\n    ) {\n      this.log.debug(\n        `local track restarted, setting ${deviceKind} ${deviceId} active`,\n        this.logContext,\n      );\n      this.localParticipant.activeDeviceMap.set(deviceKind, deviceId);\n      this.emit(RoomEvent.ActiveDeviceChanged, deviceKind, deviceId);\n    }\n  };\n\n  private onLocalConnectionQualityChanged = (quality: ConnectionQuality) => {\n    this.emit(RoomEvent.ConnectionQualityChanged, quality, this.localParticipant);\n  };\n\n  private onMediaDevicesError = (e: Error) => {\n    this.emit(RoomEvent.MediaDevicesError, e);\n  };\n\n  private onLocalParticipantPermissionsChanged = (prevPermissions?: ParticipantPermission) => {\n    this.emit(RoomEvent.ParticipantPermissionsChanged, prevPermissions, this.localParticipant);\n  };\n\n  private onLocalChatMessageSent = (msg: ChatMessage) => {\n    this.emit(RoomEvent.ChatMessage, msg, this.localParticipant);\n  };\n\n  /**\n   * Allows to populate a room with simulated participants.\n   * No actual connection to a server will be established, all state is\n   * @experimental\n   */\n  async simulateParticipants(options: SimulationOptions) {\n    const publishOptions = {\n      audio: true,\n      video: true,\n      useRealTracks: false,\n      ...options.publish,\n    };\n    const participantOptions = {\n      count: 9,\n      audio: false,\n      video: true,\n      aspectRatios: [1.66, 1.7, 1.3],\n      ...options.participants,\n    };\n    this.handleDisconnect();\n    this.roomInfo = new RoomModel({\n      sid: 'RM_SIMULATED',\n      name: 'simulated-room',\n      emptyTimeout: 0,\n      maxParticipants: 0,\n      creationTime: protoInt64.parse(new Date().getTime()),\n      metadata: '',\n      numParticipants: 1,\n      numPublishers: 1,\n      turnPassword: '',\n      enabledCodecs: [],\n      activeRecording: false,\n    });\n\n    this.localParticipant.updateInfo(\n      new ParticipantInfo({\n        identity: 'simulated-local',\n        name: 'local-name',\n      }),\n    );\n    this.setupLocalParticipantEvents();\n    this.emit(RoomEvent.SignalConnected);\n    this.emit(RoomEvent.Connected);\n    this.setAndEmitConnectionState(ConnectionState.Connected);\n    if (publishOptions.video) {\n      const camPub = new LocalTrackPublication(\n        Track.Kind.Video,\n        new TrackInfo({\n          source: TrackSource.CAMERA,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n          name: 'video-dummy',\n        }),\n        new LocalVideoTrack(\n          publishOptions.useRealTracks\n            ? (\n                await window.navigator.mediaDevices.getUserMedia({ video: true })\n              ).getVideoTracks()[0]\n            : createDummyVideoStreamTrack(\n                160 * (participantOptions.aspectRatios[0] ?? 1),\n                160,\n                true,\n                true,\n              ),\n          undefined,\n          false,\n          { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n        ),\n        { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n      );\n      // @ts-ignore\n      this.localParticipant.addTrackPublication(camPub);\n      this.localParticipant.emit(ParticipantEvent.LocalTrackPublished, camPub);\n    }\n    if (publishOptions.audio) {\n      const audioPub = new LocalTrackPublication(\n        Track.Kind.Audio,\n        new TrackInfo({\n          source: TrackSource.MICROPHONE,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n        }),\n        new LocalAudioTrack(\n          publishOptions.useRealTracks\n            ? (await navigator.mediaDevices.getUserMedia({ audio: true })).getAudioTracks()[0]\n            : getEmptyAudioStreamTrack(),\n          undefined,\n          false,\n          this.audioContext,\n          { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n        ),\n        { loggerName: this.options.loggerName, loggerContextCb: () => this.logContext },\n      );\n      // @ts-ignore\n      this.localParticipant.addTrackPublication(audioPub);\n      this.localParticipant.emit(ParticipantEvent.LocalTrackPublished, audioPub);\n    }\n\n    for (let i = 0; i < participantOptions.count - 1; i += 1) {\n      let info: ParticipantInfo = new ParticipantInfo({\n        sid: Math.floor(Math.random() * 10_000).toString(),\n        identity: `simulated-${i}`,\n        state: ParticipantInfo_State.ACTIVE,\n        tracks: [],\n        joinedAt: protoInt64.parse(Date.now()),\n      });\n      const p = this.getOrCreateParticipant(info.identity, info);\n      if (participantOptions.video) {\n        const dummyVideo = createDummyVideoStreamTrack(\n          160 * (participantOptions.aspectRatios[i % participantOptions.aspectRatios.length] ?? 1),\n          160,\n          false,\n          true,\n        );\n        const videoTrack = new TrackInfo({\n          source: TrackSource.CAMERA,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n        });\n        p.addSubscribedMediaTrack(\n          dummyVideo,\n          videoTrack.sid,\n          new MediaStream([dummyVideo]),\n          new RTCRtpReceiver(),\n        );\n        info.tracks = [...info.tracks, videoTrack];\n      }\n      if (participantOptions.audio) {\n        const dummyTrack = getEmptyAudioStreamTrack();\n        const audioTrack = new TrackInfo({\n          source: TrackSource.MICROPHONE,\n          sid: Math.floor(Math.random() * 10_000).toString(),\n          type: TrackType.AUDIO,\n        });\n        p.addSubscribedMediaTrack(\n          dummyTrack,\n          audioTrack.sid,\n          new MediaStream([dummyTrack]),\n          new RTCRtpReceiver(),\n        );\n        info.tracks = [...info.tracks, audioTrack];\n      }\n\n      p.updateInfo(info);\n    }\n  }\n\n  // /** @internal */\n  emit<E extends keyof RoomEventCallbacks>(\n    event: E,\n    ...args: Parameters<RoomEventCallbacks[E]>\n  ): boolean {\n    // active speaker updates are too spammy\n    if (event !== RoomEvent.ActiveSpeakersChanged) {\n      // only extract logContext from arguments in order to avoid logging the whole object tree\n      const minimizedArgs = mapArgs(args).filter((arg: unknown) => arg !== undefined);\n      this.log.debug(`room event ${event}`, { ...this.logContext, event, args: minimizedArgs });\n    }\n    return super.emit(event, ...args);\n  }\n}\n\nfunction mapArgs(args: unknown[]): any {\n  return args.map((arg: unknown) => {\n    if (!arg) {\n      return;\n    }\n    if (Array.isArray(arg)) {\n      return mapArgs(arg);\n    }\n    if (typeof arg === 'object') {\n      return 'logContext' in arg && arg.logContext;\n    }\n    return arg;\n  });\n}\n\nexport default Room;\n\nexport type RoomEventCallbacks = {\n  connected: () => void;\n  reconnecting: () => void;\n  signalReconnecting: () => void;\n  reconnected: () => void;\n  disconnected: (reason?: DisconnectReason) => void;\n  connectionStateChanged: (state: ConnectionState) => void;\n  mediaDevicesChanged: () => void;\n  participantConnected: (participant: RemoteParticipant) => void;\n  participantDisconnected: (participant: RemoteParticipant) => void;\n  trackPublished: (publication: RemoteTrackPublication, participant: RemoteParticipant) => void;\n  trackSubscribed: (\n    track: RemoteTrack,\n    publication: RemoteTrackPublication,\n    participant: RemoteParticipant,\n  ) => void;\n  trackSubscriptionFailed: (\n    trackSid: string,\n    participant: RemoteParticipant,\n    reason?: SubscriptionError,\n  ) => void;\n  trackUnpublished: (publication: RemoteTrackPublication, participant: RemoteParticipant) => void;\n  trackUnsubscribed: (\n    track: RemoteTrack,\n    publication: RemoteTrackPublication,\n    participant: RemoteParticipant,\n  ) => void;\n  trackMuted: (publication: TrackPublication, participant: Participant) => void;\n  trackUnmuted: (publication: TrackPublication, participant: Participant) => void;\n  localTrackPublished: (publication: LocalTrackPublication, participant: LocalParticipant) => void;\n  localTrackUnpublished: (\n    publication: LocalTrackPublication,\n    participant: LocalParticipant,\n  ) => void;\n  localAudioSilenceDetected: (publication: LocalTrackPublication) => void;\n  participantMetadataChanged: (\n    metadata: string | undefined,\n    participant: RemoteParticipant | LocalParticipant,\n  ) => void;\n  participantNameChanged: (name: string, participant: RemoteParticipant | LocalParticipant) => void;\n  participantPermissionsChanged: (\n    prevPermissions: ParticipantPermission | undefined,\n    participant: RemoteParticipant | LocalParticipant,\n  ) => void;\n  participantAttributesChanged: (\n    changedAttributes: Record<string, string>,\n    participant: RemoteParticipant | LocalParticipant,\n  ) => void;\n  activeSpeakersChanged: (speakers: Array<Participant>) => void;\n  roomMetadataChanged: (metadata: string) => void;\n  dataReceived: (\n    payload: Uint8Array,\n    participant?: RemoteParticipant,\n    kind?: DataPacket_Kind,\n    topic?: string,\n  ) => void;\n  sipDTMFReceived: (dtmf: SipDTMF, participant?: RemoteParticipant) => void;\n  transcriptionReceived: (\n    transcription: TranscriptionSegment[],\n    participant?: Participant,\n    publication?: TrackPublication,\n  ) => void;\n  connectionQualityChanged: (quality: ConnectionQuality, participant: Participant) => void;\n  mediaDevicesError: (error: Error) => void;\n  trackStreamStateChanged: (\n    publication: RemoteTrackPublication,\n    streamState: Track.StreamState,\n    participant: RemoteParticipant,\n  ) => void;\n  trackSubscriptionPermissionChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.PermissionStatus,\n    participant: RemoteParticipant,\n  ) => void;\n  trackSubscriptionStatusChanged: (\n    publication: RemoteTrackPublication,\n    status: TrackPublication.SubscriptionStatus,\n    participant: RemoteParticipant,\n  ) => void;\n  audioPlaybackChanged: (playing: boolean) => void;\n  videoPlaybackChanged: (playing: boolean) => void;\n  signalConnected: () => void;\n  recordingStatusChanged: (recording: boolean) => void;\n  participantEncryptionStatusChanged: (encrypted: boolean, participant?: Participant) => void;\n  encryptionError: (error: Error) => void;\n  dcBufferStatusChanged: (isLow: boolean, kind: DataPacket_Kind) => void;\n  activeDeviceChanged: (kind: MediaDeviceKind, deviceId: string) => void;\n  chatMessage: (message: ChatMessage, participant?: RemoteParticipant | LocalParticipant) => void;\n  localTrackSubscribed: (publication: LocalTrackPublication, participant: LocalParticipant) => void;\n  metricsReceived: (metrics: MetricsBatch, participant?: Participant) => void;\n};\n","import { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport type { RoomConnectOptions, RoomOptions } from '../../options';\nimport type RTCEngine from '../../room/RTCEngine';\nimport Room, { ConnectionState } from '../../room/Room';\n\ntype LogMessage = {\n  level: 'info' | 'warning' | 'error';\n  message: string;\n};\n\nexport enum CheckStatus {\n  IDLE,\n  RUNNING,\n  SKIPPED,\n  SUCCESS,\n  FAILED,\n}\n\nexport type CheckInfo = {\n  name: string;\n  logs: Array<LogMessage>;\n  status: CheckStatus;\n  description: string;\n};\n\nexport interface CheckerOptions {\n  errorsAsWarnings?: boolean;\n  roomOptions?: RoomOptions;\n  connectOptions?: RoomConnectOptions;\n}\n\nexport abstract class Checker extends (EventEmitter as new () => TypedEmitter<CheckerCallbacks>) {\n  protected url: string;\n\n  protected token: string;\n\n  room: Room;\n\n  connectOptions?: RoomConnectOptions;\n\n  status: CheckStatus = CheckStatus.IDLE;\n\n  logs: Array<LogMessage> = [];\n\n  errorsAsWarnings: boolean = false;\n\n  name: string;\n\n  constructor(url: string, token: string, options: CheckerOptions = {}) {\n    super();\n    this.url = url;\n    this.token = token;\n    this.name = this.constructor.name;\n    this.room = new Room(options.roomOptions);\n    this.connectOptions = options.connectOptions;\n    if (options.errorsAsWarnings) {\n      this.errorsAsWarnings = options.errorsAsWarnings;\n    }\n  }\n\n  abstract get description(): string;\n\n  protected abstract perform(): Promise<void>;\n\n  async run(onComplete?: () => void) {\n    if (this.status !== CheckStatus.IDLE) {\n      throw Error('check is running already');\n    }\n    this.setStatus(CheckStatus.RUNNING);\n\n    try {\n      await this.perform();\n    } catch (err) {\n      if (err instanceof Error) {\n        if (this.errorsAsWarnings) {\n          this.appendWarning(err.message);\n        } else {\n          this.appendError(err.message);\n        }\n      }\n    }\n\n    await this.disconnect();\n\n    // sleep for a bit to ensure disconnect\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    // @ts-ignore\n    if (this.status !== CheckStatus.SKIPPED) {\n      this.setStatus(this.isSuccess() ? CheckStatus.SUCCESS : CheckStatus.FAILED);\n    }\n\n    if (onComplete) {\n      onComplete();\n    }\n    return this.getInfo();\n  }\n\n  protected isSuccess(): boolean {\n    return !this.logs.some((l) => l.level === 'error');\n  }\n\n  protected async connect(): Promise<Room> {\n    if (this.room.state === ConnectionState.Connected) {\n      return this.room;\n    }\n    await this.room.connect(this.url, this.token, this.connectOptions);\n    return this.room;\n  }\n\n  protected async disconnect() {\n    if (this.room && this.room.state !== ConnectionState.Disconnected) {\n      await this.room.disconnect();\n      // wait for it to go through\n      await new Promise((resolve) => setTimeout(resolve, 500));\n    }\n  }\n\n  protected skip() {\n    this.setStatus(CheckStatus.SKIPPED);\n  }\n\n  protected appendMessage(message: string) {\n    this.logs.push({ level: 'info', message });\n    this.emit('update', this.getInfo());\n  }\n\n  protected appendWarning(message: string) {\n    this.logs.push({ level: 'warning', message });\n    this.emit('update', this.getInfo());\n  }\n\n  protected appendError(message: string) {\n    this.logs.push({ level: 'error', message });\n    this.emit('update', this.getInfo());\n  }\n\n  protected setStatus(status: CheckStatus) {\n    this.status = status;\n    this.emit('update', this.getInfo());\n  }\n\n  protected get engine(): RTCEngine | undefined {\n    return this.room?.engine;\n  }\n\n  getInfo(): CheckInfo {\n    return {\n      logs: this.logs,\n      name: this.name,\n      status: this.status,\n      description: this.description,\n    };\n  }\n}\nexport type InstantiableCheck<T extends Checker> = {\n  new (url: string, token: string, options?: CheckerOptions): T;\n};\n\ntype CheckerCallbacks = {\n  update: (info: CheckInfo) => void;\n};\n","import DeviceManager from '../DeviceManager';\nimport { audioDefaults, videoDefaults } from '../defaults';\nimport { DeviceUnsupportedError, TrackInvalidError } from '../errors';\nimport { mediaTrackToLocalTrack } from '../participant/publishUtils';\nimport { isSafari17 } from '../utils';\nimport LocalAudioTrack from './LocalAudioTrack';\nimport type LocalTrack from './LocalTrack';\nimport LocalVideoTrack from './LocalVideoTrack';\nimport { Track } from './Track';\nimport type {\n  AudioCaptureOptions,\n  CreateLocalTracksOptions,\n  ScreenShareCaptureOptions,\n  VideoCaptureOptions,\n} from './options';\nimport { ScreenSharePresets } from './options';\nimport {\n  constraintsForOptions,\n  extractProcessorsFromOptions,\n  mergeDefaultOptions,\n  screenCaptureToDisplayMediaStreamOptions,\n} from './utils';\n\n/**\n * Creates a local video and audio track at the same time. When acquiring both\n * audio and video tracks together, it'll display a single permission prompt to\n * the user instead of two separate ones.\n * @param options\n */\nexport async function createLocalTracks(\n  options?: CreateLocalTracksOptions,\n): Promise<Array<LocalTrack>> {\n  // set default options to true\n  options ??= {};\n  options.audio ??= { deviceId: 'default' };\n  options.video ??= { deviceId: 'default' };\n\n  const { audioProcessor, videoProcessor } = extractProcessorsFromOptions(options);\n  const opts = mergeDefaultOptions(options, audioDefaults, videoDefaults);\n  const constraints = constraintsForOptions(opts);\n\n  // Keep a reference to the promise on DeviceManager and await it in getLocalDevices()\n  // works around iOS Safari Bug https://bugs.webkit.org/show_bug.cgi?id=179363\n  const mediaPromise = navigator.mediaDevices.getUserMedia(constraints);\n\n  if (options.audio) {\n    DeviceManager.userMediaPromiseMap.set('audioinput', mediaPromise);\n    mediaPromise.catch(() => DeviceManager.userMediaPromiseMap.delete('audioinput'));\n  }\n  if (options.video) {\n    DeviceManager.userMediaPromiseMap.set('videoinput', mediaPromise);\n    mediaPromise.catch(() => DeviceManager.userMediaPromiseMap.delete('videoinput'));\n  }\n\n  const stream = await mediaPromise;\n  return Promise.all(\n    stream.getTracks().map(async (mediaStreamTrack) => {\n      const isAudio = mediaStreamTrack.kind === 'audio';\n      let trackOptions = isAudio ? opts!.audio : opts!.video;\n      if (typeof trackOptions === 'boolean' || !trackOptions) {\n        trackOptions = {};\n      }\n      let trackConstraints: MediaTrackConstraints | undefined;\n      const conOrBool = isAudio ? constraints.audio : constraints.video;\n      if (typeof conOrBool !== 'boolean') {\n        trackConstraints = conOrBool;\n      }\n\n      // update the constraints with the device id the user gave permissions to in the permission prompt\n      // otherwise each track restart (e.g. mute - unmute) will try to initialize the device again -> causing additional permission prompts\n      if (trackConstraints) {\n        trackConstraints.deviceId = mediaStreamTrack.getSettings().deviceId;\n      } else {\n        trackConstraints = { deviceId: mediaStreamTrack.getSettings().deviceId };\n      }\n\n      const track = mediaTrackToLocalTrack(mediaStreamTrack, trackConstraints);\n      if (track.kind === Track.Kind.Video) {\n        track.source = Track.Source.Camera;\n      } else if (track.kind === Track.Kind.Audio) {\n        track.source = Track.Source.Microphone;\n      }\n      track.mediaStream = stream;\n      if (track instanceof LocalAudioTrack && audioProcessor) {\n        await track.setProcessor(audioProcessor);\n      } else if (track instanceof LocalVideoTrack && videoProcessor) {\n        await track.setProcessor(videoProcessor);\n      }\n\n      return track;\n    }),\n  );\n}\n\n/**\n * Creates a [[LocalVideoTrack]] with getUserMedia()\n * @param options\n */\nexport async function createLocalVideoTrack(\n  options?: VideoCaptureOptions,\n): Promise<LocalVideoTrack> {\n  const tracks = await createLocalTracks({\n    audio: false,\n    video: options,\n  });\n  return <LocalVideoTrack>tracks[0];\n}\n\nexport async function createLocalAudioTrack(\n  options?: AudioCaptureOptions,\n): Promise<LocalAudioTrack> {\n  const tracks = await createLocalTracks({\n    audio: options,\n    video: false,\n  });\n  return <LocalAudioTrack>tracks[0];\n}\n\n/**\n * Creates a screen capture tracks with getDisplayMedia().\n * A LocalVideoTrack is always created and returned.\n * If { audio: true }, and the browser supports audio capture, a LocalAudioTrack is also created.\n */\nexport async function createLocalScreenTracks(\n  options?: ScreenShareCaptureOptions,\n): Promise<Array<LocalTrack>> {\n  if (options === undefined) {\n    options = {};\n  }\n  if (options.resolution === undefined && !isSafari17()) {\n    options.resolution = ScreenSharePresets.h1080fps30.resolution;\n  }\n\n  if (navigator.mediaDevices.getDisplayMedia === undefined) {\n    throw new DeviceUnsupportedError('getDisplayMedia not supported');\n  }\n\n  const constraints = screenCaptureToDisplayMediaStreamOptions(options);\n  const stream: MediaStream = await navigator.mediaDevices.getDisplayMedia(constraints);\n\n  const tracks = stream.getVideoTracks();\n  if (tracks.length === 0) {\n    throw new TrackInvalidError('no video track found');\n  }\n  const screenVideo = new LocalVideoTrack(tracks[0], undefined, false);\n  screenVideo.source = Track.Source.ScreenShare;\n  const localTracks: Array<LocalTrack> = [screenVideo];\n  if (stream.getAudioTracks().length > 0) {\n    const screenAudio = new LocalAudioTrack(stream.getAudioTracks()[0], undefined, false);\n    screenAudio.source = Track.Source.ScreenShareAudio;\n    localTracks.push(screenAudio);\n  }\n  return localTracks;\n}\n","import { createLocalAudioTrack } from '../../room/track/create';\nimport { Checker } from './Checker';\n\nexport class PublishAudioCheck extends Checker {\n  get description(): string {\n    return 'Can publish audio';\n  }\n\n  async perform(): Promise<void> {\n    const room = await this.connect();\n\n    const track = await createLocalAudioTrack();\n    room.localParticipant.publishTrack(track);\n    // wait for a few seconds to publish\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    // verify RTC stats that it's publishing\n    const stats = await track.sender?.getStats();\n    if (!stats) {\n      throw new Error('Could not get RTCStats');\n    }\n    let numPackets = 0;\n    stats.forEach((stat) => {\n      if (\n        stat.type === 'outbound-rtp' &&\n        (stat.kind === 'audio' || (!stat.kind && stat.mediaType === 'audio'))\n      ) {\n        numPackets = stat.packetsSent;\n      }\n    });\n    if (numPackets === 0) {\n      throw new Error('Could not determine packets are sent');\n    }\n    this.appendMessage(`published ${numPackets} audio packets`);\n  }\n}\n","import { createLocalVideoTrack } from '../../room/track/create';\nimport { Checker } from './Checker';\n\nexport class PublishVideoCheck extends Checker {\n  get description(): string {\n    return 'Can publish video';\n  }\n\n  async perform(): Promise<void> {\n    const room = await this.connect();\n\n    const track = await createLocalVideoTrack();\n    room.localParticipant.publishTrack(track);\n    // wait for a few seconds to publish\n    await new Promise((resolve) => setTimeout(resolve, 5000));\n\n    // verify RTC stats that it's publishing\n    const stats = await track.sender?.getStats();\n    if (!stats) {\n      throw new Error('Could not get RTCStats');\n    }\n    let numPackets = 0;\n    stats.forEach((stat) => {\n      if (\n        stat.type === 'outbound-rtp' &&\n        (stat.kind === 'video' || (!stat.kind && stat.mediaType === 'video'))\n      ) {\n        numPackets += stat.packetsSent;\n      }\n    });\n    if (numPackets === 0) {\n      throw new Error('Could not determine packets are sent');\n    }\n    this.appendMessage(`published ${numPackets} video packets`);\n  }\n}\n","import { ConnectionState } from '../../room/Room';\nimport { RoomEvent } from '../../room/events';\nimport { Checker } from './Checker';\n\nexport class ReconnectCheck extends Checker {\n  get description(): string {\n    return 'Resuming connection after interruption';\n  }\n\n  async perform(): Promise<void> {\n    const room = await this.connect();\n    let reconnectingTriggered = false;\n    let reconnected = false;\n\n    let reconnectResolver: (value: unknown) => void;\n    const reconnectTimeout = new Promise((resolve) => {\n      setTimeout(resolve, 5000);\n      reconnectResolver = resolve;\n    });\n\n    const handleReconnecting = () => {\n      reconnectingTriggered = true;\n    };\n\n    room\n      .on(RoomEvent.SignalReconnecting, handleReconnecting)\n      .on(RoomEvent.Reconnecting, handleReconnecting)\n      .on(RoomEvent.Reconnected, () => {\n        reconnected = true;\n        reconnectResolver(true);\n      });\n\n    room.engine.client.ws?.close();\n    const onClose = room.engine.client.onClose;\n    if (onClose) {\n      onClose('');\n    }\n\n    await reconnectTimeout;\n\n    if (!reconnectingTriggered) {\n      throw new Error('Did not attempt to reconnect');\n    } else if (!reconnected || room.state !== ConnectionState.Connected) {\n      this.appendWarning('reconnection is only possible in Redis-based configurations');\n      throw new Error('Not able to reconnect');\n    }\n  }\n}\n","import { SignalClient } from '../../api/SignalClient';\nimport { Checker } from './Checker';\n\nexport class TURNCheck extends Checker {\n  get description(): string {\n    return 'Can connect via TURN';\n  }\n\n  async perform(): Promise<void> {\n    const signalClient = new SignalClient();\n    const joinRes = await signalClient.join(this.url, this.token, {\n      autoSubscribe: true,\n      maxRetries: 0,\n      e2eeEnabled: false,\n      websocketTimeout: 15_000,\n    });\n\n    let hasTLS = false;\n    let hasTURN = false;\n    let hasSTUN = false;\n\n    for (let iceServer of joinRes.iceServers) {\n      for (let url of iceServer.urls) {\n        if (url.startsWith('turn:')) {\n          hasTURN = true;\n          hasSTUN = true;\n        } else if (url.startsWith('turns:')) {\n          hasTURN = true;\n          hasSTUN = true;\n          hasTLS = true;\n        }\n        if (url.startsWith('stun:')) {\n          hasSTUN = true;\n        }\n      }\n    }\n    if (!hasSTUN) {\n      this.appendWarning('No STUN servers configured on server side.');\n    } else if (hasTURN && !hasTLS) {\n      this.appendWarning('TURN is configured server side, but TURN/TLS is unavailable.');\n    }\n    await signalClient.close();\n    if (this.connectOptions?.rtcConfig?.iceServers || hasTURN) {\n      await this.room!.connect(this.url, this.token, {\n        rtcConfig: {\n          iceTransportPolicy: 'relay',\n        },\n      });\n    } else {\n      this.appendWarning('No TURN servers configured.');\n      this.skip();\n      await new Promise((resolve) => setTimeout(resolve, 0));\n    }\n  }\n}\n","import log from '../../logger';\nimport { RoomEvent } from '../../room/events';\nimport { Checker } from './Checker';\n\nexport class WebRTCCheck extends Checker {\n  get description(): string {\n    return 'Establishing WebRTC connection';\n  }\n\n  protected async perform(): Promise<void> {\n    let hasTcp = false;\n    let hasIpv4Udp = false;\n    this.room.on(RoomEvent.SignalConnected, () => {\n      const prevTrickle = this.room.engine.client.onTrickle;\n\n      const candidates: RTCIceCandidate[] = [];\n      this.room.engine.client.onTrickle = (sd, target) => {\n        if (sd.candidate) {\n          const candidate = new RTCIceCandidate(sd);\n          candidates.push(candidate);\n          let str = `${candidate.protocol} ${candidate.address}:${candidate.port} ${candidate.type}`;\n          if (candidate.address) {\n            if (isIPPrivate(candidate.address)) {\n              str += ' (private)';\n            } else {\n              if (candidate.protocol === 'tcp' && candidate.tcpType === 'passive') {\n                hasTcp = true;\n                str += ' (passive)';\n              } else if (candidate.protocol === 'udp') {\n                hasIpv4Udp = true;\n              }\n            }\n          }\n          this.appendMessage(str);\n        }\n        if (prevTrickle) {\n          prevTrickle(sd, target);\n        }\n      };\n\n      if (this.room.engine.pcManager) {\n        this.room.engine.pcManager.subscriber.onIceCandidateError = (ev) => {\n          if (ev instanceof RTCPeerConnectionIceErrorEvent) {\n            this.appendWarning(\n              `error with ICE candidate: ${ev.errorCode} ${ev.errorText} ${ev.url}`,\n            );\n          }\n        };\n      }\n    });\n    try {\n      await this.connect();\n      log.info('now the room is connected');\n    } catch (err) {\n      this.appendWarning('ports need to be open on firewall in order to connect.');\n      throw err;\n    }\n    if (!hasTcp) {\n      this.appendWarning('Server is not configured for ICE/TCP');\n    }\n    if (!hasIpv4Udp) {\n      this.appendWarning(\n        'No public IPv4 UDP candidates were found. Your server is likely not configured correctly',\n      );\n    }\n  }\n}\n\nfunction isIPPrivate(address: string): boolean {\n  const parts = address.split('.');\n  if (parts.length === 4) {\n    if (parts[0] === '10') {\n      return true;\n    } else if (parts[0] === '192' && parts[1] === '168') {\n      return true;\n    } else if (parts[0] === '172') {\n      const second = parseInt(parts[1], 10);\n      if (second >= 16 && second <= 31) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import { ServerInfo_Edition } from '@livekit/protocol';\nimport { SignalClient } from '../../api/SignalClient';\nimport { Checker } from './Checker';\n\nexport class WebSocketCheck extends Checker {\n  get description(): string {\n    return 'Connecting to signal connection via WebSocket';\n  }\n\n  protected async perform(): Promise<void> {\n    if (this.url.startsWith('ws:') || this.url.startsWith('http:')) {\n      this.appendWarning('Server is insecure, clients may block connections to it');\n    }\n\n    let signalClient = new SignalClient();\n    const joinRes = await signalClient.join(this.url, this.token, {\n      autoSubscribe: true,\n      maxRetries: 0,\n      e2eeEnabled: false,\n      websocketTimeout: 15_000,\n    });\n    this.appendMessage(`Connected to server, version ${joinRes.serverVersion}.`);\n    if (joinRes.serverInfo?.edition === ServerInfo_Edition.Cloud && joinRes.serverInfo?.region) {\n      this.appendMessage(`LiveKit Cloud: ${joinRes.serverInfo?.region}`);\n    }\n    await signalClient.close();\n  }\n}\n","import { EventEmitter } from 'events';\nimport type TypedEmitter from 'typed-emitter';\nimport type { CheckInfo, CheckerOptions, InstantiableCheck } from './checks/Checker';\nimport { CheckStatus, Checker } from './checks/Checker';\nimport { PublishAudioCheck } from './checks/publishAudio';\nimport { PublishVideoCheck } from './checks/publishVideo';\nimport { ReconnectCheck } from './checks/reconnect';\nimport { TURNCheck } from './checks/turn';\nimport { WebRTCCheck } from './checks/webrtc';\nimport { WebSocketCheck } from './checks/websocket';\n\nexport type { CheckInfo, CheckStatus };\n\nexport class ConnectionCheck extends (EventEmitter as new () => TypedEmitter<ConnectionCheckCallbacks>) {\n  token: string;\n\n  url: string;\n\n  options: CheckerOptions = {};\n\n  private checkResults: Map<number, CheckInfo> = new Map();\n\n  constructor(url: string, token: string, options: CheckerOptions = {}) {\n    super();\n    this.url = url;\n    this.token = token;\n    this.options = options;\n  }\n\n  private getNextCheckId() {\n    const nextId = this.checkResults.size;\n    this.checkResults.set(nextId, {\n      logs: [],\n      status: CheckStatus.IDLE,\n      name: '',\n      description: '',\n    });\n    return nextId;\n  }\n\n  private updateCheck(checkId: number, info: CheckInfo) {\n    this.checkResults.set(checkId, info);\n    this.emit('checkUpdate', checkId, info);\n  }\n\n  isSuccess() {\n    return Array.from(this.checkResults.values()).every((r) => r.status !== CheckStatus.FAILED);\n  }\n\n  getResults() {\n    return Array.from(this.checkResults.values());\n  }\n\n  async createAndRunCheck<T extends Checker>(check: InstantiableCheck<T>) {\n    const checkId = this.getNextCheckId();\n    const test = new check(this.url, this.token, this.options);\n    const handleUpdate = (info: CheckInfo) => {\n      this.updateCheck(checkId, info);\n    };\n    test.on('update', handleUpdate);\n    const result = await test.run();\n    test.off('update', handleUpdate);\n    return result;\n  }\n\n  async checkWebsocket() {\n    return this.createAndRunCheck(WebSocketCheck);\n  }\n\n  async checkWebRTC() {\n    return this.createAndRunCheck(WebRTCCheck);\n  }\n\n  async checkTURN() {\n    return this.createAndRunCheck(TURNCheck);\n  }\n\n  async checkReconnect() {\n    return this.createAndRunCheck(ReconnectCheck);\n  }\n\n  async checkPublishAudio() {\n    return this.createAndRunCheck(PublishAudioCheck);\n  }\n\n  async checkPublishVideo() {\n    return this.createAndRunCheck(PublishVideoCheck);\n  }\n}\n\ntype ConnectionCheckCallbacks = {\n  checkUpdate: (id: number, info: CheckInfo) => void;\n};\n","import log from '../../logger';\nimport LocalTrack from './LocalTrack';\nimport type { VideoCaptureOptions } from './options';\n\ntype FacingMode = NonNullable<VideoCaptureOptions['facingMode']>;\ntype FacingModeFromLocalTrackOptions = {\n  /**\n   * If no facing mode can be determined, this value will be used.\n   * @defaultValue 'user'\n   */\n  defaultFacingMode?: FacingMode;\n};\ntype FacingModeFromLocalTrackReturnValue = {\n  /**\n   * The (probable) facingMode of the track.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n   */\n  facingMode: FacingMode;\n  /**\n   * The confidence that the returned facingMode is correct.\n   */\n  confidence: 'high' | 'medium' | 'low';\n};\n\n/**\n * Try to analyze the local track to determine the facing mode of a track.\n *\n * @remarks\n * There is no property supported by all browsers to detect whether a video track originated from a user- or environment-facing camera device.\n * For this reason, we use the `facingMode` property when available, but will fall back on a string-based analysis of the device label to determine the facing mode.\n * If both methods fail, the default facing mode will be used.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n * @experimental\n */\nexport function facingModeFromLocalTrack(\n  localTrack: LocalTrack | MediaStreamTrack,\n  options: FacingModeFromLocalTrackOptions = {},\n): FacingModeFromLocalTrackReturnValue {\n  const track = localTrack instanceof LocalTrack ? localTrack.mediaStreamTrack : localTrack;\n  const trackSettings = track.getSettings();\n  let result: FacingModeFromLocalTrackReturnValue = {\n    facingMode: options.defaultFacingMode ?? 'user',\n    confidence: 'low',\n  };\n\n  // 1. Try to get facingMode from track settings.\n  if ('facingMode' in trackSettings) {\n    const rawFacingMode = trackSettings.facingMode;\n    log.trace('rawFacingMode', { rawFacingMode });\n    if (rawFacingMode && typeof rawFacingMode === 'string' && isFacingModeValue(rawFacingMode)) {\n      result = { facingMode: rawFacingMode, confidence: 'high' };\n    }\n  }\n\n  // 2. If we don't have a high confidence we try to get the facing mode from the device label.\n  if (['low', 'medium'].includes(result.confidence)) {\n    log.trace(`Try to get facing mode from device label: (${track.label})`);\n    const labelAnalysisResult = facingModeFromDeviceLabel(track.label);\n    if (labelAnalysisResult !== undefined) {\n      result = labelAnalysisResult;\n    }\n  }\n\n  return result;\n}\n\nconst knownDeviceLabels = new Map<string, FacingModeFromLocalTrackReturnValue>([\n  ['obs virtual camera', { facingMode: 'environment', confidence: 'medium' }],\n]);\nconst knownDeviceLabelSections = new Map<string, FacingModeFromLocalTrackReturnValue>([\n  ['iphone', { facingMode: 'environment', confidence: 'medium' }],\n  ['ipad', { facingMode: 'environment', confidence: 'medium' }],\n]);\n/**\n * Attempt to analyze the device label to determine the facing mode.\n *\n * @experimental\n */\nexport function facingModeFromDeviceLabel(\n  deviceLabel: string,\n): FacingModeFromLocalTrackReturnValue | undefined {\n  const label = deviceLabel.trim().toLowerCase();\n  // Empty string is a valid device label but we can't infer anything from it.\n  if (label === '') {\n    return undefined;\n  }\n\n  // Can we match against widely known device labels.\n  if (knownDeviceLabels.has(label)) {\n    return knownDeviceLabels.get(label);\n  }\n\n  // Can we match against sections of the device label.\n  return Array.from(knownDeviceLabelSections.entries()).find(([section]) =>\n    label.includes(section),\n  )?.[1];\n}\n\nfunction isFacingModeValue(item: string): item is FacingMode {\n  const allowedValues: FacingMode[] = ['user', 'environment', 'left', 'right'];\n  return item === undefined || allowedValues.includes(item as FacingMode);\n}\n"],"names":["_","constructor","o","_locking","Promise","resolve","_locks","isLocked","lock","s","t","l","unlockNext","c","then","assert","condition","msg","Error","FLOAT32_MAX","FLOAT32_MIN","UINT32_MAX","INT32_MAX","INT32_MIN","assertInt32","arg","Number","isInteger","assertUInt32","assertFloat32","isFinite","enumTypeSymbol","Symbol","getEnumType","enumObject","setEnumType","typeName","values","opt","makeEnumType","map","v","no","name","localName","_opt","names","Object","create","numbers","normalValues","value","n","normalizeEnumValue","push","findName","findNumber","makeEnum","assign","Message","equals","other","getType","runtime","util","clone","fromBinary","bytes","options","type","format","bin","makeReadOptions","readMessage","readerFactory","byteLength","fromJson","jsonValue","json","fromJsonString","jsonString","JSON","parse","e","concat","message","String","toBinary","makeWriteOptions","writer","writerFactory","writeMessage","finish","toJson","toJsonString","_a","stringify","prettySpaces","toJSON","emitDefaultValues","getPrototypeOf","makeMessageType","fields","substring","lastIndexOf","data","initFields","initPartial","setPrototypeOf","prototype","newFieldList","a","b","varint64read","lowBits","highBits","shift","buf","pos","assertBounds","middleByte","varint64write","lo","hi","i","hasNext","byte","splitBits","hasMoreBits","TWO_PWR_32_DBL","int64FromString","dec","minus","slice","base","add1e6digit","begin","end","digit1e6","negate","newBits","int64ToString","bits","negative","result","uInt64ToString","toUnsigned","low","mid","high","digitA","digitB","digitC","Math","floor","toString","decimalFrom1e7WithLeadingZeros","digit1e7","partial","length","varint32write","varint32read","readBytes","makeInt64Support","dv","DataView","ArrayBuffer","ok","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","process","env","BUF_BIGINT_DISABLE","MIN","MAX","UMIN","UMAX","zero","supported","bi","uParse","enc","getInt32","uEnc","setInt32","uDec","assertInt64String","test","assertUInt64String","protoInt64","ScalarType","LongType","scalarEquals","BYTES","Uint8Array","UINT64","FIXED64","INT64","SFIXED64","SINT64","scalarZeroValue","longType","BOOL","DOUBLE","FLOAT","STRING","isScalarZeroValue","WireType","BinaryWriter","textEncoder","stack","TextEncoder","chunks","len","offset","set","fork","join","chunk","prev","pop","uint32","raw","tag","fieldNo","int32","bool","string","encode","float","buffer","setFloat32","double","setFloat64","fixed32","setUint32","sfixed32","sint32","sfixed64","view","tc","fixed64","int64","sint64","sign","uint64","BinaryReader","textDecoder","varint64","byteOffset","TextDecoder","wireType","skip","start","Varint","Bit64","Bit32","LengthDelimited","StartGroup","fn","wt","EndGroup","undefined","subarray","RangeError","zze","getUint32","getFloat32","getFloat64","decode","makeExtension","extendee","field","fi","split","jsonName","list","createExtensionContainer","extension","container","initExtensionField","ext","repeated","default","kind","T","L","fieldWrapper","unwrapField","filterUnknownFields","unknownFields","filter","uf","encTable","decTable","charCodeAt","indexOf","protoBase64","base64Str","es","bytePos","groupPos","p","base64","getExtension","assertExtendee","ufs","listUnknownFields","get","readField","setExtension","readOpt","writeOpt","hasExtension","discardUnknownFields","onUnknownField","f","writeField","reader","messageType","find","isFieldSet","target","oneof","case","req","keys","clearField","implicitPresence","isMessage","getOwnPropertyNames","every","m","actualType","wrapField","INT32","UINT32","jsonReadDefaults","ignoreUnknownFields","jsonWriteDefaults","enumAsInteger","useProtoFieldName","tokenNull","tokenIgnoredUnknownEnum","makeJsonFormat","Array","isArray","debugJsonValue","oneofSeen","Map","registry","typeRegistry","jsonKey","entries","findJsonName","seen","found","findExtension","startsWith","endsWith","byNumber","canEmitFieldDefaultValue","findExtensionFor","r","readScalar","BIGINT","writeScalar","debug","parentType","targetArray","jsonItem","enumValue","readEnum","targetMap","jsonMapKey","jsonMapValue","key","readMapKey","K","V","currentValue","scalarValue","nullAsZeroValue","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","trim","isNaN","FIXED32","SFIXED32","SINT32","long","uLong","encodeURIComponent","jsonObj","entryKey","entryValue","enumType","writeEnum","jsonArr","val","unknownFieldsSymbol","readDefaults","readUnknownFields","writeDefaults","writeUnknownFields","makeBinaryFormat","lengthOrEndTagFieldNo","delimitedMessageEncoding","scalarType","read","readScalarLTString","arr","isPacked","readMessageField","mapKey","mapVal","readMapEntry","delimited","packed","writePacked","item","writeMessageField","writeMapEntry","keyValue","parseInt","method","scalarTypeInfo","toLowerCase","makeUtilCommon","source","member","byMember","sk","sourceField","findField","toU8Arr","copy","k","mt","va","vb","any","cloneSingularField","input","makeProtoRuntime","syntax","InternalFieldList","normalizer","_fields","_normalizer","jsonNames","all","numbersAsc","sort","members","localFieldName","protoName","inOneof","protoCamelCase","safeObjectProperty","safeMessageProperty","localOneofName","fieldJsonName","snakeCase","capNext","charAt","toUpperCase","reservedObjectProperties","Set","reservedMessageProperties","fallback","has","InternalOneofInfo","addField","_lookup","normalizeFieldInfos","fieldInfos","packedByDefault","_b","_c","_d","_e","_f","ooname","proto3","Timestamp","seconds","nanos","matches","match","ms","Date","repeat","z","nanosStr","toISOString","replace","toDate","ceil","now","fromDate","date","getTime","MetricsBatch","TimeSeriesMetric","EventMetric","MetricSample","root","definition","module","exports","log","this","noop","undefinedType","isIE","window","navigator","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","bind","Function","call","apply","arguments","traceForIE","console","trace","realMethod","replaceLoggingMethods","level","getLevel","methodFactory","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","Logger","factory","self","inheritedLevel","defaultLevel","userLevel","storageKey","persistLevelIfPossible","levelNum","levelName","localStorage","ignore","document","cookie","getPersistedLevel","storedLevel","cookieName","location","exec","clearPersistedLevel","removeItem","normalizeLevel","TypeError","setLevel","persist","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","LogLevel","LoggerNames","livekitLogger","livekitLoggers","info","setLogLevel","loggerName","setLogExtension","loggers","forEach","logR","originalFactory","configLevel","rawMethod","logLevel","needLog","silent","context","workerLogger","maxRetryDelay","DEFAULT_RETRY_DELAYS_IN_MS","DefaultReconnectPolicy","retryDelays","_retryDelays","nextRetryDelayInMs","retryCount","retryDelay","random","R","Reflect","ReflectApply","receiver","args","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","ProcessEmitWarning","warning","warn","NumberIsNaN","EventEmitter","init","eventsModule","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","defineProperty","enumerable","setMaxListeners","_getMaxListeners","that","getMaxListeners","emit","doError","events","error","er","err","handler","listeners","arrayClone","_addListener","prepend","existing","newListener","unshift","warned","w","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","index","ret","reject","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","wrapPeerConnectionEvent","eventNameToWrap","wrapper","RTCPeerConnection","proto","nativeAddEventListener","nativeEventName","cb","wrappedCallback","modifiedEvent","handleEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","delete","size","configurable","disableLog","disableWarnings","deprecated","oldMethod","newMethod","detectBrowser","browser","version","userAgentData","brands","chromium","brand","mozGetUserMedia","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","supportsUnifiedPlan","RTCRtpTransceiver","isObject","compactObject","reduce","accumulator","isObj","isEmptyObject","walkStats","stats","resultSet","id","filterStats","track","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","trackId","logging","utils","shimGetUserMedia","browserDetails","mediaDevices","constraintsToChrome_","mandatory","optional","cc","ideal","exact","min","max","oldname_","prefix","oc","mix","advanced","shimConstraints_","constraints","func","audio","remap","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","enumerateDevices","devices","d","dev","some","label","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraint","constraintName","getUserMedia_","onSuccess","onError","getUserMedia","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","_ontrack","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","getReceivers","event","Event","transceiver","streams","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","splice","origAddStream","addStream","origRemoveStream","removeStream","RTCRtpSender","origGetSenders","senders","shimSenderReceiverGetStats","RTCRtpReceiver","getStats","origGetReceivers","receivers","srcElement","origGetStats","MediaStreamTrack","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","alreadyExists","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","signalingState","oldStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","RegExp","RTCSessionDescription","replaceExternalStreamId","nativeMethod","methodObj","isLegacyCall","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","isLocal","streamid","hasTrack","shimPeerConnection","RTCIceCandidate","fixNegotiationNeeded","getConfiguration","sdpSemantics","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","shimGetDisplayMedia","preferredMediaSource","getDisplayMedia","code","mediaSource","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","selector","onSucc","onErr","stat","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","shouldPerformCheck","encodingParam","ridRegex","rid","parseFloat","scaleResolutionDownBy","maxFramerate","params","getParameters","encodings","setParameters","catch","shimGetParameters","origGetParameters","shimCreateOffer","origCreateOffer","createOffer","finally","shimCreateAnswer","origCreateAnswer","createAnswer","shimLocalStreamsAPI","_localStreams","_addTrack","_len","_key","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","addIceCandidate","successCallback","failureCallback","promise","withCallback","candidate","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","url","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","direction","setDirection","offerToReceiveVideo","videoTransceiver","shimAudioContext","AudioContext","webkitAudioContext","SDPUtils","generateIdentifier","localCName","splitLines","blob","line","splitSections","parts","part","getDescription","sections","getMediaSections","matchPrefix","parseCandidate","foundation","component","protocol","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","uri","attributes","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","duplicate","existingFeedback","writeRtpDescription","caps","maxptime","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","sctp","output","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","user","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sdpMid","sdpMLineIndex","writable","shimRTCIceCandidateRelayProtocol","relayProtocol","shimMaxMessageSize","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","isFirefox","canSendMMS","remoteMMS","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","readyState","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeExtmapAllowMixed","nativeSRD","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","shimParameterlessSetLocalDescription","nativeSetLocalDescription","adapterFactory","shimChrome","shimFirefox","shimSafari","adapter","commonShim","chromeShim","browserShim","firefoxShim","safariShim","ENCRYPTION_ALGORITHM","DECRYPTION_FAILURE_TOLERANCE","E2EE_FLAG","SALT","KEY_PROVIDER_DEFAULTS","sharedKey","ratchetSalt","ratchetWindowSize","failureTolerance","keyringSize","KeyProviderEvent","KeyHandlerEvent","EncryptionEvent","CryptorEvent","isE2EESupported","isInsertableStreamSupported","isScriptTransformSupported","RTCRtpScriptTransform","createEncodedStreams","isVideoFrame","frame","importKey","keyBytes_1","keyBytes","usage","crypto","subtle","createKeyMaterialFromString","keyMaterial","createKeyMaterialFromBuffer","cryptoBuffer","getAlgoOptions","algorithmName","salt","encodedSalt","hash","iterations","deriveKeys","material","algorithmOptions","encryptionKey","deriveKey","createE2EEKey","getRandomValues","ratchet","deriveBits","needsRbspUnescaping","frameData","parseRbsp","dataOut","kZerosInStartSequence","kEmulationByte","writeRbsp","data_in","numConsecutiveZeros","BaseKeyProvider","onKeyRatcheted","keyIndex","keyInfoMap","KeyRatcheted","onSetEncryptionKey","participantIdentity","keyInfo","SetKey","getKeys","from","getOptions","ratchetKey","RatchetRequest","ExternalE2EEKeyProvider","opts","setKey","derivedKey","LivekitError","ConnectionErrorReason","ConnectionError","reason","status","DeviceUnsupportedError","TrackInvalidError","UnsupportedServer","UnexpectedConnectionState","NegotiationError","PublishDataError","SignalRequestError","MediaDeviceFailure","getFailure","NotFound","PermissionDenied","DeviceInUse","Other","CryptorErrorReason","CryptorError","InternalError","RoomEvent","ParticipantEvent","EngineEvent","TrackEvent","isImmediate","u","callback","maxWait","clearTimeout","setTimeout","cancel","commonVersionIdentifier","getBrowser","force","ua","browsersList","_ref","describe","getMatch","os","osVersion","getOSVersion","exp","protocolVersion","CriticalTimers","setInterval","clearInterval","VideoPreset","widthOrOptions","height","width","aspectRatio","encoding","resolution","frameRate","backupCodecs","videoCodecs","isBackupCodec","backup","AudioPresets","telephone","speech","music","musicStereo","musicHighQuality","musicHighQualityStereo","VideoPresets","h90","h180","h216","h360","h540","h720","h1080","h1440","h2160","VideoPresets43","h120","h240","h480","ScreenSharePresets","h360fps3","h360fps15","h720fps5","h720fps15","h720fps30","h1080fps15","h1080fps30","original","cloneDeep","structuredClone","BACKGROUND_REACTION_DELAY","recycledElements","VideoQuality","Track","mediaTrack","loggerOptions","attachedElements","isMuted","streamState","StreamState","Active","isInBackground","_currentBitrate","appVisibilityChangedListener","backgroundTimeout","visibilityState","handleAppVisibilityChanged","loggerContextCb","_mediaStreamTrack","_mediaStreamID","Source","Unknown","logContext","getLogContextFromTrack","currentBitrate","mediaStreamTrack","mediaStreamID","attach","element","elementType","Kind","Video","addAppVisibilityListener","parentElement","createElement","attachToElement","allMediaStreamTracks","srcObject","hasAudio","tr","play","AudioPlaybackStarted","VideoPlaybackStarted","AudioPlaybackFailed","VideoPlaybackFailed","muted","ElementAttached","detach","detachTrack","recycleElement","ElementDetached","detached","elm","removeAppVisibilityListener","stopMonitor","enable","enabled","disable","monitorInterval","timeSyncHandle","cancelAnimationFrame","updateLoggerOptions","HTMLAudioElement","shouldCache","pause","el","isWeb","mediaStream","existingTracks","et","isSafari","HTMLVideoElement","autoplay","playsInline","isFireFox","kindToProto","Audio","TrackType","AUDIO","VIDEO","DATA","kindFromProto","sourceToProto","Camera","TrackSource","CAMERA","Microphone","MICROPHONE","ScreenShare","SCREEN_SHARE","ScreenShareAudio","SCREEN_SHARE_AUDIO","UNKNOWN","sourceFromProto","streamStateFromProto","ProtoStreamState","ACTIVE","PAUSED","Paused","mergeDefaultOptions","audioDefaults","videoDefaults","optionsWithoutProcessor","audioProcessor","videoProcessor","extractProcessorsFromOptions","clonedOptions","mergeObjectWithoutOverwriting","processor","mainObject","objectToMerge","constraintsForOptions","videoOptions","detectSilence","track_1","timeOffset","ctx","getNewAudioContext","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","createMediaStreamSource","connect","sleep","getByteTimeDomainData","someNoise","sample","close","latencyHint","sourceToKind","screenCaptureToDisplayMediaStreamOptions","videoConstraints","controller","selfBrowserSurface","surfaceSwitching","systemAudio","preferCurrentTab","mimeTypeToVideoCodecString","mimeType","getTrackPublicationInfo","infos","TrackPublishedResponse","cid","trackInfo","trackID","sid","streamID","streamTrackID","trackSid","isEnabled","trackName","encrypted","isEncrypted","supportsSynchronizationSources","diffAttributes","oldValues","newValues","allKeys","diff","newOptions","separator","ddExtensionURI","unpackStreamId","duration","supportsTransceiver","supportsAddTrack","supportsAdaptiveStream","ResizeObserver","IntersectionObserver","supportsDynacast","supportsAV1","capabilities","getCapabilities","hasAV1","supportsVP9","compareVersions","hasVP9","isSVCCodec","supportsSetSinkId","isBrowserSupported","isSafari17","isMobile","mobile","isE2EESimulcastSupported","supportedSafariVersion","isReactNative","product","isCloud","serverUrl","hostname","getLKReactNativeInfo","global","LiveKitReactNativeGlobal","getReactNativeOs","platform","getDevicePixelRatio","devicePixelRatio","v1","v2","parts1","parts2","p1","p2","roDispatchCallback","entry","handleResize","ioDispatchCallback","handleVisibilityChanged","resizeObserver","getResizeObserver","intersectionObserver","getIntersectionObserver","rootMargin","getClientInfo","ClientInfo","sdk","ClientInfo_SDK","JS","emptyVideoStreamTrack","getEmptyVideoStreamTrack","createDummyVideoStreamTrack","paintContent","canvas","getContext","fillRect","beginPath","arc","PI","closePath","fillStyle","fill","dummyStream","captureStream","dummyTrack","emptyAudioStreamTrack","getEmptyAudioStreamTrack","oscillator","createOscillator","gain","createGain","setValueAtTime","dst","createMediaStreamDestination","Future","futureBase","onFinally","__awaiter","createAudioAnalyser","cloneTrack","smoothingTimeConstant","minDecibels","maxDecibels","audioContext","streamTrack","mediaStreamSource","calculateVolume","getByteFrequencyData","sum","amplitude","pow","volume","sqrt","cleanup","isVideoCodec","maybeCodec","unwrapConstraint","toWebsocketUrl","toHttpUrl","extractTranscriptionSegments","transcription","firstReceivedTimesMap","segments","text","language","startTime","endTime","final","firstReceivedTime","lastReceivedTime","extractChatMessage","timestamp","editTimestamp","getDisconnectReasonFromConnectionError","LeaveRequest","Cancelled","DisconnectReason","CLIENT_INITIATED","NotAllowed","USER_REJECTED","ServerUnreachable","JOIN_FAILURE","UNKNOWN_REASON","defaultId","DeviceManager","_previousDevices","getInstance","instance","previousDevices","getDevices","kind_1","_this","requestPermissions","userMediaPromiseMap","hasDeviceInUse","isDummyDeviceOrEmpty","device","noLabel","isRelevant","permissionsToAcquire","normalizeDeviceId","groupId","defaultDevice","mediaDeviceKinds","defaultDimensionsTimeout","LocalTrack","_sender","_constraints","userProvidedTrack","manuallyStopped","_isUpstreamPaused","handleTrackMuteEvent","debouncedTrackMuteHandler","debounce","pauseUpstream","handleTrackUnmuteEvent","resumeUpstream","handleEnded","reacquireTrack","Ended","providedByUser","muteLock","Mutex","pauseUpstreamLock","processorLock","restartLock","setMediaStreamTrack","getConstraints","dimensions","isUpstreamPaused","isUserProvided","processedTrack","getSourceTrackSettings","newTrack","unlock","processorElement","restart","replaceTrack","waitForDimensions","timeout","started","dims","setDeviceId","restartTrack","getDeviceId","_this2","normalize","mute","setTrackMuted","unmute","userProvidedOrOptions","stopProcessor","streamConstraints","Restarted","Muted","Unmuted","needsReAcquisition","_super","destroy","UpstreamPaused","UpstreamResumed","getRTCStatsReport","statsReport","setProcessor","processor_1","_this3","showProcessedStreamLocally","processorOptions","TrackProcessorUpdate","getProcessor","_this4","keepElement","remove","E2EEManager","onWorkerMessage","ev","EncryptionError","keyProvider","postKey","encryptionEnabled","room","localParticipant","identity","ParticipantEncryptionStatusChanged","participant","getParticipantByIdentity","onWorkerError","worker","setup","setupEventListeners","keyProviderOptions","loglevel","onmessage","onerror","postMessage","setParticipantCryptorEnabled","postEnable","setSifTrailer","trailer","postSifTrailer","setupEngine","engine","RTPVideoMapUpdate","rtpMap","postRTPMap","TrackPublished","pub","encryption","Encryption_Type","NONE","ConnectionStateChanged","ConnectionState","Connected","remoteParticipants","trackPublications","TrackUnsubscribed","TrackSubscribed","setupE2EEReceiver","SignalConnected","isE2EEEnabled","LocalTrackPublished","publication","setupE2EESender","participantId","postRatchetRequest","isPublisher","enableMsg","ReferenceError","remoteId","handleReceiver","handleSender","transform","writableStream","readable","readableStream","receiverStreams","senderStreams","QueueTaskStatus","AsyncQueue","pendingTasks","taskMutex","nextTaskIndex","run","task","taskInfo","enqueuedAt","WAITING","executedAt","RUNNING","COMPLETED","flush","snapshot","passThroughQueueSignals","canPassThroughQueue","canPass","SignalConnectionState","SignalClient","currentState","isDisconnected","DISCONNECTING","DISCONNECTED","isEstablishingConnection","CONNECTING","RECONNECTING","getNextRequestId","_requestId","useJSON","rtt","resetCallbacks","onAnswer","onLeave","onLocalTrackPublished","onLocalTrackUnpublished","onNegotiateRequested","onOffer","onRemoteMuteChanged","onSubscribedQualityUpdate","onTokenRefresh","onTrickle","onClose","Signal","requestQueue","queuedRequests","closingLock","connectionLock","token","abortSignal","res","reconnect","clearPingInterval","reconnectReason","connectOptions","clientInfo","createConnectionParams","abortHandler","wsTimeout","websocketTimeout","aborted","ws","WebSocket","binaryType","onopen","CONNECTED","resp","fetch","toFixed","handleWSError","SignalResponse","shouldProcessMessage","pingTimeoutDuration","pingTimeout","pingIntervalDuration","pingInterval","interval","startPingInterval","signalLatency","handleSignalResponse","onclose","wasClean","handleOnClose","updateState","closePromise","CLOSING","race","sendOffer","offer","offerSdp","sendRequest","toProtoSessionDescription","sendAnswer","answer","answerSdp","sendIceCandidate","TrickleRequest","candidateInit","sendMuteTrack","MuteTrackRequest","sendAddTrack","sendUpdateLocalMetadata","metadata_1","name_1","metadata","requestId","UpdateParticipantMetadata","sendUpdateTrackSettings","settings","sendUpdateSubscription","sub","sendSyncState","sync","sendUpdateVideoLayers","layers","UpdateVideoLayers","sendUpdateSubscriptionPermissions","allParticipants","trackPermissions","SubscriptionPermission","sendSimulateScenario","scenario","sendPing","Ping","sendUpdateLocalAudioTrack","features","UpdateLocalAudioTrack","sendLeave","action","LeaveRequest_Action","DISCONNECT","message_1","fromQueue","canQueue","OPEN","SignalRequest","pingHandled","sd","fromProtoSessionDescription","onParticipantUpdate","participants","onSpeakersChanged","speakers","onRoomUpdate","onConnectionQuality","onStreamStateUpdate","onSubscriptionPermissionUpdate","onSubscriptionError","lastPingTimestamp","resetPingTimeout","onRequestResponse","onLocalTrackSubscribed","msgCase","setReconnected","onCloseCallback","clearPingTimeout","toUTCString","rsd","SessionDescription","URLSearchParams","autoSubscribe","deviceModel","browserVersion","adaptiveStream","connection","grammar","grammarModule","reg","rate","subtype","config","sessionConfig","str","raddr","tcptype","generation","dir2","clksrcExt","mediaClockValue","rateNumerator","rateDenominator","objs","toIntIfInt","attachProperties","rawName","parseReg","content","needsBlank","keyLocation","require$$0","validLine","session","rtp","fmtp","paramReducer","acc","parseParams","parseFmtpConfig","parsePayloads","parseRemoteCandidates","candidates","parseImageAttributes","parseSimulcastStreamList","scid","paused","formatRegExp","formatStr","x","makeLine","defaultOuterOrder","defaultInnerOrder","payloads","outerOrder","innerOrder","parser","require$$1","require$$2","lib","write","startBitrateForSVC","debounceInterval","PCEvents","NegotiationStarted","NegotiationComplete","RTPVideoPayloadTypes","PCTransport","createPC","ddExtID","pendingCandidates","restartingIce","renegotiate","trackBitrates","remoteStereoMids","remoteNackMids","negotiate","createAndSendOffer","onconnectionstatechange","oniceconnectionstatechange","onicegatheringstatechange","ondatachannel","onnegotiationneeded","onsignalingstatechange","onicecandidate","ontrack","onIceCandidate","onicecandidateerror","onIceCandidateError","onIceConnectionStateChange","onSignalingStatechange","onConnectionStateChange","onDataChannel","onTrack","isICEConnected","remoteDescription","mungedSDP","stereoMids","nackMids","extractStereoAndNackAudioFromOffer","sdpParsed","trackbr","codecPayload","payload","fmtpFound","attr","maxbr","setMungedSDP","iceRestart","currentSD","ensureIPAddrMatchVersion","ensureAudioNackAndStereo","msid","ensureVideoDDExtensionForSVC","startBitrate","round","createAndSetAnswer","dataChannelDict","transceiverInit","setTrackCodecBitrate","setConfiguration","rtcConfig","canRemoveTrack","getConnectionState","getICEConnectionState","getSignallingState","getLocalDescription","localDescription","getRemoteDescription","getConnectedAddress","selectedCandidatePairId","candidatePairs","selected","selectedID","remoteCandidateId","munged","remote","originalSdp","remoteSdp","ddFound","maxID","opusPayload","rtcpFb","isV6","defaultVideoCodec","publishDefaults","audioPreset","dtx","red","forceStereo","simulcast","screenShareEncoding","stopMicTrackOnMute","videoCodec","backupCodec","autoGainControl","echoCancellation","noiseSuppression","voiceIsolation","roomOptionDefaults","dynacast","stopLocalTrackOnUnpublish","reconnectPolicy","disconnectOnPageLeave","webAudioMix","roomConnectOptionDefaults","maxRetries","peerConnectionTimeout","PCTransportState","PCTransportManager","needsPublisher","isPublisherConnectionRequired","needsSubscriber","isSubscriberConnectionRequired","subscriberPrimary","previousState","connectionStates","requiredTransports","st","FAILED","CLOSED","NEW","onStateChange","publisher","subscriber","PCManager","SignalTarget","PUBLISHER","SUBSCRIBER","onPublisherOffer","remoteOfferLock","requirePublisher","require","requireSubscriber","createAndSendPublisherOffer","setPublisherAnswer","triggerIceRestart","createSubscriberAnswerFromOffer","RTCSdpType","updateConfiguration","ensurePCTransportConnection","abortController","transport","ensureTransportConnected","negotiationTimeout","signal","addPublisherTransceiver","addPublisherTrack","createPublisherDataChannel","transports","pcTransport_1","abortController_1","pcTransport","connectTimeout","monitorFrequency","computeBitrate","currentStats","prevStats","bytesNow","bytesPrev","bytesReceived","bytesSent","LocalAudioTrack","enhancedNoiseCancellation","isKrispNoiseFilterEnabled","stopOnMute","monitorSender","getSenderStats","handleKrispNoiseFilterEnable","AudioTrackFeatureUpdate","AudioTrackFeature","TF_ENHANCED_NOISE_CANCELLATION","handleKrispNoiseFilterDisable","checkForSilence","deviceHasChanged","startMonitor","setAudioContext","audioStats","packetsSent","packetsLost","roundTripTime","jitter","trackIsSilent","AudioSilenceDetected","mediaTrackToLocalTrack","LocalVideoTrack","presets169","presets43","presetsScreenShare","defaultSimulcastPresets169","defaultSimulcastPresets43","computeDefaultScreenShareSimulcastPresets","fromPreset","fps","videoRids","computeVideoEncodings","isScreenShare","videoEncoding","useSimulcast","scalabilityMode","determineAppropriateEncoding","sourceFramerate","sm","ScalabilityMode","spatial","bitratesRatio","suffix","networkPriority","presets","sortPresets","screenShareSimulcastLayers","defaultSimulcastLayers","videoSimulcastLayers","midPreset","lowPreset","encodingsFromPresets","computeTrackBackupEncodings","serverRequested","presetsForResolution","preset","aspect","abs","canSetPriority","topFramerate","notifyOnce","aEnc","bEnc","results","temporal","getDefaultDegradationPreference","refreshSubscribedCodecAfterNewCodec","degradationPreference","setDegradationPreference","simulcastCodecs","statsMap","totalBitrate","senderLock","isSimulcast","signalClient","__asyncValues","_g","next","done","sc","items","vs","frameHeight","frameWidth","framesPerSecond","framesSent","firCount","pliCount","nackCount","qualityLimitationReason","qualityLimitationDurations","qualityLimitationResolutionChanges","retransmittedPacketsSent","targetBitrate","setPublishingQuality","maxQuality","qualities","q","LOW","HIGH","SubscribedQuality","quality","setPublishingLayers","_h","preference","addSimulcastTrack","simulcastCodecInfo","setSimulcastTrackSender","subscribedCodecs","setPublishingCodecs","currentCodec","newCodecs","codecs_1","codecs_1_1","setPublishingLayersForSender","senderEncodings","hasChanged","closableSpatial","videoQualityForRid","subscribedQuality","active","maxFrameRate","MEDIUM","videoLayersFromEncodings","svc","VideoLayer","bitrate","encodingSM","resRatio","scale","lossyDataChannel","reliableDataChannel","minReconnectWait","leaveReconnect","PCState","RTCEngine","isClosed","_isClosed","pendingReconnect","reconnectTimeout","fullReconnectOnNext","pcState","New","pendingTrackResolvers","reconnectAttempts","reconnectStart","attemptingReconnect","joinAttempts","maxJoinAttempts","shouldFailNext","handleDataChannel","reliableDCSub","lossyDCSub","handleDataMessage","dataProcessLock","Blob","arrayBuffer","dp","DataPacket","ActiveSpeakersUpdate","applyUserDataCompat","DataPacketReceived","handleDataError","currentTarget","channelKind","maxRetransmits","ErrorEvent","handleBufferedAmountLow","DataPacket_Kind","LOSSY","RELIABLE","updateAndEmitDCBufferStatus","handleDisconnect","disconnectReason","disconnect","Disconnected","delay","getNextRetryDelay","elapsedMs","clearReconnectTimeout","regionUrlProvider","updateToken","attemptReconnect","waitForRestarted","onRestarted","onDisconnected","isBufferStatusLow","dcBufferStatus","DCBufferStatusChanged","dataChannelForKind","bufferedAmount","bufferedAmountLowThreshold","handleBrowserOnLine","client","ReconnectReason","RR_SIGNAL_DISCONNECTED","Engine","expSignalLatency","registerOnLineListener","updates","ParticipantUpdate","update","ConnectionQualityUpdate","RoomUpdate","SubscriptionError","SubscriptionPermissionUpdate","SpeakersChanged","StreamStateChanged","response","SignalRequestResponse","latestJoinResponse","roomID","pID","signalOpts","setupSignalClientCallbacks","joinResponse","pcManager","configure","fastPublish","clientConfiguration","Closing","deregisterOnLineListener","clearPendingReconnect","cleanupPeerConnections","cleanupClient","dcCleanup","onbufferedamountlow","onclosing","lossyDC","reliableDC","publicationTimeout","updateMuteStatus","dataSubscriberReadyState","getConnectedServerAddress","setRegionUrlProvider","provider","participantSid","makeRTCConfiguration","TransportsCreated","publisherState","subscriberState","publisherConnectionPromise","shouldEmit","RR_SUBSCRIBER_FAILED","RR_PUBLISHER_FAILED","isSignalSevered","isPCSevered","Offline","MediaTrackAdded","supportOptionalDatachannel","serverInfo","createDataChannels","LocalTrackUnpublished","LocalTrackSubscribed","RemoteMute","SubscribedQualityUpdate","leave","regions","setServerReportedRegions","RECONNECT","RESUME","serverResponse","e2eeEnabled","encodedInsertableStreams","rtcIceServers","iceServer","rtcIceServer","credential","forceRelay","ClientConfigSetting","ENABLED","iceTransportPolicy","continualGatheringPolicy","ordered","createSender","createTransceiverRTCRtpSender","createRTCRtpSender","createSimulcastSender","simulcastTrack","createSimulcastTransceiverSender","resumeConnection","DISABLED","restartConnection","recoverable","SignalReconnectError","RR_UNKNOWN","regionUrl","Restarting","SignalRestarted","waitForPCReconnected","resetAttempts","nextRegionUrl","getNextBestRegionUrl","Resuming","SignalResumed","Resumed","waitForPCInitialConnection","Reconnecting","sendDataPacket","packet","ensurePublisherConnected","ensureDataTransportConnected","transportName","needNegotiation","targetChannel","verifyTransport","AbortController","handleClosed","abort","rtpTypes","remoteTracks","localTracks","previousAnswer","previousOffer","trackSids","trackSidsDisabled","isDesired","SyncState","subscription","UpdateSubscription","subscribe","participantTracks","publishTracks","dataChannels","dataChannelsInfo","failNext","getInfo","DataChannelInfo","newObj","oldObj","destinationIdentities","RegionUrlProvider","lastUpdateAt","settingsCacheTime","attemptedRegions","URL","getServerUrl","regionSettings","fetchRegionSettings","regionsLeft","region","attempted","nextRegion","regionSettingsResponse","getCloudConfigUrl","headers","authorization","statusText","host","RpcError","truncateBytes","MAX_MESSAGE_BYTES","MAX_DATA_BYTES","fromProto","toProto","RpcError_Proto","builtIn","ErrorCode","ErrorMessage","APPLICATION_ERROR","CONNECTION_TIMEOUT","RESPONSE_TIMEOUT","RECIPIENT_DISCONNECTED","RESPONSE_PAYLOAD_TOO_LARGE","SEND_FAILED","UNSUPPORTED_METHOD","RECIPIENT_NOT_FOUND","REQUEST_PAYLOAD_TOO_LARGE","UNSUPPORTED_SERVER","UNSUPPORTED_VERSION","MAX_PAYLOAD_BYTES","encoder","maxBytes","RemoteTrack","setMuted","setMediaStream","onRemoveTrack","playoutDelayHint","setPlayoutDelay","delayInSeconds","getPlayoutDelay","monitorReceiver","registerTimeSyncUpdate","loop","requestAnimationFrame","sources","getSynchronizationSources","rtpTimestamp","TimeSyncUpdate","RemoteAudioTrack","audioOutput","getReceiverStats","webAudioPluginNodes","sinkId","setVolume","gainNode","setTargetAtTime","_setVolume","elementVolume","getVolume","highestVolume","setSinkId","needsNewWebAudioConnection","connectWebAudio","disconnectWebAudio","setWebAudioPlugins","nodes","sourceNode","lastNode","node","destination","resume","receiverStats","concealedSamples","concealmentEvents","silentConcealedSamples","silentConcealmentEvents","totalAudioEnergy","totalSamplesDuration","REACTION_DELAY","RemoteVideoTrack","adaptiveStreamSettings","elementInfos","debouncedHandleResize","updateDimensions","isAdaptiveStream","elementInfo","HTMLElementInfo","observeElementInfo","updateVisibility","observe","stopObservingElementInfo","stopElementInfos","stopObserving","detachedElements","stopObservingElement","getDecoderImplementation","decoderImplementation","codecID","codecId","framesDecoded","framesDropped","framesReceived","packetsReceived","lastVisibilityChange","visibilityChangedAt","backgroundPause","pauseVideoInBackground","isPiPMode","pictureInPicture","isVisible","visible","lastVisible","VisibilityChanged","maxWidth","maxHeight","pixelDensity","getPixelDensity","currentElementWidth","currentElementHeight","lastDimensions","VideoDimensionsChanged","isPiP","isIntersecting","onVisibilityChanged","isElementInPiP","onEnterPiP","documentPictureInPicture","onLeavePiP","isElementInViewport","clientWidth","clientHeight","unobserve","pictureInPictureElement","win","viewportWindow","top","offsetTop","left","offsetLeft","offsetWidth","offsetHeight","hidden","display","getComputedStyle","offsetParent","pageYOffset","innerHeight","pageXOffset","innerWidth","TrackPublication","metadataMuted","handleMuted","handleUnmuted","Publication","setTrack","isSubscribed","audioTrack","videoTrack","updateInfo","simulcasted","SubscriptionStatus","PermissionStatus","LocalTrackPublication","ti","handleTrackEnded","getTrackFeatures","add","TF_AUTO_GAIN_CONTROL","TF_ECHO_CANCELLATION","TF_NOISE_SUPPRESSION","channelCount","TF_STEREO","TF_NO_DTX","ConnectionQuality","qualityFromProto","ProtoQuality","EXCELLENT","Excellent","GOOD","Good","POOR","Poor","LOST","Lost","Participant","isAgent","permissions","agent","ParticipantKind","AGENT","_kind","freeze","_attributes","STANDARD","audioLevel","isSpeaking","_connectionQuality","audioTrackPublications","videoTrackPublications","getTrackPublications","getTrackPublication","getTrackPublicationByName","connectionQuality","isCameraEnabled","isMicrophoneEnabled","isScreenShareEnabled","joinedAt","participantInfo","_setName","_setMetadata","_setAttributes","permission","setPermissions","md","changed","prevMetadata","ParticipantMetadataChanged","ParticipantNameChanged","AttributesChanged","prevPermissions","canPublish","canSubscribe","canPublishData","recorder","canPublishSources","canSubscribeMetrics","ParticipantPermissionsChanged","setIsSpeaking","speaking","lastSpokeAt","IsSpeakingChanged","setConnectionQuality","prevQuality","ConnectionQualityChanged","addTrackPublication","TrackMuted","TrackUnmuted","trackPermissionToProto","perms","TrackPermission","allTracks","allowAll","allowedTrackSids","LocalParticipant","pendingPublishing","pendingPublishPromises","participantTrackPermissions","allParticipantsAllowedToSubscribe","encryptionType","enabledPublishVideoCodecs","rpcHandlers","pendingAcks","pendingResponses","handleReconnecting","reconnectFuture","handleReconnected","updateTrackSubscriptionPermissions","handleDisconnected","handleSignalRequestResponse","targetRequest","pendingSignalRequests","RequestResponse_Reason","OK","handleDataPacket","rpcRequest","handleIncomingRpcRequest","responseTimeoutMs","rpcResponse","handleIncomingRpcResponse","rpcAck","handleIncomingRpcAck","allParticipantsAllowed","onTrackUnmuted","onTrackMuted","onTrackUpstreamPaused","onTrackUpstreamResumed","onTrackFeatureUpdate","handleSubscribedQualityUpdate","roomOptions","newCodecs_1","newCodecs_1_1","publishAdditionalCodecForTrack","subscribedQualities","handleLocalTrackUnpublished","unpublished","unpublishTrack","currentPermissions","query","onchange","activeDeviceMap","lastCameraError","cameraError","lastMicrophoneError","microphoneError","setMetadata","requestMetadataUpdate","setName","setAttributes","performance","_ref2","setCameraEnabled","publishOptions","setTrackEnabled","setMicrophoneEnabled","setScreenShareEnabled","setE2EEEnabled","GCM","republishAllTracks","republishPromise","pendingTrack","waitForPendingPublicationOfSource","createTracks","createScreenTracks","MediaDevicesError","publishPromises","localTrack","publishTrack","publishedTracks","screenAudioTrack","enableCameraAndMicrophone","mergedOptions","audioCaptureDefaults","videoCaptureDefaults","AudioStreamAcquired","isAudio","trackConstraints","conOrBool","screenVideo","contentHint","screenAudio","publishOrRepublishTrack","options_1","isRepublish","defaultConstraints","deviceKind","existingPublication","isStereoInput","isStereo","e2ee","publishPromise","publish","existingTrackOfSource","publishedTrack","mime","AddTrackRequest","disableDtx","stereo","disableRed","defaultRes","SimulcastCodec","_j","_k","trackTransceiver","rets","primaryCodecMime","updatedCodec","stopOnUnpublish","getPublicationForTrack","pubLogContext","negotiationNeeded","trackSender","clear","unpublishTracks","restartTracks","localPubs","publishData","data_1","reliable","topic","UserPacket","publishDtmf","digit","SipDTMF","sendChatMessage","randomUUID","ChatMessageModel","ChatMessage","editChatMessage","editText","originalMessage","performRpc","destinationIdentity","responseTimeout","_ref3","maxRoundTripLatency","_this5","publishRpcRequest","ackTimeoutId","responseTimeoutId","responsePayload","responseError","registerRpcMethod","unregisterRpcMethod","setTrackSubscriptionPermissions","callerIdentity","publishRpcAck","publishRpcResponse","RpcRequest","RpcResponse","RpcAck","handleParticipantDisconnected","pendingIdentity","setEnabledPublishCodecs","mutedOnServer","waitForPendingTimeout","publishPromiseEntry","_ref4","RemoteTrackPublication","allowed","disabled","currentVideoQuality","handleVisibilityChange","emitTrackUpdate","handleVideoDimensionsChange","videoDimensions","subscribed","setSubscribed","prevStatus","subscriptionStatus","prevPermission","permissionStatus","ParticipantTracks","emitSubscriptionUpdateIfChanged","emitPermissionUpdateIfChanged","Unsubscribed","Desired","Subscribed","Allowed","setEnabled","isManualOperationAllowed","setVideoQuality","setVideoDimensions","setVideoFPS","videoQuality","prevTrack","setAllowed","setSubscriptionError","SubscriptionFailed","prevMetadataMuted","previousStatus","currentStatus","SubscriptionStatusChanged","previousPermissionStatus","currentPermissionStatus","SubscriptionPermissionChanged","UpdateTrackSettings","UpdateSettings","RemoteParticipant","fromParticipantInfo","pi","rpID","remoteParticipant","volumeMap","TrackSubscriptionPermissionChanged","TrackSubscriptionStatusChanged","previousTrack","TrackSubscriptionFailed","audioPublication","addSubscribedMediaTrack","triesLeft","getTrackPublicationBySid","isVideo","hasMetadata","validTracks","newTracks","oldTrack","sendUnpublish","TrackUnpublished","setAudioOutput","promises","connectionReconcileFrequency","Room","activeSpeakers","audioEnabled","isVideoPlaybackBlocked","bufferedEvents","isResuming","unlockDisconnect","disconnectLock","connectFuture","setAndEmitConnectionState","Connecting","connectFn","attemptConnection","nextUrl","recreateEngine","clearConnectionFutures","connectSignal","e2eeManager","serverVersion","serverRegion","roomSid","applyJoinResponse","enabledPublishCodecs","sifTrailer","handleParticipantUpdates","otherParticipants","handleRoomUpdate","maybeCreateEngine","acquireAudioContext","connOptions","setupLocalParticipantEvents","resultingError","onPageLeave","registerConnectionReconcile","args_1","stopTracks","startAudio","elements","audioId","dummyAudioEl","getElementById","body","append","handleAudioPlaybackStarted","handleAudioPlaybackFailed","startVideo","handleVideoPlaybackStarted","handleVideoPlaybackFailed","handleRestarting","clearConnectionReconcile","handleSignalRestarted","Reconnected","emitBufferedEvents","participantInfos","sidToIdentity","ParticipantInfo_State","getOrCreateParticipant","handleActiveSpeakersUpdate","seenSids","speaker","getRemoteParticipantBySid","emitWhenConnected","ActiveSpeakersChanged","handleSpeakersChanged","speakerUpdates","lastSpeakers","handleStreamStateUpdate","streamStateUpdate","streamStates","newStreamState","TrackStreamStateChanged","handleSubscriptionPermissionUpdate","handleSubscriptionError","handleUserPacket","handleTranscription","handleSipDtmf","handleChatMessage","handleMetrics","userPacket","DataReceived","SipDTMFReceived","bufferedSegments","_remoteParticipant","transcribedParticipantIdentity","transcriptionReceivedTimes","TranscriptionReceived","chatMessage","metrics","MetricsReceived","canPlaybackAudio","AudioPlaybackStatusChanged","VideoPlaybackStatusChanged","handleDeviceChange","availableDevices","availableDevice","previousDevice","getActiveDevice","ActiveDeviceChanged","kinds","devicesOfKind","activeDevice","switchActiveDevice","deviceInfo","MediaDevicesChanged","oldRoom","roomInfo","RoomMetadataChanged","activeRecording","RecordingStatusChanged","handleConnectionQualityUpdate","onLocalParticipantMetadataChanged","onLocalParticipantNameChanged","onLocalAttributesChanged","changedAttributes","ParticipantAttributesChanged","onLocalTrackMuted","onLocalTrackUnmuted","onTrackProcessorUpdate","onPublish","onLocalTrackRestarted","LocalAudioSilenceDetected","onLocalConnectionQualityChanged","onMediaDevicesError","onLocalParticipantPermissionsChanged","onLocalChatMessageSent","setupE2EE","cleanupRegistry","register","isRecording","getSid","numParticipants","numPublishers","onTrackAdded","SignalReconnecting","updateSubscriptions","subscribedSid","trackPublication","getLocalDevices","prepareConnection","simulateScenario","postAction","SimulateScenario","canPlaybackVideo","deviceId_1","success","needsUpdateWithoutTracks","deviceConstraint","prevDeviceId","reconnectedHandler","shouldStopTracks","ParticipantDisconnected","newContextIsRunning","createParticipant","existingParticipant","wasUpdated","ParticipantConnected","consecutiveFailures","connectionReconcileInterval","numFailures","closed","transportsConnected","STATE_MISMATCH","_len2","_key2","simulateParticipants","useRealTracks","participantOptions","aspectRatios","RoomModel","emptyTimeout","maxParticipants","creationTime","turnPassword","enabledCodecs","ParticipantInfo","camPub","TrackInfo","audioPub","dummyVideo","_len3","_key3","minimizedArgs","mapArgs","FinalizationRegistry","CheckStatus","Checker","IDLE","logs","errorsAsWarnings","onComplete","setStatus","perform","appendWarning","appendError","SKIPPED","isSuccess","SUCCESS","appendMessage","createLocalTracks","mediaPromise","createLocalVideoTrack","createLocalAudioTrack","createLocalScreenTracks","PublishAudioCheck","numPackets","mediaType","PublishVideoCheck","ReconnectCheck","reconnectingTriggered","reconnected","reconnectResolver","TURNCheck","joinRes","hasTLS","hasTURN","hasSTUN","WebRTCCheck","hasTcp","hasIpv4Udp","prevTrickle","isIPPrivate","RTCPeerConnectionIceErrorEvent","errorCode","errorText","second","WebSocketCheck","edition","ServerInfo_Edition","Cloud","ConnectionCheck","checkResults","getNextCheckId","nextId","updateCheck","checkId","getResults","createAndRunCheck","check","handleUpdate","checkWebsocket","checkWebRTC","checkTURN","checkReconnect","checkPublishAudio","checkPublishVideo","facingModeFromLocalTrack","trackSettings","defaultFacingMode","confidence","rawFacingMode","isFacingModeValue","labelAnalysisResult","facingModeFromDeviceLabel","knownDeviceLabels","knownDeviceLabelSections","deviceLabel","section","allowedValues"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97]}},
    {"offset": {"line": 23778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}